class GameData:
    def __init__(self):
        self.command_dict = {
            "move_to_settlement": "Identifier: move_to_settlement<br>Parameters: settlement name<br>Description: Moves the camera position to a settlement<br>Sample use: move_to_settlement Rome<br>Class: MOVE_TO_SETTLEMENT<br>Implemented: Yes",
            "snap_to_settlement": "Identifier: snap_to_settlement<br>Parameters: settlement name<br>Description: Snaps camera position to a settlement<br>Sample use: snap_to_settlement Rome<br>Class: SNAP_TO_SETTLEMENT<br>Implemented: Yes",
            "clear_restrict_strat_movement": "Identifier: clear_restrict_strat_movement<br>Parameters: <br>Description: Clear the restricted movement<br>Sample use: clear_restrict_strat_movement<br>Class: CLEAR_RESTRICT_STRAT_MOVEMENT<br>Implemented: Yes",
            "restrict_strat_movement": "Identifier: restrict_strat_movement<br>Parameters: faction name, strategy map position x and y<br>Description: Restricts a given faction, so they could only move to where specified<br>Sample use: restrict_strat_movement romans_julii, 89, 70<br>Class: RESTRICT_STRAT_MOVEMENT<br>Implemented: Yes",
            "disable_diplomacy_ui": "Identifier: disable_diplomacy_ui<br>Parameters: <br>Description: disable all diplomacy ui elements<br>Sample use: disable_diplomacy_ui<br>Class: DISABLE_DIPLOMACY_UI<br>Implemented: Yes",
            "enable_diplomacy_voices": "Identifier: enable_diplomacy_voices<br>Parameters: on/off<br>Description: enable or disable all diplomacy barks<br>Sample use: enable_diplomacy_voices on<br>Class: ENABLE_DIPLOMACY_VOICES<br>Implemented: Yes",
            "enable_unit_voices": "Identifier: enable_unit_voices<br>Parameters: on/off<br>Description: enable or disable all unit command lines<br>Sample use: enable_unit_voices on<br>Class: ENABLE_UNIT_VOICES<br>Implemented: Yes",
            "hide_ui_element": "Identifier: hide_ui_element<br>Parameters: ui ID<br>Description: Hides a given UI element<br>Sample use: hide_ui_element faction_button<br>Class: HIDE_UI_ELEMENT<br>Implemented: Yes",
            "show_ui_element": "Identifier: show_ui_element<br>Parameters: ui ID<br>Description: Shows a given UI element<br>Sample use: show_ui_element faction_button<br>Class: SHOW_UI_ELEMENT<br>Implemented: Yes",
            "enable_ui_card": "Identifier: enable_ui_card<br>Parameters: card type (unit | character | building), id, nth instance<br>Description: Enables a given UI card<br>Sample use: enable_ui_card building, militia_barracks, 0<br>Class: ENABLE_UI_CARD<br>Implemented: Yes",
            "disable_ui_card": "Identifier: disable_ui_card<br>Parameters: card type (unit | character | building), id, nth instance<br>Description: Disables a given UI card<br>Sample use: disable_ui_card building, militia_barracks, 0<br>Class: DISABLE_UI_CARD<br>Implemented: Yes",
            "disable_all_ui_cards": "Identifier: disable_all_ui_cards<br>Parameters: card type (unit | character | building)<br>Description: Disable all ui cards of the given type<br>Sample use: disable_all_ui_cards building<br>Class: DISABLE_ALL_UI_CARDS<br>Implemented: Yes",
            "enable_all_ui_cards": "Identifier: enable_all_ui_cards<br>Parameters: card type (unit | character | building)<br>Description: Enables all ui cards of the given type<br>Sample use: enable_all_ui_cards building<br>Class: ENABLE_ALL_UI_CARDS<br>Implemented: Yes",
            "disable_agent_hub_all": "Identifier: disable_agent_hub_all<br>Parameters: <br>Description: Disables all of the given targets from being clickable<br>Sample use: disable_agent_hub_all (agent | mission)<br>Class: DISABLE_AGENT_HUB_ALL<br>Implemented: Yes",
            "enable_agent_hub_all": "Identifier: enable_agent_hub_all<br>Parameters: <br>Description: Enable all of the targets from being clickable<br>Sample use: enable_agent_hub_all (agent | mission)<br>Class: ENABLE_AGENT_HUB_ALL<br>Implemented: Yes",
            "disable_agent_hub": "Identifier: disable_agent_hub<br>Parameters: agent name<br>Description: Disable an agent with a given name<br>Sample use: disable_agent_hub_agent Decius Curtius<br>Class: DISABLE_AGENT_HUB_AGENT<br>Implemented: Yes",
            "enable_agent_hub": "Identifier: enable_agent_hub<br>Parameters: agent name<br>Description: Enable an agent with a given name<br>Sample use: enable_agent_hub_agent Decius Curtius<br>Class: ENABLE_AGENT_HUB_AGENT<br>Implemented: Yes",
            "point_at_agent_hub": "Identifier: point_at_agent_hub<br>Parameters: (Agent | Mission), (character name | nth), [circle|square|arrow], [direction]<br>Description: Points at the agent hub element<br>Sample use: point_at_agent_hub Mission, 2<br>Class: POINT_AT_AGENT_HUB<br>Implemented: Yes",
            "set_marriage_allowed": "Identifier: set_marriage_allowed<br>Parameters: on/off<br>Description: Controls if the automatic marriage proposals are triggered at the start of the round<br>Sample use: set_marriage_allowed on<br>Class: SET_MARRIAGES_ALLOWED<br>Implemented: Yes",
            "trigger_marriage_proposal": "Identifier: trigger_marriage_proposal<br>Parameters: <br>Description: Triggers a marriage proposal for a player.<br>Sample use: trigger_marriage_proposal<br>Class: TRIGGER_MARRIAGE_PROPOSAL<br>Implemented: Yes",
            "deselect_current_selection": "Identifier: deselect_current_selection<br>Parameters: <br>Description: Deselect the currently selected settlement, unit, etc.<br>Sample use: deselect_current_selection<br>Class: DESELECT_CURRENT_SELECTION<br>Implemented: Yes",
            "force_autoresolve_outcome": "Identifier: force_autoresolve_outcome<br>Parameters: target faction<br>Description: Forces the outcome for the given faction<br>Sample use: force_autoresolve_outcome roman_julii<br>Class: FORCE_AUTORESOLVE_OUTCOME<br>Implemented: Yes",
            "force_diplomacy": "Identifier: force_diplomacy<br>Parameters: (accept | reject), (yes | no)<br>Description: Forces the ai to either accept or reject diplomacy requests<br>Sample use: force_diplomacy accept, yes<br>Class: FORCE_DIPLOMACY<br>Implemented: Yes",
            "create_mercenary_pool": "Identifier: create_mercenary_pool<br>Parameters: <br>Description: <br>Sample use: <br>Class: CREATE_MERCENARY_POOL<br>Implemented: Yes",
            "force_agent_succeed": "Identifier: force_agent_succeed<br>Parameters: yes/no<br>Description: Ensures that the chances of agent actions are as normal or 100%<br>Sample use: force_agent_succeed yes<br>Class: FORCE_AGENT_SUCCEED<br>Implemented: Yes",
            "allow_campaign_battles": "Identifier: allow_campaign_battles<br>Parameters: yes/no<br>Description: Allows battles to be started/not started from campaign UI. This is a workaround for how we start the tutorial battles<br>Sample use: allow_campaign_battles yes<br>Class: ALLOW_CAMPAIGN_BATTLES<br>Implemented: Yes",
            "spawn_character_child": "Identifier: spawn_character_child<br>Parameters: faction, age, birth_season, father, name, surname<br>Description: Spawns a new character with given parameters and a given father<br>Sample use: spawn_character_child romans_julii, age 15, birth_season spring, father Flavius Julius, name Gnaeus, surname Julius<br>Class: SPAWN_CHARACTER_CHILD<br>Implemented: Yes",
            "stop_point_at_indicator": "Identifier: stop_point_at_indicator<br>Parameters: <br>Description: <br>Sample use: <br>Class: STOP_POINT_AT_INDICATOR<br>Implemented: Yes",
            "stop_all_point_at_indicators": "Identifier: stop_all_point_at_indicators<br>Parameters: <br>Description: <br>Sample use: <br>Class: STOP_ALL_POINT_INDICATORS<br>Implemented: Yes",
            "set_battle": "Identifier: set_battle<br>Parameters: file name<br>Description: <br>Sample use: <br>Class: SET_BATTLE<br>Implemented: Yes",
            "restrict_battle_movement": "Identifier: restrict_battle_movement<br>Parameters: (circle, (location &lt;x&gt;, &lt;y&gt;) | (label &lt;label&gt;)<br>Description: <br>Sample use: <br>Class: RESTRICT_BATTLE_MOVEMENT<br>Implemented: Yes",
            "clear_restrict_battle_movement": "Identifier: clear_restrict_battle_movement<br>Parameters: (circle, &lt;x&gt;, &lt;y&gt;)<br>Description: <br>Sample use: <br>Class: CLEAR_RESTRICT_BATTLE_MOVEMENT<br>Implemented: Yes",
            "point_at_diplomacy_offer": "Identifier: point_at_diplomacy_offer<br>Parameters: offer id, [circle|square|arrow], scale X,Y<br>Description: Points at the offer in the diplomacy panel<br>Sample use: point_at_diplomacy_offer, diplomacy_item_map_information<br>Class: POINT_AT_DIPLOMACY_OFFER<br>Implemented: Yes",
            "point_at_move_retinue": "Identifier: point_at_move_retinue<br>Parameters: (Character | Ancillary), character name, [circle|square|arrow]<br>Description: Points at the target in move retinue<br>Sample use: point_at_move_retinue Character, 2<br>Class: POINT_AT_MOVE_RETINUE<br>Implemented: Yes",
            "disable_move_retinue_all": "Identifier: disable_move_retinue_all<br>Parameters: (Character | Ancillary)<br>Description: Disables all of the given targets from being clickable<br>Sample use: disable_move_retinue_all (Character | Ancillary)<br>Class: DISABLE_MOVE_RETINUE_ALL<br>Implemented: Yes",
            "enable_move_retinue_all": "Identifier: enable_move_retinue_all<br>Parameters: (Character | Ancillary)<br>Description: Enable all of the given targets from being clickable<br>Sample use: disable_move_retinue_all (Character | Ancillary)<br>Class: ENABLE_MOVE_RETINUE_ALL<br>Implemented: Yes",
            "disable_move_retinue": "Identifier: disable_move_retinue<br>Parameters: (Character | Ancillary), name<br>Description: Disable a specified ancillary<br>Sample use: disable_move_retinue Character, Flavius Julius<br>Class: DISABLE_MOVE_RETINUE<br>Implemented: Yes",
            "enable_move_retinue": "Identifier: enable_move_retinue<br>Parameters: (Character | Ancillary), name<br>Description: Enable a specified ancillary<br>Sample use: enable_move_retinue Character, Flavius Julius<br>Class: ENABLE_MOVE_RETINUE<br>Implemented: Yes",
            "block_unit_selection": "Identifier: block_unit_selection<br>Parameters: switch, unit<br>Description: Enable/disable ability to select units.<br>Sample use: block_unit_selection on player_archers<br>Class: BLOCK_UNIT_SELECTION<br>Implemented: Yes",
            "forced_gate_success": "Identifier: forced_gate_success<br>Parameters: boolean, chance(optional)<br>Description: Sets the gate opening chance by a spy to a certain value<br>Sample use: forced_gate_success on, 100<br>Class: FORCED_GATE_SUCCESS<br>Implemented: Yes",
            "strat_selection_unblocker": "Identifier: strat_selection_unblocker<br>Parameters: Settlement|Character, On|Off, Settlement/Character name<br>Description: Adds the given character/settlement to a list of selectable items on the strat map. All units are unblocked by default until the first is added with this command - then they're all blocked.<br>Sample use: strat_selection_unblocker settlement on Ariminum<br>Class: STRAT_SELECTION_UNBLOCKER<br>Implemented: Yes",
            "clear_strat_selection_unblocker": "Identifier: clear_strat_selection_unblocker<br>Parameters: <br>Description: Clears the list of selectable items on the strat map, making everything selectable.<br>Sample use: clear_strat_selection_unblocker<br>Class: CLEAR_STRAT_SELECTION_UNBLOCKER<br>Implemented: Yes",
            "open_stop_tutorial_confirmation_dialog": "Identifier: open_stop_tutorial_confirmation_dialog<br>Parameters: <br>Description: Open a confirmation dialog that allows the user to stop the tutorial.<br>Sample use: open_stop_tutorial_confirmation_dialog<br>Class: OPEN_STOP_TUTORIAL_CONFIRMATION_DIALOG<br>Implemented: Yes",
            "set_label": "Identifier: set_label<br>Parameters: <br>Description: Set a label that can be jumped to with a Goto statement<br>Sample use: set_label location<br>Class: SET_LABEL<br>Implemented: Yes",
            "goto": "Identifier: goto<br>Parameters: <br>Description: jump to a place in the script marked by a label<br>Sample use: goto location<br>Class: GOTO<br>Implemented: Yes",
            "force_deselect_trigger": "Identifier: force_deselect_trigger<br>Parameters: <br>Description: Triggers the Item Deselected event trigger.<br>Sample use: force_deselect_trigger<br>Class: FORCE_DESELECT_TRIGGER<br>Implemented: Yes",
            "box_drag_selection": "Identifier: box_drag_selection<br>Parameters: on/off<br>Description: Switches the ability to use the box drag selection on units in battles.<br>Sample use: box_drag_selection on;<br>Class: BOX_DRAG_SELECTION<br>Implemented: Yes",
            "force_settlement_tab": "Identifier: force_settlement_tab<br>Parameters: &lt;tab name&gt; - This can be 'units', 'buildings', 'characters' or 'passengers'<br>Description: Forces the tab of the settlement ui to change to the specified one.<br>Sample use: force_settlement_tab units<br>Class: FORCE_SETTLEMENT_TAB<br>Implemented: Yes",
            "click_drag_move": "Identifier: click_drag_move<br>Parameters: on/off<br>Description: Switches the ability to use the right-click and drag movement on units in battles.<br>Sample use: click_drag_move on;<br>Class: CLICK_DRAG_MOVE<br>Implemented: Yes",
            "toggle_minimap": "Identifier: toggle_minimap<br>Parameters: <br>Description: Toggles the top-right map in the strat view.<br>Sample use: toggle_minimap;<br>Class: TOGGLE_MAP<br>Implemented: Yes",
            "close_news_panel": "Identifier: close_news_panel<br>Parameters: <br>Description: instantly closes the news panel<br>Sample use: close_news_panel;<br>Class: CLOSE_NEWS_PANEL<br>Implemented: Yes",
            "ui_card_selection_lock": "Identifier: ui_card_selection_lock<br>Parameters: on/off<br>Description: Switches the ability to select/deselect unit cards.<br>Sample use: ui_card_selection_lock on;<br>Class: UI_CARD_SELECTION_LOCK<br>Implemented: Yes",
            "disable_specific_shortcut": "Identifier: disable_specific_shortcut<br>Parameters: {element_id}, {shortcut_id}, true/false<br>Description: This will disable/enable a given keyboard shortcut for a given element (or all elements if element_id is omitted), except the key defined as being the 'quit' key (ESC by default).  See data/descr_shortcuts.txt for the element_ids that are useable<br>Sample use: disable_specific_shortcut camera rot_l true - to disable, disable_specific_shortcut camera rot_l false - to enable it again<br>Class: DISABLE_SPECIFIC_SHORTCUT<br>Implemented: Yes",
            "set_advice_page": "Identifier: set_advice_page<br>Parameters: &lt;page number&gt;<br>Description: Sets the page number of a type D advice panel. Page numbers start at 1.<br>Sample use: set_advice_page 2;<br>Class: SET_ADVICE_PAGE<br>Implemented: Yes",
            "advance_completed_tasks": "Identifier: advance_completed_tasks<br>Parameters: &lt;task number to set&gt;<br>Description: Advances the right tutorial panel list of completed tasks to the specified task.<br>Sample use: advance_completed_tasks 2<br>Class: ADVANCE_COMPLETED_TASKS<br>Implemented: Yes",
            "set_min_formation_width": "Identifier: set_min_formation_width<br>Parameters: &lt;min formation width&gt;<br>Description: Sets the minimum width that the player can have their units at.<br>Sample use: set_min_formation_width 10;<br>Class: SET_MINIMUM_UNIT_WIDTH<br>Implemented: Yes",
            "script_log": "Identifier: script_log<br>Parameters: the message to be logged<br>Description: logs a message to the console/stdout (not the in-game romeshell)<br>Sample use: script_log This is a message, use it for logging in scripts.<br>Class: FERAL_LOG<br>Implemented: Yes",
            "ai_active_set": "Identifier: ai_active_set<br>Parameters: on/off<br>Description: Turns AI on or off<br>Sample use: ai_active_set off<br>Class: AI_ACTIVE_SET<br>Implemented: Yes",
            "release_unit": "Identifier: release_unit<br>Parameters: unit_label<br>Description: Unlabels the specified unit and releases it back to player or AI control<br>Sample use: release_unit<br>Class: RELEASE_UNIT<br>Implemented: Yes",
            "hiding_enabled_set": "Identifier: hiding_enabled_set<br>Parameters: true/false<br>Description: Enables or disables unit hiding for all units<br>Sample use: hiding_enabled_set false<br>Class: HIDING_ENABLED_SET<br>Implemented: Yes",
            "swimming_enabled_set": "Identifier: swimming_enabled_set<br>Parameters: true/false<br>Description: Enables or disables swimming for all units<br>Sample use: swimming_enabled_set false<br>Class: SWIMMING_ENABLED_SET<br>Implemented: Yes",
            "pause_battle": "Identifier: pause_battle<br>Parameters: <br>Description: pauses the battle<br>Sample use: pause_battle<br>Class: PAUSE_BATTLE<br>Implemented: Yes",
            "unit_immediate_place": "Identifier: unit_immediate_place<br>Parameters: unit_label location angle_in_degrees width(optional)<br>Description: Immediately positions the unit at the given location<br>Sample use: unit_immediate_place archers1 big_hill 0 20<br>Class: UNIT_IMMEDIATE_PLACE<br>Implemented: Yes",
            "unit_order_halt": "Identifier: unit_order_halt<br>Parameters: unit_label<br>Description: orders the specified unit stop it's orders<br>Sample use: unit_order_halt cohort1<br>Class: UNIT_ORDER_HALT<br>Implemented: Yes",
            "unit_order_move": "Identifier: unit_order_move<br>Parameters: unit_label x y run(optional)<br>Description: orders the specified unit to move to the specified position<br>Sample use: unit_order_move cohort1 100 60 run<br>Class: UNIT_ORDER_MOVE<br>Implemented: Yes",
            "unit_order_move_to_orientation": "Identifier: unit_order_move_to_orientation<br>Parameters: unit_label x y width_in_men rotation_in_degrees run (optional)<br>Description: orders the specified unit to move to the specified position with a specified rotation and orientation<br>Sample use: unit_order_move_to_orientation cohort1 100 60 20 45 run<br>Class: UNIT_ORDER_MOVE_TO_ORIENTATION<br>Implemented: Yes",
            "unit_order_move_relative": "Identifier: unit_order_move_relative<br>Parameters: unit_label x y run(optional)<br>Description: orders the specified unit to move to the specified position<br>Sample use: unit_order_move_relative cohort1 0 60 run<br>Class: UNIT_ORDER_MOVE_RELATIVE<br>Implemented: Yes",
            "unit_order_attack_unit": "Identifier: unit_order_attack_unit<br>Parameters: unit_label target_unit_label run(optional)<br>Description: Orders one unit to attack another<br>Sample use: unit_order_attack_unit cavalry1 enemy4 run<br>Class: UNIT_ORDER_ATTACK_UNIT<br>Implemented: Yes",
            "unit_order_attack_closest_unit": "Identifier: unit_order_attack_closest_unit<br>Parameters: unit_label search_arc(in degrees) run(optional)<br>Description: Searches an arc in front of the unit, and attacks the closest enemy found<br>Sample use: unit_order_attack_closest_unit 15 run<br>Class: UNIT_ORDER_ATTACK_CLOSEST_UNIT<br>Implemented: Yes",
            "unit_order_change_formation": "Identifier: unit_order_change_formation<br>Parameters: unit_label formation_type (square, horde, testudo, phalanx)<br>Description: changes the specified unit's formation<br>Sample use: unit_order_change_formation legionary_cohort testudo<br>Class: UNIT_ORDER_CHANGE_FORMATION<br>Implemented: Yes",
            "unit_order_move_to_missile_range": "Identifier: unit_order_move_to_missile_range<br>Parameters: attacker_unit_label target_unit_label run(optional)<br>Description: orders the attacker to move into missile range of the target<br>Sample use: unit_order_move_to_missile_range roman_archers barb_swordsmen run<br>Class: UNIT_ORDER_MOVE_TO_MISSILE_RANGE<br>Implemented: Yes",
            "unit_order_turn": "Identifier: unit_order_turn<br>Parameters: unit_label rotation relative/absolute<br>Description: order the unit to turn to an absolute angle or by an angle relative to it's current rotation<br>Sample use: unit_order_turn roman_archers -20 relative (turns left 20 degrees)<br>Class: UNIT_ORDER_TURN<br>Implemented: Yes",
            "unit_set_morale": "Identifier: unit_set_morale<br>Parameters: unit_label morale_level (beserk/impetuous/high/firm/shaken/wavering/routing)<br>Description: sets and locks the unit's morale level<br>Sample use: unit_set_morale carthaginian_peasants wavering<br>Class: UNIT_SET_MORALE<br>Implemented: Yes",
            "unit_unset_morale": "Identifier: unit_unset_morale<br>Parameters: unit_label<br>Description: unlocks the unit's morale, the game will retake control and update the morale normally<br>Sample use: unit_unset_morale peasants4<br>Class: UNIT_UNSET_MORALE<br>Implemented: Yes",
            "unit_set_weapon_upgrade": "Identifier: unit_set_weapon_upgrade<br>Parameters: unit_label new_level<br>Description: sets the unit's weapon upgrade (0-3)<br>Sample use: unit_set_weapon_upgrade spearmen1 3<br>Class: UNIT_SET_WEAPON_UPGRADE<br>Implemented: Yes",
            "unit_set_armour_upgrade": "Identifier: unit_set_armour_upgrade<br>Parameters: unit_label new_level<br>Description: sets the unit's armour upgrade (0-3)<br>Sample use: unit_set_armour_upgrade spearmen1 3<br>Class: UNIT_SET_ARMOUR_UPGRADE<br>Implemented: Yes",
            "unit_set_experience": "Identifier: unit_set_experience<br>Parameters: unit_label new_experience_level<br>Description: sets the specified unit's experience level (0-9)<br>Sample use: unit_set_experience roman_general 7<br>Class: UNIT_SET_EXPERIENCE<br>Implemented: Yes",
            "kill_unit": "Identifier: kill_unit<br>Parameters: unit_label<br>Description: Completely wipes out the specified unit<br>Sample use: kill_unit carthaginians2<br>Class: KILL_UNIT<br>Implemented: Yes",
            "reduce_unit_strength": "Identifier: reduce_unit_strength<br>Parameters: unit_label percentage<br>Description: Kills enough men to reduce a unit to the specifies percentage of it's original strangth<br>Sample use: reduce_unit_strength carthaginians2 50<br>Class: REDUCE_UNIT_STRENGTH<br>Implemented: Yes",
            "unit_set_guard_mode": "Identifier: unit_set_guard_mode<br>Parameters: unit_label on/off<br>Description: Sets the guard melee state for the specified unit<br>Sample use: unit_set_guard_mode roman_spearmen on<br>Class: UNIT_SET_GUARD_MODE<br>Implemented: Yes",
            "unit_set_skirmish_mode": "Identifier: unit_set_skirmish_mode<br>Parameters: unit_label on/off<br>Description: Sets the skirmish melee state for the specified unit<br>Sample use: unit_set_skirmish_mode velites1 off<br>Class: UNIT_SET_SKIRMISH_MODE<br>Implemented: Yes",
            "unit_set_fire_at_will_mode": "Identifier: unit_set_fire_at_will_mode<br>Parameters: unit_label on/off<br>Description: Sets the fire-at-will melee state for the specified unit<br>Sample use: unit_set_fire_at_will_mode roman_archers on<br>Class: UNIT_SET_FIRE_AT_WILL_MODE<br>Implemented: Yes",
            "unit_set_formation_spacing": "Identifier: unit_set_formation_spacing<br>Parameters: unit_label loose/tight<br>Description: Sets the specified unit's formation spacing to loose or tight<br>Sample use: unit_set_formation_spacing roman_archers loose<br>Class: UNIT_SET_FORMATION_SPACING<br>Implemented: Yes",
            "unit_taunt": "Identifier: unit_taunt<br>Parameters: unit_label<br>Description: Makes the unit taunt<br>Sample use: unit_taunt barb_archers<br>Class: UNIT_TAUNT<br>Implemented: Yes",
            "unit_use_special_ability": "Identifier: unit_use_special_ability<br>Parameters: unit_label<br>Description: Makes the unit perform their special ability<br>Sample use: unit_use_special_ability barb_archers<br>Class: UNIT_USE_SPECIAL_ABILITY<br>Implemented: Yes",
            "unit_group_enable_automation": "Identifier: unit_group_enable_automation<br>Parameters: group_label true/false<br>Description: Sets or unsets unit group automation<br>Sample use: unit_group_enable_automation<br>Class: UNIT_GROUP_ENABLE_AUTOMATION<br>Implemented: Yes",
            "unit_group_automate_defend_position": "Identifier: unit_group_automate_defend_position<br>Parameters: group_label location radius<br>Description: Instructs an automated unit group to defend position<br>Sample use: unit_group_automate_defend_position 106 -56 75<br>Class: UNIT_GROUP_AUTOMATE_DEFEND_POSITION<br>Implemented: Yes",
            "unit_group_automate_attack": "Identifier: unit_group_automate_attack<br>Parameters: group_label enemy_unit_label<br>Description: Instructs an automated unit group to attack a specified enemy unit<br>Sample use: unit_group_automate_attack enemy_unit<br>Class: UNIT_GROUP_AUTOMATE_ATTACK<br>Implemented: Yes",
            "unit_group_immediate_place": "Identifier: unit_group_immediate_place<br>Parameters: group_label location degrees<br>Description: orders the unit group to move to the specified location<br>Sample use: unit_group_immediate_place group6 100 -60 -20<br>Class: UNIT_GROUP_IMMEDIATE_PLACE<br>Implemented: Yes",
            "unit_group_order_halt": "Identifier: unit_group_order_halt<br>Parameters: group_label<br>Description: orders the unit group to stop it's orders<br>Sample use: unit_group_order_halt group6<br>Class: UNIT_GROUP_ORDER_HALT<br>Implemented: Yes",
            "unit_group_order_move_formed": "Identifier: unit_group_order_move_formed<br>Parameters: group_label x y run(optional)<br>Description: orders the unit group to move to the specified location<br>Sample use: unit_group_order_move_formed group6 100 -60 run<br>Class: UNIT_GROUP_ORDER_MOVE_FORMED<br>Implemented: Yes",
            "unit_group_order_move_unformed": "Identifier: unit_group_order_move_unformed<br>Parameters: group_label x y run(optional)<br>Description: orders the unit group to move to the specified location<br>Sample use: unit_group_order_move_unformed group6 100 -60 run<br>Class: UNIT_GROUP_ORDER_MOVE_UNFORMED<br>Implemented: Yes",
            "unit_group_order_relative_move_formed": "Identifier: unit_group_order_relative_move_formed<br>Parameters: group_label x y run(optional)<br>Description: orders the unit group to move to the specified location<br>Sample use: unit_group_order_relative_move_formed group6 100 -60 run<br>Class: UNIT_GROUP_ORDER_RELATIVE_MOVE_FORMED<br>Implemented: Yes",
            "unit_group_order_relative_move_unformed": "Identifier: unit_group_order_relative_move_unformed<br>Parameters: group_label x y run(optional)<br>Description: orders the unit group to move to the specified location<br>Sample use: unit_group_order_relative_move_unformed group6 100 -60 run<br>Class: UNIT_GROUP_ORDER_RELATIVE_MOVE_UNFORMED<br>Implemented: Yes",
            "unit_group_move_to_missile_range_of_unit": "Identifier: unit_group_move_to_missile_range_of_unit<br>Parameters: group_label target_unit_label<br>Description: move the unit group so that at least one unit is in range of the target unit<br>Sample use: unit_group_move_to_missile_range_of_unit archer_group enemy_spearmen3<br>Class: UNIT_GROUP_MOVE_TO_MISSILE_RANGE_OF_UNIT<br>Implemented: Yes",
            "unit_group_move_to_missile_range_of_group": "Identifier: unit_group_move_to_missile_range_of_group<br>Parameters: group_label target_group_label run(optional)<br>Description: move the unit group so that at least one unit is in range of at least one unit in the target group<br>Sample use: unit_group_move_to_missile_range_of_group archer_group enemy_group<br>Class: UNIT_GROUP_MOVE_TO_MISSILE_RANGE_OF_GROUP<br>Implemented: Yes",
            "unit_group_order_attack_unit": "Identifier: unit_group_order_attack_unit<br>Parameters: group_label target_unit_label run(optional)<br>Description: order the unit group to attack the target unit<br>Sample use: unit_group_order_attack_unit group1 enemy_unit4<br>Class: UNIT_GROUP_ORDER_ATTACK_UNIT<br>Implemented: Yes",
            "unit_group_order_attack_group": "Identifier: unit_group_order_attack_group<br>Parameters: group_label target_group_label run(optional)<br>Description: orders the unit group to attack the target group<br>Sample use: unit_group_order_attack_group cavalry_group1 enemy_archer_group<br>Class: UNIT_GROUP_ORDER_ATTACK_GROUP<br>Implemented: Yes",
            "unit_group_order_change_group_formation": "Identifier: unit_group_order_change_group_formation<br>Parameters: group_label formation_name<br>Description: sets a group formation from descr_formations.txt<br>Sample use: unit_group_order_change_group_formation group2 ordered_triple_line_1<br>Class: UNIT_GROUP_ORDER_CHANGE_GROUP_FORMATION<br>Implemented: Yes",
            "unit_group_order_turn": "Identifier: unit_group_order_turn<br>Parameters: group_label angle relative(optional)<br>Description: rotates the unit group to an angle or by a number of degrees relative to it's current angle (see unit_order_turn)<br>Sample use: unit_group_order_turn group2 90 (turns the group to 90 degrees)<br>Class: UNIT_GROUP_ORDER_TURN<br>Implemented: Yes",
            "unit_group_set_morale": "Identifier: unit_group_set_morale<br>Parameters: group_label morale_level (beserk/impetuous/high/firm/shaken/wavering/routing)<br>Description: sets and locks the morale level for each unit in the group<br>Sample use: unit_set_morale infantry_group routing<br>Class: UNIT_GROUP_SET_MORALE<br>Implemented: Yes",
            "unit_group_unset_morale": "Identifier: unit_group_unset_morale<br>Parameters: group_label<br>Description: unlocks the units' morale, the game will retake control and update the morale normally<br>Sample use: unit_group_unset_morale infantry_group<br>Class: UNIT_GROUP_UNSET_MORALE<br>Implemented: Yes",
            "unit_group_change_unit_formation": "Identifier: unit_group_change_unit_formation<br>Parameters: group_label formation_type (square, horde, testudo, phalanx)<br>Description: changes the formation of each unit in the specified unit group<br>Sample use: unit_group_change_unit_formation hoplite_group phalanx<br>Class: UNIT_GROUP_CHANGE_UNIT_FORMATION<br>Implemented: Yes",
            "unit_group_set_guard_mode": "Identifier: unit_group_set_guard_mode<br>Parameters: group_label on/off<br>Description: Sets the guard melee state for all units in the specified group<br>Sample use: unit_group_set_guard_mode group2 off<br>Class: UNIT_GROUP_SET_GUARD_MODE<br>Implemented: Yes",
            "unit_group_set_skirmish_mode": "Identifier: unit_group_set_skirmish_mode<br>Parameters: group_label on/off<br>Description: Sets the skirmish melee state for all units in the specified group<br>Sample use: unit_group_set_skirmish_mode archer_group on<br>Class: UNIT_GROUP_SET_SKIRMISH_MODE<br>Implemented: Yes",
            "unit_group_set_fire_at_will_mode": "Identifier: unit_group_set_fire_at_will_mode<br>Parameters: group_label on/off<br>Description: Sets the guard melee state for all units in the specified group<br>Sample use: unit_group_set_fire_at_will_mode group2 off<br>Class: UNIT_GROUP_SET_FIRE_AT_WILL_MODE<br>Implemented: Yes",
            "unit_group_set_formation_spacing": "Identifier: unit_group_set_formation_spacing<br>Parameters: group_label loose/tight<br>Description: Sets the formation spacing, for each unit in the group, to loose or tight<br>Sample use: unit_group_set_formation_spacing group1 loose<br>Class: UNIT_GROUP_SET_FORMATION_SPACING<br>Implemented: Yes",
            "force_ai_control": "Identifier: force_ai_control<br>Parameters: n/a<br>Description: Gives all armies to the AI<br>Sample use: force_ai_control<br>Class: FORCE_AI_CONTROL<br>Implemented: Yes",
            "finish_battle": "Identifier: finish_battle<br>Parameters: n/a<br>Description: Completes the 'Finished' battle phase<br>Sample use: finish_battle<br>Class: FINISH_BATTLE<br>Implemented: Yes",
            "move_strat_camera": "Identifier: move_strat_camera<br>Parameters: strategy map position<br>Description: Move the camera smoothly to the position<br>Sample use: move_camera 20,35<br>Class: MOVE_STRAT_CAMERA<br>Implemented: Yes",
            "set_strat_camera_speed": "Identifier: set_strat_camera_speed<br>Parameters: strategy camera speed<br>Description: Sets the movement speed of the camera<br>Sample use: set_strat_camera_speed 15<br>Class: SET_STRAT_CAMERA_SPEED<br>Implemented: Yes",
            "snap_strat_camera": "Identifier: snap_strat_camera<br>Parameters: strategy map position<br>Description: Move the camera immediately to the position<br>Sample use: snap_strat_camera 20,35<br>Class: SNAP_STRAT_CAMERA<br>Implemented: Yes",
            "zoom_strat_camera": "Identifier: zoom_strat_camera<br>Parameters: strategy map position<br>Description: Change the zoom of the camera (0 right up close, 1 far out), clamped at a hard-coded lower bound<br>Sample use: zoom_camera 0.4<br>Class: ZOOM_STRAT_CAMERA<br>Implemented: No",
            "camera_restrictions_set": "Identifier: camera_restrictions_set<br>Parameters: on/off<br>Description: sets or unsets the restricted camera<br>Sample use: camera_restrictions_set on<br>Class: CAMERA_RESTRICTIONS_SET<br>Implemented: Yes",
            "camera_event_cuts_active_set": "Identifier: camera_event_cuts_active_set<br>Parameters: on/off<br>Description: activates and deactivates the event cut camera<br>Sample use: camera_event_cuts_active_set off<br>Class: CAMERA_EVENT_CUTS_ACTIVE_SET<br>Implemented: Yes",
            "camera_default_mode_set": "Identifier: camera_default_mode_set<br>Parameters: tw/rts/general/user_pref<br>Description: Sets the default camera to TotalWar Camera (tw), RTS Camera (rts), General's Camera (general) or whichever mode the player has in his preferences (user_pref)<br>Sample use: camera_default_mode_set tw<br>Class: CAMERA_DEFAULT_MODE_SET<br>Implemented: Yes",
            "battle_default_camera": "Identifier: battle_default_camera<br>Parameters: n/a<br>Description: Sets the default camera<br>Sample use: battle_default_camera<br>Class: BATTLE_DEFAULT_CAMERA<br>Implemented: Yes",
            "battle_general_camera": "Identifier: battle_general_camera<br>Parameters: n/a<br>Description: Sets the general's camera<br>Sample use: battle_general_camera<br>Class: BATTLE_GENERAL_CAMERA<br>Implemented: Yes",
            "set_camera_bookmark": "Identifier: set_camera_bookmark<br>Parameters: Bookmark index (0-21), position(x,y,z) target(x,y,z)<br>Description: Sets a camera bookmark to position and target specified, which can later be recalled with UseCameraBookmark<br>Sample use: set_camera_bookmark 1, 100, 0, 100, 100, 0, 0 - Will set the camera bookmark to position (100,0,100), looking straight back along the z axis<br>Class: SET_CAMERA_BOOKMARK<br>Implemented: Yes",
            "camera_position_at_bookmark": "Identifier: camera_position_at_bookmark<br>Parameters: Index (0-21)<br>Description: If the bookmark has been set (either in game, or with Set_Camera_Bookmark), then this will move the camera to the position and target specified by the bookmark<br>Sample use: camera_position_at_bookmark 0<br>Class: CAMERA_POSITION_AT_BOOKMARK<br>Implemented: Yes",
            "camera_zoom_to_bookmark": "Identifier: camera_zoom_to_bookmark<br>Parameters: Index (0-21) max_speed(optional default=200)<br>Description: If the bookmark has been set (either in game, or with set_camera_bookmark), then this will move the camera to the position and target specified by the bookmark<br>Sample use: camera_zoom_to_bookmark 0 50<br>Class: CAMERA_ZOOM_TO_BOOKMARK<br>Implemented: Yes",
            "camera_position": "Identifier: camera_position<br>Parameters: position x,y,z target x,y,z<br>Description: Immediately places the camera at the specified position<br>Sample use: camera_position\t0 0 0\t0 0 -1<br>Class: CAMERA_POSITION<br>Implemented: Yes",
            "camera_zoom_to": "Identifier: camera_zoom_to<br>Parameters: position x,y,z target x,y,z speed(optional)<br>Description: Zoom camera\tto position, and look at target<br>Sample use: camera_zoom_to\t0 0 0\t0 0 -1\t50<br>Class: CAMERA_ZOOM_TO<br>Implemented: Yes",
            "camera_look_at_position": "Identifier: camera_look_at_position<br>Parameters: x y or location_label<br>Description: camera turns to look at a position on the battlefield, but doesn't move<br>Sample use: camera_look_at_position 123.4 56.7<br>Class: CAMERA_LOOK_AT_POSITION<br>Implemented: Yes",
            "camera_look_at_unit": "Identifier: camera_look_at_unit<br>Parameters: unit_label<br>Description: turns the camera to look at the unit without moving<br>Sample use: camera_look_at_unit spearmen7<br>Class: CAMERA_LOOK_AT_UNIT<br>Implemented: Yes",
            "camera_track_unit": "Identifier: camera_track_unit<br>Parameters: unit_label direction distance height pitch(optional)<br>Description: camera tracks the specified unit, direction can be a number in degrees or an identifier front, back, left or right<br>Sample use: camera_track_unit roman_cavalry1 left 20 10 -15<br>Class: CAMERA_TRACK_UNIT<br>Implemented: Yes",
            "camera_zoom_to_unit": "Identifier: camera_zoom_to_unit<br>Parameters: unit_label<br>Description: zoom the camera to the soecified unit<br>Sample use: camera_zoom_to_unit spearmen7<br>Class: CAMERA_ZOOM_TO_UNIT<br>Implemented: Yes",
            "e_camera_zoom_to_unit": "Identifier: e_camera_zoom_to_unit<br>Parameters: <br>Description: zoom the camera to the unit specified by the event<br>Sample use: e_camera_zoom_to_unit<br>Class: E_CAMERA_ZOOM_TO_UNIT<br>Implemented: Yes",
            "inhibit_camera_input": "Identifier: inhibit_camera_input<br>Parameters: true/false<br>Description: Stop the user affecting the camera position, either through the keyboard or mouse movement<br>Sample use: inhibit_camera_input true<br>Class: INHIBIT_CAMERA_INPUT<br>Implemented: Yes",
            "declare_prologue": "Identifier: declare_prologue<br>Parameters: none<br>Description: enforce prologue considerations upon the world, e.g. no general death during auto-resolve<br>Sample use: declare_prologue<br>Class: DECLARE_PROLOGUE<br>Implemented: Yes",
            "terminate_prologue": "Identifier: terminate_prologue<br>Parameters: none<br>Description: withdraw prologue considerations upon the world, e.g. no general death during auto-resolve<br>Sample use: terminate_prologue<br>Class: TERMINATE_PROLOGUE<br>Implemented: Yes",
            "provoke_rebellion": "Identifier: provoke_rebellion<br>Parameters: settlement name<br>Description: Start a rebellion in the named settlement at the start of the next turn<br>Sample use: provoke_rebellion Segesta<br>Class: PROVOKE_REBELLION<br>Implemented: Yes",
            "move": "Identifier: move<br>Parameters: character name, x, y<br>Description: Move the named character to the location specified<br>Sample use: move Gaius Julius, 20, 44<br>Class: MOVE<br>Implemented: Yes",
            "reposition_character": "Identifier: reposition_character<br>Parameters: character, x, y<br>Description: Snap the character to a position<br>Sample use: reposition_character Gaius Maximus, 14, 53<br>Class: REPOSITION_CHARACTER<br>Implemented: Yes",
            "replenish_action_points": "Identifier: replenish_action_points<br>Parameters: character name<br>Description: replenish the character's action points<br>Sample use: replenish_action_points Gaius Julius<br>Class: REPLENISH_ACTION_POINTS<br>Implemented: Yes",
            "replenish_units": "Identifier: replenish_units<br>Parameters: army identifier (the general's name)<br>Description: replenish all the units to full numbers for the army<br>Sample use: replenish_units Gaius Julius<br>Class: REPLENISH_UNITS<br>Implemented: No",
            "spawn_character": "Identifier: spawn_character<br>Parameters: faction, character as in character description in historical battle<br>Description: create an army at a particular location<br>Sample use: spawn_character Julii Foedus Chaerea, general, command 0, influence 0, management 0, subterfuge 0, age 20, x 54, y 124<br>Class: SPAWN_CHARACTER<br>Implemented: Yes",
            "spawn_army": "Identifier: spawn_army<br>Parameters: faction, character and units as in army description in historical battle (character description for general and unit descriptions for remainder of the army)<br>Description: create an army at a particular location<br>Sample use: spawn_army<br>                    faction romans_julii<br>                    character\tFoedus Chaerea, general, command 0, influence 0, management 0, subterfuge 0, age 20, , x 54, y 124<br>                    unit\t\troman generals guard cavalry\t\t\t\tsoldiers 20 exp 9 armour 1 weapon_lvl 0<br>                    unit\t\troman legionary first cohort ii\t\t\t\tsoldiers 40 exp 0 armour 0 weapon_lvl 0<br>                    unit\t\troman legionary cohort ii\t\t\t\tsoldiers 60 exp 0 armour 0 weapon_lvl 0<br>                    unit\t\troman praetorian cohort i\t\t\t\tsoldiers 60 exp 0 armour 0 weapon_lvl 0<br>                    end<br>Class: SPAWN_ARMY<br>Implemented: Yes",
            "engage_armies": "Identifier: engage_armies<br>Parameters: attacking general, defending general<br>Description: Instruct the attacking general to attack the defending general<br>Sample use: engage_armies Gaius Julius, Epiroderix<br>Class: ENGAGE_ARMIES<br>Implemented: Yes",
            "disable_popups": "Identifier: disable_popups<br>Parameters: none<br>Description: Disable the popup style help in the prologue<br>Sample use: disable_popups<br>Class: FERAL_END_PROLOGUE_POPUPS<br>Implemented: Yes",
            "start_benchmark": "Identifier: start_benchmark<br>Parameters: name<br>Description: Starts logging frametime benchmark data<br>Sample use: start_benchmark campaign<br>Class: FERAL_START_BENCHMARK<br>Implemented: Yes",
            "end_benchmark": "Identifier: end_benchmark<br>Parameters: none<br>Description: Ends a benchmark run<br>Sample use: end_benchmark<br>Class: FERAL_END_BENCHMARK<br>Implemented: Yes",
            "disable_pause_shortcut_in_campaign": "Identifier: disable_pause_shortcut_in_campaign<br>Parameters: true/false<br>Description: Stop esc from bringing up Pause menu while on campaign map<br>Sample use: disable_pause_shortcut_in_campaign true;<br>Class: DISABLE_PAUSE_SHORTCUT_IN_CAMPAIGN<br>Implemented: Yes",
            "override_superfaction_popularity": "Identifier: override_superfaction_popularity<br>Parameters: faction type, true/false<br>Description: Disable normal superfaction popularity processing so that it can be controlled by a script<br>Sample use: override_superfaction_popularity romans_julii true<br>Class: SENATE_OVERRIDE_POPULARITY<br>Implemented: Yes",
            "set_faction_senate_standing": "Identifier: set_faction_senate_standing<br>Parameters: faction type, value or counter<br>Description: Set the senate standing of a given faction<br>Sample use: set_faction_senate_standing romans_julii blib<br>Class: SENATE_SET_SENATE_POPULARITY_SENATE<br>Implemented: Yes",
            "set_faction_people_standing": "Identifier: set_faction_people_standing<br>Parameters: faction type, value or counter<br>Description: Set the people standing of a given faction<br>Sample use: set_faction_people_standing romans_julii 70<br>Class: SENATE_SET_SENATE_POPULARITY_PEOPLE<br>Implemented: Yes",
            "message_prompt": "Identifier: message_prompt<br>Parameters: (inside braces) flag_counter, result_counter, title, body and optional image<br>Description: Creates a new news message with a simple yes/no prompt. Will set flag_counter to 1 and result_counter to 1 or 0 depending on player selection.<br>Using the same counter for both the flag and result will set it to the result only.<br>Use ScriptPromptCallback event to detect responses<br>Sample use: message prompt<br>{<br>\tflag_counter blib<br>\tresult_counter blob<br>\ttitle string_from_expanded_bi<br>\tbody string_from_expanded_bi<br>\timage event_image_name<br>Class: SCRIPT_MESSAGE_PROMPT<br>Implemented: Yes",
            "script": "Identifier: script<br>Parameters: none<br>Description: start a script<br>Sample use: script<br>Class: SCRIPT<br>Implemented: Yes",
            "include_script": "Identifier: include_script<br>Parameters: Path the the script, relative to this one<br>Description: include a script file into this one, allowing large scripts to be broken into smaller ones<br>Sample use: include_script<br>Class: INCLUDE_SCRIPT<br>Implemented: Yes",
            "terminate_script": "Identifier: terminate_script<br>Parameters: <br>Description: terminate a script<br>Sample use: terminate_script<br>Class: TERMINATE_SCRIPT<br>Implemented: Yes",
            "break": "Identifier: break<br>Parameters: <br>Description: immediately exit the current scope<br>Sample use: break<br>Class: BREAK_SCOPE<br>Implemented: Yes",
            "spawn_battle": "Identifier: spawn_battle<br>Parameters: folder name<br>Description: Start the battle contained in the named folder, relative to the maps folder.  The next command in the script should be prepare_for_battle.<br>Sample use: spawn_battle custom/punic_1<br>Class: SPAWN_BATTLE<br>Implemented: Yes",
            "if": "Identifier: if<br>Parameters: conditions to satisfy to execute the scope<br>Description: conditional execution<br>Sample use: if TimerElapsed &lt; 1000<br>Class: IF<br>Implemented: Yes",
            "if_not": "Identifier: if_not<br>Parameters: conditions to satisfy to execute the scope<br>Description: conditional execution<br>Sample use: if_not TimerElapsed &lt; 1000<br>Class: IF_NOT<br>Implemented: Yes",
            "holding_while": "Identifier: holding_while<br>Parameters: conditions to satisfy to execute this while<br>Description: start a while loop and don't exit or process any other commands outside the loop until the condition isn't met<br>Sample use: holding_while NumLoops &lt; 1000<br>Class: HOLDING_WHILE<br>Implemented: Yes",
            "while": "Identifier: while<br>Parameters: conditions to satisfy to execute this while<br>Description: start a while loop<br>Sample use: while TimerElapsed &lt; 1000<br>Class: WHILE<br>Implemented: Yes",
            "for_each": 'Identifier: for_each<br>Parameters: [iterator type] in [scope type] &lt;scope identifier (assumed local if not supplied or scope is not faction, character or settlement)&gt;<br>Description: iterate through all instances of a certain type within a given scope (note that unit iterator will always be fed through as player unit)<br>Sample use: for_each settlement in faction "romans_brutii"<br>Class: FOR_EACH<br>Implemented: Yes',
            "set_ao_visible": 'Identifier: set_ao_visible<br>Parameters: object tag, show/hide and optional region name<br>Description: set visibility of all ambient objects with the given tag in the specified region (if no region name specified, taken from context)<br>Sample use: set_ao_visible "dockyard_ships" show ["Latium"]<br>Class: SET_AO_VISIBLE<br>Implemented: Yes',
            "set_all_ao_visible": 'Identifier: set_all_ao_visible<br>Parameters: object tag and show/hide<br>Description: set visibility of all ambient objects with the given tag throughout the entire map<br>Sample use: set_ao_visible "shipwrecks" show<br>Class: SET_ALL_AO_VISIBLE<br>Implemented: Yes',
            "return": "Identifier: return<br>Parameters: true/false<br>Description: return a value from the script and terminate, used for faction spawn scripts<br>Sample use: return true<br>Class: SCRIPT_RETURN<br>Implemented: Yes",
            "while_not": "Identifier: while_not<br>Parameters: conditions to satisfy to execute this while<br>Description: start a while loop<br>Sample use: while_not TimerElapsed &lt; 1000<br>Class: WHILE_NOT<br>Implemented: Yes",
            "monitor_conditions": "Identifier: monitor_conditions<br>Parameters: conditions to monitor to execute this scope<br>Description: start a monitor loop when conditions are of a particular value<br>Sample use: monitor_conditions not I_CharacterIsSelected Gaius Julius<br>Class: MONITOR_STATE<br>Implemented: Yes",
            "monitor_event": "Identifier: monitor_event<br>Parameters: event name, conditions to monitor to execute this scope<br>Description: start a monitor loop in response to an event<br>Sample use: monitor_event IncomingMessage IncomingMessageType wonder_captured<br>Class: MONITOR_EVENT<br>Implemented: Yes",
            "terminate_monitor": "Identifier: terminate_monitor<br>Parameters: <br>Description: terminate a monitor loop<br>Sample use: terminate_monitor<br>Class: TERMINATE_MONITOR<br>Implemented: Yes",
            "console_command": 'Identifier: console_command<br>Parameters: <br>Description: execute a command through the console<br>Sample use: console_command kill_character "Gaius Julius"<br>Class: CONSOLE_COMMAND<br>Implemented: Yes',
            "declare_counter": "Identifier: declare_counter<br>Parameters: name of the counter, a single word identifier.<br>Description: declare a counter and give it an initial value of zero<br>Sample use: declare_counter blib<br>Class: DECLARE_COUNTER<br>Implemented: Yes",
            "declare_persistent_counter": "Identifier: declare_persistent_counter<br>Parameters: name of the counter, a single word identifier.<br>Description: declare a counter that will be persistent between saves and give it an initial value of zero, assuming it hasn't been defined in a previous save<br>Sample use: declare_persistent_counter blib<br>Class: DECLARE_PERSISTENT_COUNTER<br>Implemented: Yes",
            "inc_counter": "Identifier: inc_counter<br>Parameters: name of the counter, quantity to modify it by.<br>Description: change a counter by a particular amount<br>Sample use: inc_counter blib -137<br>Class: MODIFY_COUNTER<br>Implemented: Yes",
            "set_counter": "Identifier: set_counter<br>Parameters: name of the counter, quantity to set it to.<br>Description: change a counter to a particular value<br>Sample use: set_counter blib -137<br>Class: SET_COUNTER<br>Implemented: Yes",
            "counter_operation": "Identifier: counter_operation<br>Parameters: &lt;result counter&gt; = &lt;counter&gt; &lt;operation&gt; &lt;counter&gt;<br>Description: Sets the result counter to the result of the expression. Valid operations are *, /, +, -<br>Sample use: counter_operation blib = foo + bar<br>Class: COUNTER_OPERATION<br>Implemented: Yes",
            "store_counter": "Identifier: store_counter<br>Parameters: store_counter &lt;counter name&gt; &lt;storage location&gt; &lt;storage label&gt;<br>Description: Stores a counter in the given location type in scope, with the label specified<br>Sample use: store_counter blib settlement blib_in_a_settlement<br>Class: STORE_COUNTER<br>Implemented: Yes",
            "retrieve_counter": "Identifier: retrieve_counter<br>Parameters: retrieve_counter &lt;storage label&gt; &lt;storage location&gt; &lt;counter name&gt;<br>Description: Extacts a counter with the given label from the location type in scope, and loads it into the supplied counter<br>Sample use: retrieve_counter blib_in_a_settlement settlement blib<br>Class: RETREIVE_COUNTER<br>Implemented: Yes",
            "prepare_for_battle": "Identifier: prepare_for_battle<br>Parameters: <br>Description: Clear all the unit labels, location labels &c.  This is separate from the spawn_battle command in case you are scripting a historical battle.<br>Sample use: prepare_for_battle<br>Class: PREPARE_FOR_BATTLE<br>Implemented: Yes",
            "declare_show_me": "Identifier: declare_show_me<br>Parameters: <br>Description: Flag the script as a show me script - required for the AbandonShowMe event<br>Sample use: declare_show_me<br>Class: DECLARE_SHOW_ME<br>Implemented: Yes",
            "label_unit": "Identifier: label_unit<br>Parameters: alliance, army, unit, label<br>Description: Label a particular unit<br>Sample use: label_unit 0 2 4 julii_hastati_2<br>Class: LABEL_UNIT<br>Implemented: Yes",
            "label_location": "Identifier: label_location<br>Parameters: x, z, label<br>Description: Label a particular location<br>Sample use: label_location 35 58 the_big_hill<br>Class: LABEL_LOCATION<br>Implemented: Yes",
            "define_unit_group": "Identifier: define_unit_group<br>Parameters: group_label unit1 unit2 unit3 ...<br>Description: creates a unit group containing the specified units<br>Sample use: define_unit_group\tgroup1\tarchers1 archers2 archers3 spearmen1<br>Class: DEFINE_UNIT_GROUP<br>Implemented: Yes",
            "undefine_unit_group": "Identifier: undefine_unit_group<br>Parameters: group_label<br>Description: removes the specified unit group<br>Sample use: undefine_unit_group archer_group5<br>Class: UNDEFINE_UNIT_GROUP<br>Implemented: Yes",
            "remove_unit_from_group": "Identifier: remove_unit_from_group<br>Parameters: group_label unit_label<br>Description: removes the unit from the group, if it is already a member<br>Sample use: remove_unit_from_group group1 archers1<br>Class: REMOVE_UNIT_FROM_GROUP<br>Implemented: Yes",
            "declare_timer": "Identifier: declare_timer<br>Parameters: timer name<br>Description: declare a script timer<br>Sample use: declare_timer rout_timer<br>Class: DECLARE_TIMER<br>Implemented: Yes",
            "restart_timer": "Identifier: restart_timer<br>Parameters: none<br>Description: restart the script timer<br>Sample use: restart_timer<br>Class: RESTART_TIMER<br>Implemented: Yes",
            "heed_pause": "Identifier: heed_pause<br>Parameters: on/off<br>Description: turn on/off the game pause acknowledgement - off by default<br>Sample use: heed_pause on<br>Class: HEED_PAUSE<br>Implemented: Yes",
            "wait": "Identifier: wait<br>Parameters: time in seconds<br>Description: Wait for the specified time before proceeding to the next script command.  The timer is based on the display update, so pausing the game does not pause the timer unless heed_pause is declared.<br>Sample use: wait 1.3<br>Class: DISPLAY_WAIT<br>Implemented: Yes",
            "campaign_wait": "Identifier: campaign_wait<br>Parameters: time in seconds<br>Description: Wait for the specified time before proceeding to the next script command.<br>Sample use: campaign_wait 1.3<br>Class: CAMPAIGN_WAIT<br>Implemented: Yes",
            "battle_wait": "Identifier: battle_wait<br>Parameters: time in seconds<br>Description: Wait for the specified time before proceeding to the next script command.  The timer is based on the battle update, so pausing and fast forwarding will affect the timer.<br>Sample use: battle_wait 1.3<br>Class: BATTLE_WAIT<br>Implemented: Yes",
            "suspend_during_battle": "Identifier: suspend_during_battle<br>Parameters: on/off<br>Description: suspend the script during battles - off by default<br>Sample use: suspend_during_battle on<br>Class: SUSPEND_DURING_BATTLE<br>Implemented: Yes",
            "senate_mission_help_player": "Identifier: senate_mission_help_player<br>Parameters: payback<br>Description: Issue a senate mission to gift the player with the payback - receipt and notification takes place at the start of the next turn<br>Sample use: senate_mission_help_player one_best_buildable_unit<br>Class: SENATE_MISSION_HELP_PLAYER<br>Implemented: Yes",
            "senate_mission_assassination": "Identifier: senate_mission_assassination<br>Parameters: payback, character name<br>Description: Issue a senate mission to assassinate the character named in the parameter list for a reward of the payback<br>Sample use: senate_mission_assassination minor_reward Gaius Julius<br>Class: SENATE_MISSION_ASSASSINATION<br>Implemented: Yes",
            "senate_mission_cease_hostilities": "Identifier: senate_mission_cease_hostilities<br>Parameters: payback, faction<br>Description: Issue a senate mission to instruct the player to cease hostilities against the named faction for a reward of the payback<br>Sample use: senate_mission_cease_hostilities two_minor_exotic_units Gauls<br>Class: SENATE_MISSION_CEASE_HOSTILITIES<br>Implemented: Yes",
            "senate_mission_declare_war": "Identifier: senate_mission_declare_war<br>Parameters: payback, faction<br>Description: Issue a senate mission to instruct the player to prosecute a war against the named faction for a reward of the payback<br>Sample use: senate_mission_declare_war major_reward Gauls<br>Class: SENATE_MISSION_DECLARE_WAR<br>Implemented: Yes",
            "senate_mission_broker_peace": "Identifier: senate_mission_broker_peace<br>Parameters: payback, faction<br>Description: Issue a senate mission to instruct the player to prosecute a war against the named faction for a reward of the payback<br>Sample use: senate_mission_broker_peace major_reward Gauls<br>Class: SENATE_MISSION_BROKER_PEACE<br>Implemented: Yes",
            "senate_mission_take_city": "Identifier: senate_mission_take_city<br>Parameters: payback, settlement name, true/false<br>Description: Issue a senate mission to take the settlement named in the parameter list for a reward of the payback<br>Sample use: senate_mission_assassination moderate_reward Tarquini<br>Class: SENATE_MISSION_TAKE_CITY<br>Implemented: Yes",
            "set_music_state": "Identifier: set_music_state<br>Parameters: music state name, battle music state/misc sound ID if battle or custom, [no_fade]<br>Description: Sets the music state of the game. Battle states only work if in battle<br>Sample use: set_music_state battle mobilize<br>Class: SET_MUSIC_STATE<br>Implemented: Yes",
            "release_music_control": "Identifier: release_music_control<br>Parameters: none<br>Description: Releases script control over the music, letting it play and transition normally<br>Sample use: release_music_control<br>Class: RELEASE_MUSIC_CONTROL<br>Implemented: Yes",
            "play_sound_event": "Identifier: play_sound_event<br>Parameters: &lt;event id&gt; [&lt;index&gt;] [tag = &lt;something&gt;] [ignore_volume_prefs]<br>Description: Plays sound event<br>Sample use: play_sound_event PREBATTLE_TEST<br>Class: PLAY_SOUND_EVENT<br>Implemented: Yes",
            "play_sound_flourish": "Identifier: play_sound_flourish<br>Parameters: sound_name [force_no_fade]<br>Description: Plays a sound over the top of any music, with or without a fade<br>Sample use: play_sound_flourish ANIM_ARCHER_FIRE<br>Class: PLAY_SOUND_FLOURISH<br>Implemented: Yes",
            "stop_sound_event": "Identifier: stop_sound_event<br>Parameters: &lt;tag&gt;<br>Description: Stops tagged sound events<br>Sample use: stop_sound_event PREBATTLE_TEST<br>Class: STOP_SOUND_EVENT<br>Implemented: Yes",
            "point_at_character": "Identifier: point_at_character<br>Parameters: character name<br>Description: point at the character<br>Sample use: point_at_character Gaius Julius<br>Class: POINT_AT_CHARACTER<br>Implemented: Yes",
            "point_at_settlement": "Identifier: point_at_settlement<br>Parameters: settlement name<br>Description: point at the settlement<br>Sample use: point_at_settlement Roma<br>Class: POINT_AT_SETTLEMENT<br>Implemented: Yes",
            "e_point_at_settlement": "Identifier: e_point_at_settlement<br>Parameters: <br>Description: point at a settlement specified in a piece of advice<br>Sample use: <br>Class: E_POINT_AT_SETTLEMENT<br>Implemented: Yes",
            "point_at_strat_position": "Identifier: point_at_strat_position<br>Parameters: strategy map position<br>Description: point at the position<br>Sample use: point_at_strat_position 44, 55<br>Class: POINT_AT_STRAT_POSITION<br>Implemented: Yes",
            "point_at_strat_position_alt": "Identifier: point_at_strat_position_alt<br>Parameters: strategy map position<br>Description: separate point_at_strat with different properties<br>Sample use: point_at_strat_position_alt, slot 1, 83, 84, y_offset -70<br>Class: POINT_AT_STRAT_POSITION_ALT<br>Implemented: Yes",
            "point_at_message": "Identifier: point_at_message<br>Parameters: message number/id, [up|down|left|right|top_left|top_right|bot_left|bot_right] - optional, set the direction that the pointer will come from<br>Description: point at the message<br>Sample use: point_at_message 0<br>Class: POINT_AT_MESSAGE<br>Implemented: Yes",
            "ui_flash_start": "Identifier: ui_flash_start<br>Parameters: UI element (see available_ui_element_ids.txt for appropriate identifiers), [up|down|left|right|top_left|top_right|bot_left|bot_right] - optional, set the direction that the pointer will come from, scale X,Y<br>Description: move the highlight pointer to the named element<br>Sample use: ui_flash_start finances_button<br>Class: UI_FLASH_START<br>Implemented: Yes",
            "ui_flash_stop": "Identifier: ui_flash_stop<br>Parameters: none<br>Description: clear the tutorial pointer<br>Sample use: ui_flash_stop<br>Class: UI_FLASH_STOP<br>Implemented: Yes",
            "settlement_flash_start": "Identifier: settlement_flash_start<br>Parameters: strategy map position<br>Description: highlight the tile<br>Sample use: settlement_flash_start Tarquinii<br>Class: SETTLEMENT_FLASH_START<br>Implemented: Yes",
            "settlement_flash_stop": "Identifier: settlement_flash_stop<br>Parameters: strategy map position<br>Description: stop highlighting the tile<br>Sample use: settlement_flash_stop Tarquinii<br>Class: SETTLEMENT_FLASH_STOP<br>Implemented: Yes",
            "character_flash_start": "Identifier: character_flash_start<br>Parameters: character name<br>Description: flash the tile under the character<br>Sample use: character_flash_start Gaius Julius<br>Class: CHARACTER_FLASH_START<br>Implemented: Yes",
            "character_flash_stop": "Identifier: character_flash_stop<br>Parameters: character name<br>Description: stop flashing the tile under the character<br>Sample use: character_flash_stop Gaius Julius<br>Class: CHARACTER_FLASH_STOP<br>Implemented: Yes",
            "point_at_location": "Identifier: point_at_location<br>Parameters: position (x,y) or location label<br>Description: Indicates a position on the battle map<br>Sample use: point_at_location pos1<br>Class: POINT_AT_LOCATION<br>Implemented: Yes",
            "point_at_unit_pos": "Identifier: point_at_unit_pos<br>Parameters: unit_label<br>Description: Indicates a unit's position on the battle map<br>Sample use: point_at_unit_pos generals_unit<br>Class: POINT_AT_UNIT_POS<br>Implemented: Yes",
            "point_at_unit_group_pos": "Identifier: point_at_unit_group_pos<br>Parameters: group_label<br>Description: Indicates a unit_group's position on the battle map<br>Sample use: point_at_unit_group_pos infantry_group1<br>Class: POINT_AT_UNIT_GROUP_POS<br>Implemented: Yes",
            "remove_battle_map_arrow": "Identifier: remove_battle_map_arrow<br>Parameters: <br>Description: removes the arrow created by point_at_location/unit/unit_group<br>Sample use: remove_battle_map_arrow<br>Class: REMOVE_BATTLE_MAP_ARROW<br>Implemented: Yes",
            "point_at_card": "Identifier: point_at_card<br>Parameters: card type (unit | character | building), id, nth instance<br>Description: Points at the card type specified if it can be found<br>\t\t\t  For units and buildings 'id' is their id in the tech-tree<br>\t\t\t  For characters it is their name<br>\t\t\t  Use nth instance to skip over cards with the same type<br>Sample use: point_at_card\t unit hastati 2 - to point at the second hastati card the game can find<br>Class: POINT_AT_CARD<br>Implemented: Yes",
            "point_at_unit_card": "Identifier: point_at_unit_card<br>Parameters: unit label, [up|down|left|right|top_left|top_right|bot_left|bot_right] - optional, set the direction that the pointer will come from<br>Description: Points at the card of the specified unit<br>Sample use: point_at_card roman_archers<br>Class: POINT_AT_UNIT_CARD<br>Implemented: Yes",
            "e_point_at_unit_card": "Identifier: e_point_at_unit_card<br>Parameters: [up|down|left|right|top_left|top_right|bot_left|bot_right] - optional, set the direction that the pointer will come from<br>Description: Points at the card of the unit referred to in the current event context<br>Sample use: e_point_at_unit_card<br>Class: E_POINT_AT_UNIT_CARD<br>Implemented: Yes",
            "show_mouse_button_animation": "Identifier: show_mouse_button_animation<br>Parameters: [left | right] true/false<br>Description: Starts/stops the animation showing which mouse button to press (either left or right at the moment)<br>Sample use: show_mouse_button_animation left true - start the animation showing the left mouse button being pressed. show_mouse_button_animation left false - stop the left mouse button animation.  NOTE: Only 1 animation can be shown at a time<br>Class: SHOW_MOUSE_BUTTON_ANIMATION<br>Implemented: Yes",
            "show_movie": "Identifier: show_movie<br>Parameters: file [file/path], width [uint], height [uint], x [int], y [int]<br>Description: Displays a movie<br>Sample use: show_movie data/path/to/moviefile path/to/moviewidth 640height 360x 200y 150end_show_movie<br>Class: SHOW_MOVIE<br>Implemented: Yes",
            "hide_ui": "Identifier: hide_ui<br>Parameters: <br>Description: Hide the entire UI (for cinematic purposes)<br>Sample use: hide_ui<br>Class: HIDE_UI<br>Implemented: Yes",
            "show_ui": "Identifier: show_ui<br>Parameters: <br>Description: Show the entire UI (after hiding)<br>Sample use: show_ui<br>Class: SHOW_UI<br>Implemented: Yes",
            "disable_ui": "Identifier: disable_ui<br>Parameters: UI element (see available_ui_element_ids.txt for appropriate identifiers)<br>Description: turn off the named UI element<br>Sample use: disable_ui finances_button<br>Class: DISABLE_UI<br>Implemented: Yes",
            "enable_ui": "Identifier: enable_ui<br>Parameters: UI element (see available_ui_element_ids.txt for appropriate identifiers)<br>Description: turn on the named UI element<br>Sample use: enable_ui finances_button<br>Class: ENABLE_UI<br>Implemented: Yes",
            "disable_entire_ui": "Identifier: disable_entire_ui<br>Parameters: none<br>Description: suspend the entire UI<br>Sample use: disable_entire_ui<br>Class: DISABLE_ENTIRE_UI<br>Implemented: Yes",
            "enable_entire_ui": "Identifier: enable_entire_ui<br>Parameters: none<br>Description: reactivate the entire UI<br>Sample use: enable_entire_ui<br>Class: ENABLE_ENTIRE_UI<br>Implemented: Yes",
            "set_cards_selectable": "Identifier: set_cards_selectable<br>Parameters: true/false<br>Description: set whether cards are selectble or not<br>Sample use: set_cards_selectable false<br>Class: SET_CARDS_SELECTABLE<br>Implemented: Yes",
            "disable_cursor": "Identifier: disable_cursor<br>Parameters: none<br>Description: deactivate and hide the cursor<br>Sample use: disable_cursor<br>Class: DISABLE_CURSOR<br>Implemented: Yes",
            "enable_cursor": "Identifier: enable_cursor<br>Parameters: none<br>Description: activate and show the cursor<br>Sample use: enable_cursor<br>Class: ENABLE_CURSOR<br>Implemented: Yes",
            "rename_settlement_in_region": 'Identifier: rename_settlement_in_region<br>Parameters: region name and new settlement name<br>Description: rename a settlement to a given name<br>Sample use: rename_settlement_in_region Latium "Reme"<br>Class: RENAME_SETTLEMENT<br>Implemented: Yes',
            "add_religion": "Identifier: add_religion<br>Parameters: religion name, region name, commitment to add<br>Description: Add commitment to a given religion into a region<br>Sample use: add_religion Christianity Latium -10<br>Class: ADD_RELIGION<br>Implemented: Yes",
            "add_hidden_resource": "Identifier: add_hidden_resource<br>Parameters: region name and resource name<br>Description: add a hidden resource to a given region<br>Sample use: add_hidden_resource Latium sparta<br>Class: ADD_HIDDEN_RESOURCE<br>Implemented: Yes",
            "remove_hidden_resource": "Identifier: remove_hidden_resource<br>Parameters: region name and resource name<br>Description: remove a hidden resource to a given region<br>Sample use: remove_hidden_resource Latium sparta<br>Class: REMOVE_HIDDEN_RESOURCE<br>Implemented: Yes",
            "destroy_building": 'Identifier: destroy_building<br>Parameters: settlement name and the building ID<br>Description: destroy a building in a settlement<br>Sample use: destroy_building "Rome" market<br>Class: DESTROY_BUILDING<br>Implemented: Yes',
            "reveal_tile": "Identifier: reveal_tile<br>Parameters: strategy map position<br>Description: remove the shroud from the tile<br>Sample use: reveal_tile 25, 43<br>Class: REVEAL_TILE<br>Implemented: Yes",
            "hide_all_revealed_tiles": "Identifier: hide_all_revealed_tiles<br>Parameters: <br>Description: restore all tile shrouds<br>Sample use: hide_all_revealed_tiles<br>Class: HIDE_ALL_REVEALED_TILES<br>Implemented: Yes",
            "play_video": "Identifier: play_video<br>Parameters: filename<br>Description: play a piece of video<br>Sample use: play_video fmv/rome_intro.mpg<br>Class: PLAY_VIDEO<br>Implemented: No",
            "advance_advice_thread": "Identifier: advance_advice_thread<br>Parameters: thread name, no_dismiss<br>Description: Increment the score of the advice thread<br>Sample use: advance_advice_thread 0098_prologue_selection no_dismiss<br>Class: ADVANCE_ADVICE_THREAD<br>Implemented: Yes",
            "dismiss_advice": "Identifier: dismiss_advice<br>Parameters: <br>Description: Dismiss the currently displayed advice<br>Sample use: dismiss_advice<br>Class: DISMISS_ADVICE<br>Implemented: Yes",
            "dismiss_advisor": "Identifier: dismiss_advisor<br>Parameters: <br>Description: Dismiss the advisor<br>Sample use: dismiss_advisor<br>Class: DISMISS_ADVISOR<br>Implemented: Yes",
            "suspend_unscripted_advice": "Identifier: suspend_unscripted_advice<br>Parameters: flag<br>Description: Suspend (or restore) all advice not generated by the script<br>Sample use: suspend_unscripted_advice true<br>Class: SUSPEND_UNSCRIPTED_ADVICE<br>Implemented: Yes",
            "select_character": "Identifier: select_character<br>Parameters: character name<br>Description: selects a character on the campaign map<br>Sample use: select_character Gaius Julius<br>Class: SELECT_CHARACTER<br>Implemented: Yes",
            "e_select_character": "Identifier: e_select_character<br>Parameters: <br>Description: selects a character referred to in the current event context on the campaign map<br>Sample use: e_select_character<br>Class: E_SELECT_CHARACTER<br>Implemented: Yes",
            "select_settlement": "Identifier: select_settlement<br>Parameters: settlement name<br>Description: selects a settlement on the campaign map<br>Sample use: select_settlement Roma<br>Class: SELECT_SETTLEMENT<br>Implemented: Yes",
            "e_select_settlement": "Identifier: e_select_settlement<br>Parameters: <br>Description: selects a settlement referred to in the current event context on the campaign map<br>Sample use: e_select_settlement<br>Class: E_SELECT_SETTLEMENT<br>Implemented: Yes",
            "call_object_shortcut": "Identifier: call_object_shortcut<br>Parameters: ui object name, shortcut name (see available_ui_element_ids.txt for appropriate element identifiers)<br>Description: calls the keyboard shortcut of a ui element<br>\t\t\t  the shortcut name can left out<br>\t\t\t  Most buttons don't require a shortcut name, instead the 'on_select' method is called<br>Sample use: call_object_shortcut strat_ui speedup_ai - will toggle the fast ai mode<br>\t\t\t  call_object_shortcut diplomacy_overview_button - will select the diplomacy overview button<br>Class: CALL_OBJECT_SHORTCUT<br>Implemented: Yes",
            "simulate_mouse_click": "Identifier: simulate_mouse_click<br>Parameters: [lclick_down|lclick_up|rclick_down|rclick_up|ldbl_click]<br>Description: Acts as if the given mouse event had happened on the currently 'selected' ui_element (see 'select_ui_element' command)<br>Sample use: select_ui_element hud_show_buildings_tab<br>\t\t\t  simulate_mouse_click lclick_down<br>Class: SIMULATE_MOUSE_CLICK<br>Implemented: Yes",
            "select_ui_element": "Identifier: select_ui_element<br>Parameters: element id (see available_ui_element_ids.txt for appropriate identifiers)<br>Description: Use in conjunction with simulate mouse click to store the element that will next recieve the simulated mouse click<br>Sample use: select_ui_element hud_show_buildings_tab<br>\t\t\t  simulate_mouse_click lclick_down<br>Class: SELECT_ELEMENT<br>Implemented: Yes",
            "disable_shortcuts": "Identifier: disable_shortcuts<br>Parameters: {element_id}, true/false<br>Description: This will disable/enable all keyboard shortcuts for a given element (or all elements if element_id is omitted), except the key defined as being the 'quit' key (ESC by default).  See data/descr_shortcuts.txt for the element_ids that are useable<br>Sample use: disable_shortcuts true - to disable, disable_shortcuts false - to enable them again<br>Class: DISABLE_SHORTCUTS<br>Implemented: Yes",
            "filter_unit_commands": "Identifier: filter_unit_commands<br>Parameters: switch, unit name, function<br>Description: Turn off the command shell, or one part of it, for all units or the named unit<br>Sample use: filter_unit_commands on velites_alpha change_formation<br>                    filter_unit_commands off velites_alpha<br>                    filter_unit_commands off<br>Class: UNIT_UISHELL_FILTER<br>Implemented: Yes",
            "filter_unit_group_commands": "Identifier: filter_unit_group_commands<br>Parameters: switch, unit name, function<br>Description: Turn off the command shell, or one part of it, for all units or the named unit<br>Sample use: filter_unit_group_commands on storm_troopers change_formation<br>                    filter_unit_group_commands off storm_troopers<br>                    filter_unit_group_commands off<br>Class: UNIT_GROUP_UISHELL_FILTER<br>Implemented: Yes",
            "filter_unit_selection_commands": "Identifier: filter_unit_selection_commands<br>Parameters: switch, function<br>Description: Turn off the command shell, or one part of it, for all units<br>Sample use: filter_unit_selection_commands on change_formation<br>                    filter_unit_selection_commands off<br><br>Class: UNIT_SELECTION_UISHELL_FILTER<br>Implemented: Yes",
            "filter_settlement_commands": "Identifier: filter_settlement_commands<br>Parameters: switch, unit name, function<br>Description: Turn off the command shell, or one part of it, for all settlements or the named settlement<br>Sample use: filter_settlement_commands on Arretium change_formation<br>                    filter_settlement_commands off Arretium<br>                    filter_settlement_commands off<br>Class: SETTLEMENT_UISHELL_FILTER<br>Implemented: Yes",
            "filter_character_commands": "Identifier: filter_character_commands<br>Parameters: switch, unit name, function<br>Description: Turn off the command shell, or one part of it, for all characters or the named character<br>Sample use: filter_character_commands on Gaius Julius, change_formation (note comma)<br>                    filter_character_commands off Gaius Julius<br>                    filter_character_commands off<br>Class: CHARACTER_UISHELL_FILTER<br>Implemented: Yes",
            "filter_all_ui_commands": "Identifier: filter_all_ui_commands<br>Parameters: switch<br>Description: Turn on or off the command shell<br>Sample use: filter_all_ui_commands on<br>Class: SWITCH_ALL_UISHELL_FILTERS<br>Implemented: Yes",
            "ui_indicator": "Identifier: ui_indicator<br>Parameters: &lt;slot number&gt; &lt;animation type&gt; {&lt;x&gt; &lt;y&gt;} or {track &lt;x&gt; &lt;y&gt; &lt;z&gt;} or {track_3d &lt;x&gt; &lt;y&gt; &lt;z&gt; &lt;radius&gt;} or {track_ground &lt;x&gt; &lt;z&gt;} or {track_ground_3d &lt;x&gt; &lt;z&gt; &lt;radius&gt;} or {track_unit &lt;unit_label&gt;} or {track_unit_3d &lt;unit_label&gt; &lt;radius&gt;} [colour &lt;r&gt; &lt;g&gt; &lt;b&gt;] [scale &lt;scale factor&gt;] [period &lt;animation period&gt;] [loop]<br>Description: Display a UI indicator<br>Sample use: ui_indicator 0 circle 500 500 colour 255 255 0 scale 2.0 period 2.0 loop<br>Class: UI_INDICATOR_COMMAND<br>Implemented: Yes",
            "ui_indicator_remove": "Identifier: ui_indicator_remove<br>Parameters: &lt;slot number&gt;<br>Description: Remove a UI indicator<br>Sample use: ui_indicator_remove 0<br>Class: UI_INDICATOR_REMOVE_COMMAND<br>Implemented: Yes",
            "steal_esc_key": "Identifier: steal_esc_key<br>Parameters: on/off<br>Description: Steals keyboard input for the escape key, taking away it's default behaviour.  When the ESC kay is pressed, the trigger ET_ESC_PRESSED will fire, so this should be monitored.  Default functionality of esc will be returned at this point.  Note that if anything else steals the esc key after this command, then that will get priority instead.  The intended use for this command is to allow script writers to create skippable sections that are skipped by pressing ESC<br>Sample use: <br>Class: STEAL_ESC_KEY<br>Implemented: No",
            "highlight_recruitment_item": "Identifier: highlight_recruitment_item<br>Parameters: unit name to be passed in via event context as refered to unit export_descr_unit.txt<br>Description: will highlight the given unit in the recruitment queue. If the item isn't being shown, then the slider will be set so that the item is visible. Add 'false' to the end to stop the flashing<br>Sample use: highlight_recruitment_item or highlight_recruitment_item false<br>Class: E_HIGHLIGHT_RECRUITMENT_ITEM<br>Implemented: Yes",
            "highlight_construction_item": "Identifier: highlight_construction_item<br>Parameters: building name as refered to unit export_descr_buildings.txt<br>Description: will highlight the given building in the construction queue. If the item isn't being shown, then the slider will be set so that the item is visible<br>Sample use: highlight_construction_item<br>Class: E_HIGHLIGHT_CONSTRUCTION_ITEM<br>Implemented: Yes",
            "show_annotations": "Identifier: show_annotations<br>Parameters: &lt;annotations file&gt;<br>Description: Display the annotations file<br>Sample use: show_annotations doop<br>Class: FERAL_SHOW_ANNOTATIONS<br>Implemented: Yes",
            "e_select_unit": "Identifier: e_select_unit<br>Parameters: N/A<br>Description: Selects the trigger unit<br>Sample use: e_select_unit<br>Class: E_FERAL_SELECT_UNIT<br>Implemented: Yes",
            "open_siege_scroll": "Identifier: open_siege_scroll<br>Parameters: N/A<br>Description: Opens the siege scroll<br>Sample use: open_siege_scroll<br>Class: FERAL_OPEN_SIEGE_SCROLL<br>Implemented: Yes",
            "control_feral_anim": "Identifier: control_feral_anim<br>Parameters: string: animation key, string: element id, flag: 'reverse'<br>Description: Triggers feral animations<br>Sample use: control_feral_anim tightness order_tightness reverse<br>Class: FERAL_CONTROL_ANIM<br>Implemented: Yes",
            "select_captial": "Identifier: select_captial<br>Parameters: N/A<br>Description: selects the player's capital<br>Sample use: select_captial<br>Class: SELECT_PLAYER_CAPTIAL<br>Implemented: Yes",
            "show_building_info": "Identifier: show_building_info<br>Parameters: N/A<br>Description: Trys to show a building info for the currently selected settlement<br>Sample use: show_building_info<br>Class: SHOW_BUILDING_INFO<br>Implemented: Yes",
            "show_unit_info": "Identifier: show_unit_info<br>Parameters: N/A<br>Description: Trys to show a unit's info for the currently selected settlement<br>Sample use: show_unit_info<br>Class: SHOW_UNIT_INFO<br>Implemented: Yes",
        }
        self.event_dict = {
            "PreBattle": "Identifier: PreBattle<br>Event: When a battle is about to start<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_PRE_BATTLE",
            "PreBattleWithdrawal": "Identifier: PreBattleWithdrawal<br>Event: When a battle is about to start but one of the armies withdraws<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_PRE_BATTLE_WITHDRAWAL",
            "BattleAiCommenced": "Identifier: BattleAiCommenced<br>Event: The battle AI has begun processing<br>Exports: faction<br>Class: ET_BATTLE_AI_COMMENCED",
            "BattleDelayPhaseCommenced": "Identifier: BattleDelayPhaseCommenced<br>Event: The delay phase has begun<br>Exports: faction<br>Class: ET_BATTLE_DELAY_PHASE_COMMENCED",
            "BattleDeploymentPhaseCommenced": "Identifier: BattleDeploymentPhaseCommenced<br>Event: The deployment phase has begun<br>Exports: faction<br>Class: ET_BATTLE_DEPLOYMENT_PHASE_COMMENCED",
            "BattleConflictPhaseCommenced": "Identifier: BattleConflictPhaseCommenced<br>Event: The conflict phase has begun<br>Exports: faction<br>Class: ET_BATTLE_CONFLICT_PHASE_COMMENCED",
            "BattlePlayerUnitAttacksEnemyUnit": "Identifier: BattlePlayerUnitAttacksEnemyUnit<br>Event: A player unit has attacked one of the enemies units<br>Exports: infer_attacking_unit, infer_defending_unit, player_unit, enemy_unit<br>Class: ET_BATTLE_PLAYER_UNIT_ATTACKS_ENEMY_UNIT",
            "BattleEnemyUnitAttacksPlayerUnit": "Identifier: BattleEnemyUnitAttacksPlayerUnit<br>Event: An enemy unit has attacked one of the players units<br>Exports: infer_attacking_unit, infer_defending_unit, player_unit, enemy_unit<br>Class: ET_BATTLE_ENEMY_UNIT_ATTACKS_PLAYER_UNIT",
            "BattlePlayerAttacksSettlementBuilding": "Identifier: BattlePlayerAttacksSettlementBuilding<br>Event: A player unit has attacked a building in the settlement<br>Exports: infer_attacking_unit, player_unit, building_battle<br>Class: ET_BATTLE_PLAYER_ATTACKS_SETTLEMENT_BUILDING",
            "BattleEnemyAttacksSettlementBuilding": "Identifier: BattleEnemyAttacksSettlementBuilding<br>Event: An enemy unit has attacked a building in the settlement<br>Exports: infer_attacking_unit, enemy_unit, building_battle<br>Class: ET_BATTLE_ENEMY_ATTACKS_SETTLEMENT_BUILDING",
            "BattleUnitGoesBerserk": "Identifier: BattleUnitGoesBerserk<br>Event: A unit has gone berserk<br>Exports: unit<br>Class: ET_BATTLE_UNIT_GOES_BERSERK",
            "BattlePlayerUnitGoesBerserk": "Identifier: BattlePlayerUnitGoesBerserk<br>Event: One of the player's units has gone berserk<br>Exports: player_unit<br>Class: ET_BATTLE_PLAYER_GOES_BERSERK",
            "BattleEnemyUnitGoesBerserk": "Identifier: BattleEnemyUnitGoesBerserk<br>Event: One of the enemies' units has routed<br>Exports: enemy_unit<br>Class: ET_BATTLE_ENEMY_UNIT_GOES_BERSERK",
            "BattleUnitRouts": "Identifier: BattleUnitRouts<br>Event: A unit has routed<br>Exports: unit<br>Class: ET_BATTLE_UNIT_ROUTS",
            "BattlePlayerUnitRouts": "Identifier: BattlePlayerUnitRouts<br>Event: One of the player's units has routed<br>Exports: player_unit<br>Class: ET_BATTLE_PLAYER_UNIT_ROUTS",
            "BattleEnemyUnitRouts": "Identifier: BattleEnemyUnitRouts<br>Event: One of the enemies' units has routed<br>Exports: enemy_unit<br>Class: ET_BATTLE_ENEMY_UNIT_ROUTS",
            "BattlePlayerSiegeEngineDestroyed": "Identifier: BattlePlayerSiegeEngineDestroyed<br>Event: A siege engine belonging to the player has been destroyed<br>Exports: player_unit<br>Class: ET_BATTLE_PLAYER_SIEGE_ENGINE_DESTROYED",
            "BattleEnemySiegeEngineDestroyed": "Identifier: BattleEnemySiegeEngineDestroyed<br>Event: A siege engine belonging to the enemy has been destroyed<br>Exports: enemy_unit<br>Class: ET_BATTLE_ENEMY_SIEGE_ENGINE_DESTROYED",
            "PostBattle": "Identifier: PostBattle<br>Event: When a battle has finished<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_POST_BATTLE",
            "BattleArmyRouted": "Identifier: BattleArmyRouted<br>Event: An army has been entrirely routed<br>Exports: army<br>Class: ET_BATTLE_ARMY_ROUTED",
            "BattleGeneralKilled": "Identifier: BattleGeneralKilled<br>Event: A general has been killed<br>Exports: character<br>Class: ET_BATTLE_GENERAL_KILLED",
            "BattleGeneralRouted": "Identifier: BattleGeneralRouted<br>Event: A general has been routed<br>Exports: character<br>Class: ET_BATTLE_GENERAL_ROUTED",
            "BattleReinforcementsArrive": "Identifier: BattleReinforcementsArrive<br>Event: A reinforcing army has arrived on the battlefield<br>Exports: army<br>Class: ET_BATTLE_REINFORCEMENTS_ARRIVE",
            "BattleSiegeEngineDestroyed": "Identifier: BattleSiegeEngineDestroyed<br>Event: A siege engine has been destroyed<br>Exports: unit<br>Class: ET_BATTLE_SIEGE_ENGINE_DESTROYED",
            "BattleSiegeEngineDocksWall": "Identifier: BattleSiegeEngineDocksWall<br>Event: A siege engine has docked with a wall<br>Exports: unit<br>Class: ET_BATTLE_SIEGE_ENGINE_DOCKS_WALL",
            "BattleGatesAttackedByEngine": "Identifier: BattleGatesAttackedByEngine<br>Event: An engine has started attacking a gate<br>Exports: unit<br>Class: ET_BATTLE_GATES_ATTACKED_BY_ENGINE",
            "BattleGatesAttackedByPlayerEngine": "Identifier: BattleGatesAttackedByPlayerEngine<br>Event: A player's engine has started attacking a gate<br>Exports: player_unit<br>Class: ET_BATTLE_GATES_ATTACKED_BY_PLAYER_ENGINE",
            "BattleGatesAttackedByEnemyEngine": "Identifier: BattleGatesAttackedByEnemyEngine<br>Event: An enemy's engine has started attacking a gate<br>Exports: enemy_unit<br>Class: ET_BATTLE_GATES_ATTACKED_BY_ENEMY_ENGINE",
            "BattleBattleGatesDestroyedByEngine": "Identifier: BattleBattleGatesDestroyedByEngine<br>Event: An engine has destroyed a gate<br>Exports: unit<br>Class: ET_BATTLE_GATES_DESTROYED_BY_ENGINE",
            "BattleWallsBreachedByEngine": "Identifier: BattleWallsBreachedByEngine<br>Event: A siege engine has knocked down a wall<br>Exports: unit<br>Class: ET_BATTLE_WALLS_BREACHED_BY_ENGINE",
            "BattleWallsCaptured": "Identifier: BattleWallsCaptured<br>Event: A siege engine has knocked down a wall<br>Exports: unit<br>Class: ET_BATTLE_WALLS_CAPTURED",
            "BattleFinished": "Identifier: BattleFinished<br>Event: The battle has finished<br>Exports: unit<br>Class: ET_BATTLE_FINISHED",
            "EnteredCityView": "Identifier: EnteredCityView<br>Event: City View battle entered<br>Exports: <br>Class: ET_CITY_VIEW_ENTERED",
            "BattleMinimapAction": "Identifier: BattleMinimapAction<br>Event: Clicked or hid/shown the battle minimap<br>Exports: <br>Class: ET_BATTLE_MINIMAP_ACTION",
            "BattlePlayerUnitSelected": "Identifier: BattlePlayerUnitSelected<br>Event: player selected a unit of their army<br>Exports: <br>Class: ET_BATTLE_PLAYER_UNIT_SELECTED",
            "EnterTacticalMode": "Identifier: EnterTacticalMode<br>Event: Entering tactical mode<br>Exports: <br>Class: ET_ENTER_TACTICAL_MODE",
            "BattleReinforcementsHack": "Identifier: BattleReinforcementsHack<br>Event: Early Update in battle menu to notify for possible reinforcements<br>Exports: <br>Class: ET_BATTLE_REINFORCEMENTS_HACK",
            "FactionTurnStart": "Identifier: FactionTurnStart<br>Event: A Faction has started its turn<br>Exports: faction<br>Class: ET_FACTION_TURN_START",
            "FactionWarDeclared": "Identifier: FactionWarDeclared<br>Event: War has been declared by faction on target_faction<br>Exports: faction, target_faction<br>Class: ET_FACTION_WAR_DECLARED",
            "HordeFormed": "Identifier: HordeFormed<br>Event: A Faction has formed a horde<br>Exports: faction<br>Class: ET_FACTION_HORDE_FORMED",
            "FactionTurnEnd": "Identifier: FactionTurnEnd<br>Event: A Faction has ended its turn<br>Exports: faction<br>Class: ET_FACTION_TURN_END",
            "HireMercenaries": "Identifier: HireMercenaries<br>Event: A General has hired some mercenaries<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_HIRE_MERCENARIES",
            "GeneralCaptureResidence": "Identifier: GeneralCaptureResidence<br>Event: A General has captured a residence (fort, watchtower)<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_GENERAL_CAPTURE_RESIDENCE",
            "GeneralCaptureWonder": "Identifier: GeneralCaptureWonder<br>Event: A General has captured a wonder<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_GENERAL_CAPTURE_WONDER",
            "GeneralCaptureSettlement": "Identifier: GeneralCaptureSettlement<br>Event: A General has captured a settlement<br>Exports: nc_character_record, character_record, faction, region_id, character_type, target_settlement, settlement, rsam<br>Class: ET_GENERAL_CAPTURE_SETTLEMENT",
            "LeaderDestroyedFaction": "Identifier: LeaderDestroyedFaction<br>Event: A faction has been destroyed<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_LEADER_DESTROYED_FACTION",
            "Disaster": "Identifier: Disaster<br>Event: A disaster has happened<br>Exports: event_type<br>Class: ET_DISASTER",
            "CharacterDamagedByDisaster": "Identifier: CharacterDamagedByDisaster<br>Event: A character has been injured by a disaster<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_CHARACTER_DAMAGED_BY_DISASTER",
            "GeneralAssaultsResidence": "Identifier: GeneralAssaultsResidence<br>Event: An assault has taken place<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_ASSAULT",
            "OfferedForAdoption": "Identifier: OfferedForAdoption<br>Event: An adoption has been proposed<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_OFFERED_FOR_ADOPTION",
            "LesserGeneralOfferedForAdoption": "Identifier: LesserGeneralOfferedForAdoption<br>Event: An lesser general adoption has been proposed<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_LESSER_GENERAL_OFFERED_FOR_ADOPTION",
            "OfferedForMarriage": "Identifier: OfferedForMarriage<br>Event: An marriage offer has been proposed<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_OFFERED_FOR_MARRIAGE",
            "BrotherAdopted": "Identifier: BrotherAdopted<br>Event: An brother has been adopted<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_BROTHER_ADOPTED",
            "BecomesFactionLeader": "Identifier: BecomesFactionLeader<br>Event: The character has been made the faction leader<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_BECOMES_FACTION_LEADER",
            "BecomesFactionHeir": "Identifier: BecomesFactionHeir<br>Event: The character has been made the faction heir<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_BECOMES_FACTION_HEIR",
            "TakeOffice": "Identifier: TakeOffice<br>Event: The character has taken a senate office<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_TAKE_OFFICE",
            "CeasedFactionLeader": "Identifier: CeasedFactionLeader<br>Event: The character is no longer faction leader<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_CEASED_FACTION_LEADER",
            "CeasedFactionHeir": "Identifier: CeasedFactionHeir<br>Event: The character is no longer faction heir<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_CEASED_FACTION_HEIR",
            "LeaveOffice": "Identifier: LeaveOffice<br>Event: The character has left a senate office<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_LEAVE_OFFICE",
            "UngarrisonedFort": "Identifier: UngarrisonedFort<br>Event: A fort is no longer garrisoned<br>Exports: faction, fort, region_id<br>Class: ET_UNGARRISONED_FORT",
            "LostLegionaryEagle": "Identifier: LostLegionaryEagle<br>Event: When a roman general has lost a battle and one of your units was carrying a legionary eagle(first cohort)<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_LOST_LEGIONARY_EAGLE",
            "CapturedLegionaryEagle": "Identifier: CapturedLegionaryEagle<br>Event: When you have defeated a roman general and one of his units was carrying a legionary eagle(first cohort), you capture it<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_CAPTURED_LEGIONARY_EAGLE",
            "RecapturedLegionaryEagle": "Identifier: RecapturedLegionaryEagle<br>Event: We recaptured the eagle by completing the senate mission by conquering the settlement which holds it<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_RECAPTURED_LEGIONARY_EAGLE",
            "SenateExposure": "Identifier: SenateExposure<br>Event: The senate has leaked information about you as punishment for failing a mission<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_SENATE_EXPOSURE",
            "QuaestorInvestigationMinor": "Identifier: QuaestorInvestigationMinor<br>Event: The senate has punished you by launching an investigation by the quaestor, probably leading to a minor fine<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_QUAESTOR_INVESTIGATION_MINOR",
            "QuaestorInvestigation": "Identifier: QuaestorInvestigation<br>Event: The senate has punished you by launching an investigation by the quaestor, probably leading to a fine<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_QUAESTOR_INVESTIGATION",
            "QuaestorInvestigationMajor": "Identifier: QuaestorInvestigationMajor<br>Event: The senate has punished you by launching an investigation by the quaestor, probably leading to a major fine<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_QUAESTOR_INVESTIGATION_MAJOR",
            "PopularSupportForOverthrow": "Identifier: PopularSupportForOverthrow<br>Event: The people of Rome are prepared to support any action against the senate<br>Exports: faction<br>Class: ET_POPULAR_SUPPORT_FOR_OVERTHROW",
            "SenateReadyToOutlawFaction": "Identifier: SenateReadyToOutlawFaction<br>Event: The senate has had enough of this faction's empire building and grandstanding<br>Exports: faction<br>Class: ET_SENATE_READY_TO_OUTLAW_FACTION",
            "SenateOutlawsFaction": "Identifier: SenateOutlawsFaction<br>Event: The senate has declared this faction outlaw<br>Exports: faction<br>Class: ET_SENATE_OUTLAWS_FACTION",
            "NewTurnStart": "Identifier: NewTurnStart<br>Event: A new turn has started (not triggered on game open)<br>Exports: nothing<br>Class: ET_NEW_TURN_START",
            "ScriptPromptCallback": "Identifier: ScriptPromptCallback<br>Event: A script prompt has received player input<br>Exports: nothing<br>Class: ET_SCRIPT_MESSAGE_CALLBACK",
            "FactionDestroyed": "Identifier: FactionDestroyed<br>Event: A script prompt has received player input<br>Exports: faction<br>Class: ET_FACTION_DESTROYED",
            "Birth": "Identifier: Birth<br>Event: A child is born to the faction leader<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_BIRTH",
            "CharacterComesOfAge": "Identifier: CharacterComesOfAge<br>Event: A Character has come of age<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_COMING_OF_AGE",
            "CharacterMarries": "Identifier: CharacterMarries<br>Event: A Character has married<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_MARRIAGE",
            "CharacterBecomesAFather": "Identifier: CharacterBecomesAFather<br>Event: A Character has become a father<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_BECOMES_FATHER",
            "CharacterTurnStart": "Identifier: CharacterTurnStart<br>Event: A Character has started its turn<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_CHARACTER_TURN_START",
            "CharacterTurnEnd": "Identifier: CharacterTurnEnd<br>Event: A Character has finished its turn<br>Exports: nc_character_record, character_record, faction, region_id, character_type, settlement<br>Class: ET_CHARACTER_TURN_END",
            "CharacterTurnEndInSettlement": "Identifier: CharacterTurnEndInSettlement<br>Event: A Character has finished its turn<br>Exports: nc_character_record, character_record, faction, region_id, character_type, settlement<br>Class: ET_CHARACTER_TURN_END_IN_SETTLEMENT",
            "GeneralDevastatesTile": "Identifier: GeneralDevastatesTile<br>Event: A General and his army has devastated an enemy's fertile land<br>Exports: nc_character_record, character_record, faction, region_id, character_type, settlement<br>Class: ET_GENERAL_DEVASTATES_TILE",
            "ConstructionItemClicked": "Identifier: ConstructionItemClicked<br>Event: Called when a construction item is clicked<br>Exports: resource_description<br>Class: ET_CONSTRUCTION_ITEM_CLICKED",
            "RecruitmentItemClicked": "Identifier: RecruitmentItemClicked<br>Event: Called when a recruitment item is clicked<br>Exports: resource_description<br>Class: ET_RECRUITMENT_ITEM_CLICKED",
            "RecruitmentPopulated": "Identifier: RecruitmentPopulated<br>Event: Called when recruitment options are added<br>Exports: <br>Class: ET_RECRUITMENT_POPULATED",
            "ConstructionPopulated": "Identifier: ConstructionPopulated<br>Event: Called when construction options are added<br>Exports: <br>Class: ET_CONSTRUCTION_POPULATED",
            "AgentListPopulated": "Identifier: AgentListPopulated<br>Event: Called when agent list has been populated<br>Exports: <br>Class: ET_AGENT_LIST_POPULATED",
            "MoveRetinuePopulated": "Identifier: MoveRetinuePopulated<br>Event: Called when move retinue window gets populated<br>Exports: <br>Class: ET_MOVE_RETINUE_POPULATED",
            "MoveRetinuePressed": "Identifier: MoveRetinuePressed<br>Event: Called when move retinue character gets pressed<br>Exports: <br>Class: ET_MOVE_RETINUE_PRESSED",
            "MoveRetinueAncillarySelected": "Identifier: MoveRetinueAncillarySelected<br>Event: <br>Exports: <br>Class: ET_MOVE_RETINUE_ANCILLARY_SELECTED",
            "MoveRetinueAncillaryDeselected": "Identifier: MoveRetinueAncillaryDeselected<br>Event: <br>Exports: <br>Class: ET_MOVE_RETINUE_ANCILLARY_DESELECTED",
            "MissionSelected": "Identifier: MissionSelected<br>Event: Called when a mission on the agent hub has been selected<br>Exports: <br>Class: ET_MISSION_SELECTED",
            "AgentSelected": "Identifier: AgentSelected<br>Event: Called when a agent has been selected<br>Exports: resource_description<br>Class: ET_AGENT_SELECTED",
            "ScrollDidOpen": "Identifier: ScrollDidOpen<br>Event: Called when a scroll is opened<br>Exports: resource_description<br>Class: ET_SCROLL_DID_OPEN",
            "UnitHasRouted": "Identifier: UnitHasRouted<br>Event: Called when a unit starts routing<br>Exports: resource_description<br>Class: ET_UNIT_HAS_ROUTED",
            "BattleUnitActionStatus": "Identifier: BattleUnitActionStatus<br>Event: Called when a unit changes status<br>Exports: resource_description, resource_status<br>Class: ET_BATTLE_UNIT_ACTION_STATUS",
            "DiplomacyScrollPopulated": "Identifier: DiplomacyScrollPopulated<br>Event: Called when diplomacy offers are added<br>Exports: <br>Class: ET_DIPLOMACY_SCROLL_POPULATED",
            "ItemDeselected": "Identifier: ItemDeselected<br>Event: Called when an item on the campaign map is deselected<br>Exports: <br>Class: ET_ITEM_DESELECTED",
            "UnitInfoOpened": "Identifier: UnitInfoOpened<br>Event: Called when a unit's info panel is opened in a battle.<br>Exports: <br>Class: ET_UNIT_INFO_OPENED",
            "AdvisorAudioStopped": "Identifier: AdvisorAudioStopped<br>Event: Called when the advisor audio gets stopped.<br>Exports: <br>Class: ET_ADVISOR_AUDIO_STOPPED",
            "SpyMission": "Identifier: SpyMission<br>Event: A spy mission has completed<br>Exports: nc_character_record, character_record, faction, region_id, character_type, target_faction, mission_success_level<br>Class: ET_SPY_MISSION",
            "ExecutesASpyOnAMission": "Identifier: ExecutesASpyOnAMission<br>Event: An spying mission has failed and the spy is executed by the target<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_EXECUTES_A_SPY_ON_A_MISSION",
            "LeaderOrderedSpyingMission": "Identifier: LeaderOrderedSpyingMission<br>Event: A Faction leader has ordered a spying mission<br>Exports: nc_character_record, character_record, faction, region_id, character_type, target_faction, mission_success_level<br>Class: ET_LEADER_ORDERED_SPYING_MISSION",
            "AssassinationMission": "Identifier: AssassinationMission<br>Event: An assassination mission has completed<br>Exports: nc_character_record, character_record, faction, region_id, character_type, mission_success_level<br>Class: ET_ASSASSINATION_MISSION",
            "ExecutesAnAssassinOnAMission": "Identifier: ExecutesAnAssassinOnAMission<br>Event: An assassination mission has failed and the assassin is executed by the target<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_EXECUTES_AN_ASSASSIN_ON_A_MISSION",
            "LeaderOrderedAssassination": "Identifier: LeaderOrderedAssassination<br>Event: A Faction leader has ordered an assassination mission<br>Exports: nc_character_record, character_record, faction, region_id, character_type, target_faction, mission_success_level<br>Class: ET_LEADER_ORDERED_ASSASSINATION_MISSION",
            "SufferAssassinationAttempt": "Identifier: SufferAssassinationAttempt<br>Event: Someone has had an attempt on their life<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_SUFFER_ASSASSINATION_ATTEMPT",
            "SabotageMission": "Identifier: SabotageMission<br>Event: A sabotage mission has completed<br>Exports: nc_character_record, character_record, faction, region_id, character_type, mission_success_level<br>Class: ET_SABOTAGE_MISSION",
            "LeaderOrderedSabotage": "Identifier: LeaderOrderedSabotage<br>Event: A Faction leader has ordered a sabotage mission<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_LEADER_ORDERED_SABOTAGE_MISSION",
            "BriberyMission": "Identifier: BriberyMission<br>Event: A bribery mission has completed<br>Exports: nc_character_record, character_record, faction, region_id, character_type, target_faction, mission_success_level<br>Class: ET_BRIBERY_MISSION",
            "LeaderOrderedBribery": "Identifier: LeaderOrderedBribery<br>Event: A Faction leader has ordered a bribery mission<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_LEADER_ORDERED_BRIBERY_MISSION",
            "AcceptBribe": "Identifier: AcceptBribe<br>Event: Someone has been bribed<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_ACCEPT_BRIBE",
            "RefuseBribe": "Identifier: RefuseBribe<br>Event: Someone has refused a bribe<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_REFUSE_BRIBE",
            "Insurrection": "Identifier: Insurrection<br>Event: Insurgence has been provoked<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_INSURRECTION",
            "DiplomacyMission": "Identifier: DiplomacyMission<br>Event: A diplomacy mission has completed<br>Exports: nc_character_record, character_record, faction, region_id, character_type, target_faction, mission_success_level<br>Class: ET_DIPLOMACY_MISSION",
            "LeaderOrderedDiplomacy": "Identifier: LeaderOrderedDiplomacy<br>Event: A Faction leader has ordered a diplomacy mission<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_LEADER_ORDERED_DIPLOMACY_MISSION",
            "LeaderSenateMissionSuccess": "Identifier: LeaderSenateMissionSuccess<br>Event: A Senate mission has been completed<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_LEADER_SENATE_MISSION_SUCCESS",
            "LeaderSenateMissionFailed": "Identifier: LeaderSenateMissionFailed<br>Event: A Senate mission has failed<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_LEADER_SENATE_MISSION_FAILED",
            "SettlementTurnStart": "Identifier: SettlementTurnStart<br>Event: A Settlement is being processed for the start of its faction's turn<br>Exports: faction, settlement, region_id<br>Class: ET_SETTLEMENT_TURN_START",
            "SettlementTurnEnd": "Identifier: SettlementTurnEnd<br>Event: A Settlement is being processed for the end of its faction's turn<br>Exports: faction, settlement, region_id<br>Class: ET_SETTLEMENT_TURN_END",
            "NewAdmiralCreated": "Identifier: NewAdmiralCreated<br>Event: A new admiral has been created for a new ship<br>Exports: faction, settlement, character<br>Class: ET_NEW_ADMIRAL_CREATED",
            "UnitTrained": "Identifier: UnitTrained<br>Event: A unit has been trained<br>Exports: faction, settlement, resource_description, unit_category<br>Class: ET_UNIT_TRAINED",
            "GovernorUnitTrained": "Identifier: GovernorUnitTrained<br>Event: A unit has been trained<br>Exports: nc_character_record, character_record, faction, region_id, character_type, settlement, resource_description, unit_category<br>Class: ET_GOVERNOR_UNIT_TRAINED",
            "BuildingCompleted": "Identifier: BuildingCompleted<br>Event: A building has been completed<br>Exports: faction, settlement, prior_build, advised_build<br>Class: ET_BUILDING_COMPLETED",
            "GovernorBuildingCompleted": "Identifier: GovernorBuildingCompleted<br>Event: A building has been completed<br>Exports: nc_character_record, character_record, faction, region_id, character_type, settlement, prior_build, advised_build<br>Class: ET_GOVERNOR_BUILDING_COMPLETED",
            "PlugInCompleted": "Identifier: PlugInCompleted<br>Event: A plugin has been completed<br>Exports: faction, settlement, region_id, prior_build, advised_build<br>Class: ET_PLUG_IN_COMPLETED",
            "GovernorPlugInCompleted": "Identifier: GovernorPlugInCompleted<br>Event: A plugin has been completed<br>Exports: nc_character_record, character_record, faction, region_id, character_type, prior_build<br>Class: ET_GOVERNOR_PLUG_IN_COMPLETED",
            "AgentCreated": "Identifier: AgentCreated<br>Event: An agent has been trained<br>Exports: character_record, character_type, settlement, faction<br>Class: ET_AGENT_CREATED",
            "GovernorAgentCreated": "Identifier: GovernorAgentCreated<br>Event: An agent has been trained<br>Exports: nc_character_record, character_record, faction, region_id, character_type, settlement<br>Class: ET_GOVERNOR_AGENT_CREATED",
            "BuildingDestroyed": "Identifier: BuildingDestroyed<br>Event: A building has been destroyed<br>Exports: <br>Class: ET_BUILDING_DESTROYED",
            "GovernorBuildingDestroyed": "Identifier: GovernorBuildingDestroyed<br>Event: A building has been destroyed<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_GOVERNOR_BUILDING_DESTROYED",
            "CityRiots": "Identifier: CityRiots<br>Event: A settlement has rioted<br>Exports: faction, settlement, region_id, target_faction<br>Class: ET_SETTLEMENT_RIOTS",
            "GovernorCityRiots": "Identifier: GovernorCityRiots<br>Event: A settlement has rioted<br>Exports: nc_character_record, character_record, faction, region_id, character_type, settlement, target_faction<br>Class: ET_GOVERNOR_SETTLEMENT_RIOTS",
            "CityRebels": "Identifier: CityRebels<br>Event: A settlement has rebelled<br>Exports: faction, settlement, region_id, target_faction<br>Class: ET_SETTLEMENT_REBELS",
            "GovernorCityRebels": "Identifier: GovernorCityRebels<br>Event: A settlement has rebelled<br>Exports: nc_character_record, character_record, faction, region_id, character_type, settlement, target_faction<br>Class: ET_GOVERNOR_SETTLEMENT_REBELS",
            "GovernorThrowGames": "Identifier: GovernorThrowGames<br>Event: Games have been thrown<br>Exports: nc_character_record, character_record, faction, region_id, character_type, settlement<br>Class: ET_GOVERNOR_THROW_GAMES",
            "GovernorThrowRaces": "Identifier: GovernorThrowRaces<br>Event: Races have been thrown<br>Exports: nc_character_record, character_record, faction, region_id, character_type, settlement<br>Class: ET_GOVERNOR_THROW_RACES",
            "UngarrisonedSettlement": "Identifier: UngarrisonedSettlement<br>Event: A settlement is no longer garrisoned<br>Exports: faction, settlement, region_id<br>Class: ET_UNGARRISONED_SETTLEMENT",
            "EnslavePopulation": "Identifier: EnslavePopulation<br>Event: A settlement has been captured and some of its population has been enslaved<br>Exports: nc_character_record, character_record, faction, target_faction, region_id, character_type, settlement<br>Class: ET_ENSLAVE_POPULATION",
            "ExterminatePopulation": "Identifier: ExterminatePopulation<br>Event: A settlement has been captured and some of its population has been decimated<br>Exports: nc_character_record, character_record, faction, region_id, character_type, settlement<br>Class: ET_EXTERMINATE_POPULATION",
            "CitySacked": "Identifier: CitySacked<br>Event: A settlement has been sacked<br>Exports: faction, settlement, region_id, target_faction<br>Class: ET_SETTLEMENT_SACKED",
            "CharacterSelected": "Identifier: CharacterSelected<br>Event: The player has selected a character<br>Exports: nc_character_record, character_record, faction, region_id, character_type, character_action_advice, target_settlement<br>Class: ET_CHARACTER_SELECTED",
            "SettlementSelected": "Identifier: SettlementSelected<br>Event: The player has selected a settlement<br>Exports: faction, settlement, region_id<br>Class: ET_SETTLEMENT_SELECTED",
            "EnemySettlementSelected": "Identifier: EnemySettlementSelected<br>Event: An enemy Settlement is selected on the Strat map.<br>Exports: <br>Class: ET_FTH_ENEMY_SETTLEMENT_SELECTED",
            "MultiTurnMove": "Identifier: MultiTurnMove<br>Event: The player has selected a position beyond the character's extents<br>Exports: nc_character_record, character_record, faction, region_id, character_type<br>Class: ET_MULTI_TURN_MOVE",
            "CharacterPanelOpen": "Identifier: CharacterPanelOpen<br>Event: The player has opened the panel for the selected character<br>Exports: character_record, faction, region_id, character_type<br>Class: ET_CHARACTER_PANEL_OPEN",
            "SettlementPanelOpen": "Identifier: SettlementPanelOpen<br>Event: The player has opened the panel for the selected settlement<br>Exports: faction, settlement, region_id<br>Class: ET_SETTLEMENT_PANEL_OPEN",
            "FinancesPanelOpen": "Identifier: FinancesPanelOpen<br>Event: The player has opened his finances panel<br>Exports: faction<br>Class: ET_FINANCES_PANEL_OPEN",
            "FactionSummaryPanelOpen": "Identifier: FactionSummaryPanelOpen<br>Event: The player has opened the faction summary panel<br>Exports: faction<br>Class: ET_FACTION_SUMMARY_PANEL_OPEN",
            "FamilyTreePanelOpen": "Identifier: FamilyTreePanelOpen<br>Event: The player has opened the family tree panel<br>Exports: faction<br>Class: ET_FAMILY_TREE_PANEL_OPEN",
            "DiplomaticStandingPanelOpen": "Identifier: DiplomaticStandingPanelOpen<br>Event: The player has opened the diplomatic standing panel<br>Exports: <br>Class: ET_DIPLOMATIC_STANDING_PANEL_OPEN",
            "SenateMissionsPanelOpen": "Identifier: SenateMissionsPanelOpen<br>Event: The player has opened the senate missions panel<br>Exports: faction<br>Class: ET_SENATE_MISSIONS_PANEL_OPEN",
            "SenateOfficesPanelOpen": "Identifier: SenateOfficesPanelOpen<br>Event: The player has opened the senate offices panel<br>Exports: <br>Class: ET_SENATE_OFFICES_PANEL_OPEN",
            "DiplomacyPanelOpen": "Identifier: DiplomacyPanelOpen<br>Event: The player has opened a diplomacy panel<br>Exports: faction<br>Class: ET_DIPLOMACY_PANEL_OPEN",
            "PreBattlePanelOpen": "Identifier: PreBattlePanelOpen<br>Event: The player has attacked an army or settlement.  The decision panel is now open.<br>Exports: faction<br>Class: ET_PRE_BATTLE_PANEL_OPEN",
            "RecruitmentPanelOpen": "Identifier: RecruitmentPanelOpen<br>Event: The player has opened a recruitment panel<br>Exports: faction, settlement, region_id<br>Class: ET_RECRUITMENT_PANEL_OPEN",
            "ConstructionPanelOpen": "Identifier: ConstructionPanelOpen<br>Event: The player has opened a construction panel<br>Exports: faction, settlement, region_id<br>Class: ET_CONSTRUCTION_PANEL_OPEN",
            "TradePanelOpen": "Identifier: TradePanelOpen<br>Event: The player has opened a trade panel<br>Exports: faction, settlement, region_id<br>Class: ET_TRADE_PANEL_OPEN",
            "HireMercenariesPanelOpen": "Identifier: HireMercenariesPanelOpen<br>Event: The player has opened a hire mercenaries panel<br>Exports: <br>Class: ET_HIRE_MERCENARIES_PANEL_OPEN",
            "NavalAutoResolvePanelOpen": "Identifier: NavalAutoResolvePanelOpen<br>Event: The naval auto resolve panel has opened<br>Exports: <br>Class: ET_NAVAL_AUTO_RESOLVE_PANEL_OPEN",
            "IncomingMessage": "Identifier: IncomingMessage<br>Event: A message has arrived for the player<br>Exports: event<br>Class: ET_INCOMING_MESSAGE",
            "MessageOpen": "Identifier: MessageOpen<br>Event: The player has opened a message<br>Exports: event<br>Class: ET_MESSAGE_OPEN",
            "RequestBuildingAdvice": "Identifier: RequestBuildingAdvice<br>Event: The player has requested building advice<br>Exports: faction, settlement, region_id, advised_build<br>Class: ET_BUILDING_ADVICE",
            "RequestTrainingAdvice": "Identifier: RequestTrainingAdvice<br>Event: The player has requested training advice<br>Exports: faction, settlement, region_id, resource_description<br>Class: ET_TRAINING_ADVICE",
            "RequestMercenariesAdvice": "Identifier: RequestMercenariesAdvice<br>Event: The player has requested mercenaries advice<br>Exports: army<br>Class: ET_MERCENARIES_ADVICE",
            "ButtonPressed": "Identifier: ButtonPressed<br>Event: The player has clicked on a button<br>Exports: resource_description<br>Class: ET_BUTTON_PRESSED",
            "ShortcutTriggered": "Identifier: ShortcutTriggered<br>Event: The player triggered a keyboard shortcut<br>Exports: resource_description<br>Class: ET_SHORTCUT_TRIGGERED",
            "ScrollOpened": "Identifier: ScrollOpened<br>Event: The player opened a scroll<br>Exports: resource_description<br>Class: ET_SCROLL_OPENED",
            "ScrollClosed": "Identifier: ScrollClosed<br>Event: The player closed a scroll<br>Exports: resource_description<br>Class: ET_SCROLL_CLOSED",
            "AdviceSupressed": "Identifier: AdviceSupressed<br>Event: The player has suppressed a piece of advice<br>Exports: resource_description<br>Class: ET_ADVICE_SUPPRESSED",
            "ScrollAdviceRequested": "Identifier: ScrollAdviceRequested<br>Event: The player has requested advice on a scroll<br>Exports: resource_description<br>Class: ET_SCROLL_ADVICE_REQUESTED",
            "PreBattleScrollAdviceRequested": "Identifier: PreBattleScrollAdviceRequested<br>Event: The player has requested advice on the prebattle scroll<br>Exports: none<br>Class: ET_PREBATTLE_SCROLL_ADVICE_REQUESTED",
            "NavalPreBattleScrollAdviceRequested": "Identifier: NavalPreBattleScrollAdviceRequested<br>Event: The player has requested advice on the naval prebattle scroll<br>Exports: none<br>Class: ET_NAVAL_PREBATTLE_SCROLL_ADVICE_REQUESTED",
            "SettlementScrollAdviceRequested": "Identifier: SettlementScrollAdviceRequested<br>Event: The player has requested advice on the settlement scroll<br>Exports: faction, settlement, region_id<br>Class: ET_SETTLEMENT_SCROLL_ADVICE_REQUESTED",
            "Idle": "Identifier: Idle<br>Event: The player has remained idle for some time (Not implemented)<br>Exports: <br>Class: ET_IDLE",
            "AbandonShowMe": "Identifier: AbandonShowMe<br>Event: The player has abandoned a show me scipt<br>Exports: <br>Class: ET_ABANDON_SHOW_ME",
            "ScriptedAdvice": "Identifier: ScriptedAdvice<br>Event: The player has been issued with advice by a script<br>Exports: none<br>Class: ET_SCRIPTED_ADVICE",
            "DeclineAutomatedSettlementManagement": "Identifier: DeclineAutomatedSettlementManagement<br>Event: The player has declined automated settlement management<br>Exports: faction, settlement, best_finance_option<br>Class: ET_DECLINE_AUTOMATED_SETTLEMENT_MANAGEMENT",
            "EscPressed": "Identifier: EscPressed<br>Event: The escape key has been pressed.  This trigger will only fire if the command StealEscKey has been used<br>Exports: none<br>Class: ET_ESC_PRESSED",
            "GameReloaded": "Identifier: GameReloaded<br>Event: A strat map game has been reloaded<br>Exports: none<br>Class: ET_GAME_RELOADED",
            "FirstStratUpdates": "Identifier: FirstStratUpdates<br>Event: First strategy map updates<br>Exports: none<br>Class: ET_FIRST_STRAT_UPDATES",
            "MovieStopped": "Identifier: MovieStopped<br>Event: The player stopped the movie<br>Exports: <br>Class: ET_MOVIE_STOPPED",
            "SelectionAssistPossible": "Identifier: SelectionAssistPossible<br>Event: Selection assist could be useful<br>Exports: <br>Class: ET_SELECTION_ASSIST_COULD_FIRE",
            "SettlementButtonPressed": "Identifier: SettlementButtonPressed<br>Event: The player has clicked on a button associated with a settlement<br>Exports: resource_description, faction, settlement, region_id<br>Class: ET_SETTLEMENT_BUTTON_PRESSED",
            "WorldScriptTerminate": "Identifier: WorldScriptTerminate<br>Event: A world script has finished<br>Exports: resource_description<br>Class: ET_WORLD_SCRIPT_TERMINATE",
            "CampaignHudShown": "Identifier: CampaignHudShown<br>Event: We are at the campaign hud with no screens visible<br>Exports: <br>Class: ET_CAMPAIGN_HUD_SHOWN",
            "ContextPopupInteraction": "Identifier: ContextPopupInteraction<br>Event: A context popup button has been tapped<br>Exports: <br>Class: ET_CONTEXT_POPUP_INTERACTION",
            "DiplomacyConstructingOffer": "Identifier: DiplomacyConstructingOffer<br>Event: We are constructing an offer in the diplomacy scroll<br>Exports: <br>Class: ET_DIPLOMACY_CONSTRUCTING_OFFER",
            "DiplomacyConstructingCounterOffer": "Identifier: DiplomacyConstructingCounterOffer<br>Event: We are constructing a counter offer in the diplomacy scroll<br>Exports: <br>Class: ET_DIPLOMACY_CONSTRUCTING_COUNTER_OFFER",
            "DiplomacyOpponentPresentsOffer": "Identifier: DiplomacyOpponentPresentsOffer<br>Event: We are presented an offer in the diplomacy scroll<br>Exports: <br>Class: ET_DIPLOMACY_OPPONENT_PRESENTS_OFFER",
            "DiplomacyOpponentPresentsCounterOffer": "Identifier: DiplomacyOpponentPresentsCounterOffer<br>Event: We are presented a counter offer in the diplomacy<br>Exports: <br>Class: ET_DIPLOMACY_OPPONENT_PRESENTS_COUNTER_OFFER",
            "FactionSummary": "Identifier: FactionSummary<br>Event: Faction Summary Screen Open (and we're not immediately opening another tab)<br>Exports: <br>Class: ET_FACTION_SUMMARY",
            "FactionSenate": "Identifier: FactionSenate<br>Event: Faction Senate Screen Open<br>Exports: <br>Class: ET_FACTION_SENATE",
            "FactionSenatePolicy": "Identifier: FactionSenatePolicy<br>Event: Faction Senate Policy Screen Open<br>Exports: <br>Class: ET_FACTION_SENATE_POLICY",
            "FactionSenateMissions": "Identifier: FactionSenateMissions<br>Event: Faction Senate Missions Screen Open<br>Exports: <br>Class: ET_FACTION_SENATE_MISSIONS",
            "FactionSenateOfficials": "Identifier: FactionSenateOfficials<br>Event: Faction Senate Officials Screen Open<br>Exports: <br>Class: ET_FACTION_SENATE_OFFICIALS",
            "FactionSenateFloor": "Identifier: FactionSenateFloor<br>Event: Faction Senate Officials Screen Open<br>Exports: <br>Class: ET_FACTION_SENATE_FLOOR",
            "FactionFactions": "Identifier: FactionFactions<br>Event: Faction Factions Screen Open - Overlaps with FactionSummaryPanelOpen<br>Exports: <br>Class: ET_FACTION_FACTIONS",
            "FactionDetails": "Identifier: FactionDetails<br>Event: Faction Details Screen Open<br>Exports: <br>Class: ET_FACTION_DETAILS",
            "FactionFamilyTree": "Identifier: FactionFamilyTree<br>Event: Faction Family Tree Open<br>Exports: <br>Class: ET_FACTION_FAMILY_TREE",
            "FactionRankings": "Identifier: FactionRankings<br>Event: Faction Rankings Screen Open<br>Exports: <br>Class: ET_FACTION_RANKINGS",
            "FactionLists": "Identifier: FactionLists<br>Event: Faction Lists Screen Open<br>Exports: <br>Class: ET_FACTION_LISTS",
            "SettlementCharacter": "Identifier: SettlementCharacter<br>Event: Settlement Character Panel is Opened<br>Exports: <br>Class: ET_SETTLEMENT_CHARACTER",
            "SettlementTrade": "Identifier: SettlementTrade<br>Event: Settlement Trade Panel is Opened (Phone UI)<br>Exports: <br>Class: ET_SETTLEMENT_TRADE",
            "SettlementOverview": "Identifier: SettlementOverview<br>Event: Settlement Panel is opened to the main screen(Phone UI)<br>Exports: <br>Class: ET_SETTLEMENT_OVERVIEW",
            "SpySelected": "Identifier: SpySelected<br>Event: You have selected a spy<br>Exports: <br>Class: ET_SPY_SELECTED",
            "DiplomatSelected": "Identifier: DiplomatSelected<br>Event: You have selected a diplomat<br>Exports: <br>Class: ET_DIPLOMAT_SELECTED",
            "AssassinSelected": "Identifier: AssassinSelected<br>Event: You have selected an assassin<br>Exports: <br>Class: ET_ASSASSIN_SELECTED",
            "FleetSelected": "Identifier: FleetSelected<br>Event: You have selected a fleet<br>Exports: <br>Class: ET_FLEET_SELECTED",
            "CampaignMapGesture": "Identifier: CampaignMapGesture<br>Event: You have performed gesture navigation on the campaign map<br>Exports: <br>Class: ET_CAMPAIGN_MAP_GESTURE",
            "CampaignDoingBadly": "Identifier: CampaignDoingBadly<br>Event: Campaign is not going well<br>Exports: <br>Class: ET_CAMPAIGN_DOING_BADLY",
            "BattleMapGesture": "Identifier: BattleMapGesture<br>Event: You have performed gesture navigation on the battle map<br>Exports: <br>Class: ET_BATTLE_MAP_GESTURE",
            "HideBattleUI": "Identifier: HideBattleUI<br>Event: You have actively hidden the battle UI<br>Exports: <br>Class: ET_HIDE_BATTLE_UI",
            "FeralNewsVisible": "Identifier: FeralNewsVisible<br>Event: The Feral News Dialog is visible to the user<br>Exports: <br>Class: ET_FERAL_NEWS_VISIBLE",
            "AgentHubOpened": "Identifier: AgentHubOpened<br>Event: The Agent Hub tab in the faction overview is opened.<br>Exports: <br>Class: ET_FTH_AGENT_HUB_OPENED",
            "MoveRetinueOpened": "Identifier: MoveRetinueOpened<br>Event: The Move Retinue tab in the faction overview is opened.<br>Exports: <br>Class: ET_FTH_MOVE_RETINUE_OPENED",
            "OwnFactionDetailsOpened": "Identifier: OwnFactionDetailsOpened<br>Event: The Faction Details tab in the faction overview is opened.<br>Exports: <br>Class: ET_FTH_OWN_FACTION_DETAILS_OPENED",
            "DiplomaticStandingShown": "Identifier: DiplomaticStandingShown<br>Event: The Diplomatic Standings are shown in the faction overview.<br>Exports: <br>Class: ET_FTH_DIPLOMATIC_STANDING_SHOWN",
            "FactionFinancesShown": "Identifier: FactionFinancesShown<br>Event: The player's finances are shown in the faction overview.<br>Exports: <br>Class: ET_FTH_FACTION_FINANCES_SHOWN",
            "FamilyTreeShown": "Identifier: FamilyTreeShown<br>Event: The Faction family tree is shown in fullscreen<br>Exports: <br>Class: ET_FTH_FAMILY_TREE_SHOWN",
            "SendAgentPanel": "Identifier: SendAgentPanel<br>Event: The 'Send Agent' button is pressed<br>Exports: <br>Class: ET_FTH_SEND_AGENT_PANEL",
            "SettlementDetailsShown": "Identifier: SettlementDetailsShown<br>Event: A settlement's details are displayed.<br>Exports: <br>Class: ET_FTH_SETTLEMENT_DETAILS_SHOWN",
            "CharacterInfoScreen": "Identifier: CharacterInfoScreen<br>Event: A character's detailed info is displayed.<br>Exports: <br>Class: ET_FTH_CHARACTER_INFO_SCREEN",
            "FriendlyCharacterSelected": "Identifier: FriendlyCharacterSelected<br>Event: A friendly character is selected on the Strat map.<br>Exports: <br>Class: ET_FTH_FRIENDLY_CHARACTER_SELECTED",
            "EnemyCharacterSelected": "Identifier: EnemyCharacterSelected<br>Event: An enemy character is selected on the Strat map.<br>Exports: <br>Class: ET_FTH_ENEMY_CHARACTER_SELECTED",
            "FriendlySettlementSelected": "Identifier: FriendlySettlementSelected<br>Event: A friendly Settlement is selected on the Strat map.<br>Exports: <br>Class: ET_FTH_FRIENDLY_SETTLEMENT_SELECTED",
            "MapOverlayOpened": "Identifier: MapOverlayOpened<br>Event: The map overlay screen is opened.<br>Exports: <br>Class: ET_FTH_MAP_OVERLAY_OPENED",
            "SiegeDetailsShown": "Identifier: SiegeDetailsShown<br>Event: The siege overview scroll is open.<br>Exports: <br>Class: ET_FTH_SIEGE_DETAILS_SHOWN",
            "PreBattleScreen": "Identifier: PreBattleScreen<br>Event: The pre-battle scroll is open.<br>Exports: <br>Class: ET_FTH_PRE_BATTLE_SCREEN",
            "TacticalMapShown": "Identifier: TacticalMapShown<br>Event: The Tactical map is toggled on in a battle.<br>Exports: <br>Class: ET_FTH_TACTICAL_MAP_SHOWN",
            "PostBattleScreen": "Identifier: PostBattleScreen<br>Event: A battle ends and the post battle stats screen opens.<br>Exports: <br>Class: ET_FTH_POST_BATTLE_SCREEN",
            "UnitsGrouped": "Identifier: UnitsGrouped<br>Event: Units have been grouped in a battle.<br>Exports: <br>Class: ET_FTH_UNITS_GROUPED",
            "EnteredBattle": "Identifier: EnteredBattle<br>Event: Player has entered a battle.<br>Exports: <br>Class: ET_FTH_ENTERED_BATTLE",
            "AdvisorOpened": "Identifier: AdvisorOpened<br>Event: Player has opened the advisor panel.<br>Exports: <br>Class: ET_FTH_ADVISOR_OPENED",
            "FormationTypesShown": "Identifier: FormationTypesShown<br>Event: Player has opened the tab that shows formation types in a battle.<br>Exports: <br>Class: ET_FTH_FORMATION_TYPES_SHOWN",
            "MerchantSelected": "Identifier: MerchantSelected<br>Event: Player has selected a merchant on the campaign map.<br>Exports: <br>Class: ET_FTH_MERCHANT_SELECTED",
            "NavalCombatStarted": "Identifier: NavalCombatStarted<br>Event: Player has opened the tab that shows formation types in a battle.<br>Exports: <br>Class: ET_FTH_NAVAL_COMBAT_STARTED",
            "MergeArmiesOpened": "Identifier: MergeArmiesOpened<br>Event: The Merge Army scroll has opened.<br>Exports: <br>Class: ET_FTH_MERGE_ARMIES_OPENED",
            "RoutesBlockaded": "Identifier: RoutesBlockaded<br>Event: The bloackaded routes or ports notification has appeared.<br>Exports: <br>Class: ET_FTH_ROUTES_BLOCKADED",
            "ElectionResults": "Identifier: ElectionResults<br>Event: The senate election results notification has appeared.<br>Exports: <br>Class: ET_FTH_ELECTION_RESULTS",
            "BattleToggleMenu": "Identifier: BattleToggleMenu<br>Event: The battle toggle menu was opened.<br>Exports: <br>Class: ET_FTH_BATTLE_TOGGLE_MENU",
            "AmbushMode": "Identifier: AmbushMode<br>Event: A unit has entered ambush mode<br>Exports: character record, faction, region, character type<br>Class: ET_FTH_AMBUSH_MODE",
            "NewsTabClosed": "Identifier: NewsTabClosed<br>Event: The News tab was closed using the Escape key.<br>Exports: <br>Class: ET_NEWS_TAB_CLOSED",
            "NewsTabOpened": "Identifier: NewsTabOpened<br>Event: The News tab was opened.<br>Exports: <br>Class: ET_NEWS_TAB_OPENED",
            "BattleNewsTabOpened": "Identifier: BattleNewsTabOpened<br>Event: The News tab was opened.<br>Exports: <br>Class: ET_BATTLE_NEWS_TAB_OPENED",
            "QuickListsOpened": "Identifier: QuickListsOpened<br>Event: Quick lists opened.<br>Exports: <br>Class: ET_QUICK_LISTS_OPENED",
            "EmbargoIsAvailable": "Identifier: EmbargoIsAvailable<br>Event: EmbargoIsAvailable.<br>Exports: <br>Class: ET_EMBARGO_IS_AVAILABLE",
            "RebelCharacterSelected": "Identifier: RebelCharacterSelected<br>Event: RebelCharacterSelected.<br>Exports: <br>Class: ET_FTH_REBEL_CHARACTER_SELECTED",
            "HighTaxesCauseDisorder": "Identifier: HighTaxesCauseDisorder<br>Event: HighTaxesCauseDisorder.<br>Exports: <br>Class: ET_FTH_HIGH_TAXES_CAUSE_DISORDER",
            "FailedToEndTurn": "Identifier: FailedToEndTurn<br>Event: FailedToEndTurn.<br>Exports: <br>Class: ET_FAILED_TO_END_TURN_TRIGGER",
        }
        self.conditions_dict = {
            "I_InBattle": "Identifier: I_InBattle<br>Trigger requirements: <br>Parameters: None<br>Sample use: InBattle<br>Description: Are we in battle?<br>Battle or Strat: Either<br>Class: IN_BATTLE<br>Implemented: Yes",
            "WonBattle": "Identifier: WonBattle<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: WonBattle<br>Description: Did the general win the battle just fought?<br>Battle or Strat: Either<br>Class: WON_BATTLE<br>Implemented: Yes",
            "I_WonBattle": "Identifier: I_WonBattle<br>Trigger requirements: <br>Parameters: None<br>Sample use: I_WonBattle romans_julii<br>Description: Did the faction win the battle just fought?<br>Battle or Strat: Either<br>Class: I_WON_BATTLE<br>Implemented: No",
            "Routs": "Identifier: Routs<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: Routs<br>Description: Did the general's unit rout in the battle just fought?<br>Battle or Strat: Either<br>Class: ROUTS<br>Implemented: Yes",
            "Ally_Routs": "Identifier: Ally_Routs<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: Ally_Routs<br>Description: Did any ally's general's units rout in the battle just fought?<br>Battle or Strat: Either<br>Class: ALLY_ROUTS<br>Implemented: Yes",
            "GeneralHPLostRatioinBattle": "Identifier: GeneralHPLostRatioinBattle<br>Trigger requirements: character_record<br>Parameters: logic token, test value<br>Sample use: GeneralHPLostRatioinBattle &gt; 35.8<br>Description: Test to see what the HP lost ratio of the prior battle was<br>Battle or Strat: Either<br>Class: GENERALS_LOST_HP_RATIO_TEST<br>Implemented: Yes",
            "GeneralNumKillsInBattle": "Identifier: GeneralNumKillsInBattle<br>Trigger requirements: character_record<br>Parameters: logic token, test value<br>Sample use: GeneralNumKillsInBattle &gt; 4<br>Description: Test to see how many kills the character scored in the prior battle was<br>Battle or Strat: Either<br>Class: GENERAL_ENEMIES_KILLED_TEST<br>Implemented: Yes",
            "GeneralFoughtInCombat": "Identifier: GeneralFoughtInCombat<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: GeneralFoughtInCombat<br>Description: Test to see if the character entered combat in the prior battle<br>Battle or Strat: Either<br>Class: GENERAL_FOUGHT_IN_COMBAT<br>Implemented: Yes",
            "PercentageOfArmyKilled": "Identifier: PercentageOfArmyKilled<br>Trigger requirements: character_record<br>Parameters: logic token, test value<br>Sample use: PercentageOfArmyKilled &gt; 35.8<br>Description: Test to see what percentage of their men they lost in the prior battle<br>Battle or Strat: Either<br>Class: PERCENTAGE_OF_ARMY_KILLED_TEST<br>Implemented: Yes",
            "I_PercentageOfArmyKilled": "Identifier: I_PercentageOfArmyKilled<br>Trigger requirements: <br>Parameters: alliance_index army_index logic_token percentage<br>Sample use: I_PercentageOfArmyKilled 1 0 &lt; 50<br>Description: Tests the percentage of casualties taken by the specified army during this battle<br>Battle or Strat: Battle<br>Class: BATTLE_PERCENTAGE_OF_ARMY_KILLED<br>Implemented: Yes",
            "PercentageEnemyKilled": "Identifier: PercentageEnemyKilled<br>Trigger requirements: character_record<br>Parameters: logic token, test value<br>Sample use: PercentageEnemyKilled &gt; 35.8<br>Description: Test to see what percentage of the enemy was killed in the prior battle<br>Battle or Strat: Either<br>Class: PERCENTAGE_OF_ENEMY_KILLED_TEST<br>Implemented: Yes",
            "PercentageBodyguardKilled": "Identifier: PercentageBodyguardKilled<br>Trigger requirements: character_record<br>Parameters: logic token, test value<br>Sample use: PercentageBodyguardKilled &gt; 35.8<br>Description: Test to see what percentage of their bodyguard was killed in the prior battle<br>Battle or Strat: Either<br>Class: PERCENTAGE_OF_GENERALS_UNIT_KILLED_TEST<br>Implemented: Yes",
            "PercentageRoutedOffField": "Identifier: PercentageRoutedOffField<br>Trigger requirements: character_record<br>Parameters: logic token, test value<br>Sample use: PercentageRoutedOffField &gt; 35.8<br>Description: Test to see the percentage of the character's soldiers who routed<br>Battle or Strat: Either<br>Class: PERCENTAGE_ROUTED_OFF_FIELD_TEST<br>Implemented: Yes",
            "NumKilledGenerals": "Identifier: NumKilledGenerals<br>Trigger requirements: character_record<br>Parameters: logic token, test value<br>Sample use: NumKilledGenerals &gt; 3<br>Description: Test to see how many generals were killed<br>Battle or Strat: Either<br>Class: GENERALS_ARMY_KILLED_GENERALS_TEST<br>Implemented: Yes",
            "PercentageUnitCategory": "Identifier: PercentageUnitCategory<br>Trigger requirements: character_record<br>Parameters: unit category (infantry, cavalry, siege, non_combatant, ship, handler), logic token, test value<br>Sample use: PercentageUnitCategory handler &gt; 35.8<br>Description: Test to see what percentage of the army were of a particular category<br>Battle or Strat: Either<br>Class: GENERALS_ARMY_PERCENTAGE_OF_UNIT_CATEGORY_TEST<br>Implemented: Yes",
            "NumFriendsInBattle": "Identifier: NumFriendsInBattle<br>Trigger requirements: character_record<br>Parameters: logic token, test value<br>Sample use: NumFriendsInBattle &lt; 50<br>Description: Test the number of soldiers and officers in allied armies<br>Battle or Strat: Either<br>Class: NUM_FRIENDS_IN_BATTLE_TEST<br>Implemented: Yes",
            "NumEnemiesInBattle": "Identifier: NumEnemiesInBattle<br>Trigger requirements: character_record<br>Parameters: logic token, test value<br>Sample use: NumEnemiesInBattle &gt; 300<br>Description: Test the number of soldiers and officers in enemy armies<br>Battle or Strat: Either<br>Class: NUM_ENEMIES_IN_BATTLE_TEST<br>Implemented: Yes",
            "GeneralFoughtFaction": "Identifier: GeneralFoughtFaction<br>Trigger requirements: character_record<br>Parameters: faction type<br>Sample use: GeneralFoughtFaction romans_julii<br>Description: Test to see whether the opponent was of a particular faction in the prior battle<br>Battle or Strat: Either<br>Class: FOUGHT_FACTION<br>Implemented: Yes",
            "GeneralFoughtCulture": "Identifier: GeneralFoughtCulture<br>Trigger requirements: character_record<br>Parameters: culture type (roman, barbarian, carthaginian, greek, egyptian, eastern)<br>Sample use: GeneralFoughtCulture greek<br>Description: Test to see whether the opponent was of a particular culture in the prior battle<br>Battle or Strat: Either<br>Class: FOUGHT_CULTURE<br>Implemented: Yes",
            "I_ConflictType": "Identifier: I_ConflictType<br>Trigger requirements: <br>Parameters: conflict type (SuccessfulAmbush, FailedAmbush, Normal, Siege, SallyBesieger, Naval, Withdraw)<br>Sample use: I_ConflictType SuccessfulAmbush<br>Description: Test the type of conflict (ambush, siege &c.)<br>Battle or Strat: Either<br>Class: BATTLE_CONFLICT_TYPE<br>Implemented: Yes",
            "IsNightBattle": "Identifier: IsNightBattle<br>Trigger requirements: <br>Parameters: None<br>Sample use: IsNightBattle<br>Description: Test if this is a night battle<br>Battle or Strat: Either<br>Class: IS_NIGHT_BATTLE<br>Implemented: Yes",
            "BattleSuccess": "Identifier: BattleSuccess<br>Trigger requirements: character_record<br>Parameters: success type (close, average, clear, crushing)<br>Sample use: BattleSuccess = clear, BattleSuccess &gt; close<br>Description: Test the type of success<br>Battle or Strat: Either<br>Class: BATTLE_SUCCESS_TYPE<br>Implemented: Yes",
            "BattleOdds": "Identifier: BattleOdds<br>Trigger requirements: character_record<br>Parameters: logic token, test value<br>Sample use: BattleOdds &gt; 5<br>Description: Test the odds to win i.e. 5 (5:1)<br>Battle or Strat: Either<br>Class: BATTLE_ODDS_TEST<br>Implemented: Yes",
            "WasAttacker": "Identifier: WasAttacker<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: WasAttacker<br>Description: Was the character the aggressor?<br>Battle or Strat: Either<br>Class: CHARACTER_WAS_ATTACKER<br>Implemented: Yes",
            "I_BattleAiAttacking": "Identifier: I_BattleAiAttacking<br>Trigger requirements: <br>Parameters: logic token<br>Sample use: I_BattleAiAttacking<br>Description: Is the enemy ai planning to attack the player?<br>Battle or Strat: Battle<br>Class: BATTLE_AI_ATTACKING<br>Implemented: Yes",
            "I_BattleAiAttackingSettlement": "Identifier: I_BattleAiAttackingSettlement<br>Trigger requirements: <br>Parameters: logic token<br>Sample use: I_BattleAiAttackingSettlement<br>Description: Is the enemy ai planning to attack the player's settlement?<br>Battle or Strat: Battle<br>Class: BATTLE_AI_ATTACKING_SETTLEMENT<br>Implemented: Yes",
            "I_BattleAiDefendingSettlement": "Identifier: I_BattleAiDefendingSettlement<br>Trigger requirements: <br>Parameters: logic token<br>Sample use: I_BattleAiDefendingSettlement<br>Description: Is the enemy ai planning to defend it's settlement?<br>Battle or Strat: Battle<br>Class: BATTLE_AI_DEFENDING_SETTLEMENT<br>Implemented: Yes",
            "I_BattleAiDefendingHill": "Identifier: I_BattleAiDefendingHill<br>Trigger requirements: <br>Parameters: logic token<br>Sample use: I_BattleAiDefendingHill<br>Description: Is the enemy ai planning to defend a hill?<br>Battle or Strat: Battle<br>Class: BATTLE_AI_DEFENDING_HILL<br>Implemented: Yes",
            "I_BattleAiDefendingCrossing": "Identifier: I_BattleAiDefendingCrossing<br>Trigger requirements: <br>Parameters: logic token<br>Sample use: I_BattleAiDefendingCrossing<br>Description: Is the enemy ai planning to defend a crossing?<br>Battle or Strat: Battle<br>Class: BATTLE_AI_DEFENDING_CROSSING<br>Implemented: Yes",
            "I_BattleAiScouting": "Identifier: I_BattleAiScouting<br>Trigger requirements: <br>Parameters: logic token<br>Sample use: I_BattleAiScouting<br>Description: Is the enemy ai planning to scout?<br>Battle or Strat: Battle<br>Class: BATTLE_AI_SCOUTING<br>Implemented: Yes",
            "I_BattleIsRiverBattle": "Identifier: I_BattleIsRiverBattle<br>Trigger requirements: <br>Parameters: integer<br>Sample use: I_BattleIsRiverBattle<br>Description: Is this a river battle?<br>Battle or Strat: Battle<br>Class: BATTLE_IS_RIVER_BATTLE<br>Implemented: Yes",
            "I_BattleIsSiegeBattle": "Identifier: I_BattleIsSiegeBattle<br>Trigger requirements: <br>Parameters: integer<br>Sample use: I_BattleIsSiegeBattle<br>Description: Is this a siege battle?<br>Battle or Strat: Battle<br>Class: BATTLE_IS_SIEGE_BATTLE<br>Implemented: Yes",
            "I_BattleIsSallyOutBattle": "Identifier: I_BattleIsSallyOutBattle<br>Trigger requirements: <br>Parameters: integer<br>Sample use: I_BattleIsSallyOutBattle<br>Description: Is this a sally out battle?<br>Battle or Strat: Battle<br>Class: BATTLE_IS_SALLY_OUT_BATTLE<br>Implemented: Yes",
            "I_BattleIsFortBattle": "Identifier: I_BattleIsFortBattle<br>Trigger requirements: <br>Parameters: integer<br>Sample use: I_BattleIsFortBattle<br>Description: Is this a fort battle?<br>Battle or Strat: Battle<br>Class: BATTLE_IS_FORT_BATTLE<br>Implemented: Yes",
            "I_BattleAttackerNumSiegeEngines": "Identifier: I_BattleAttackerNumSiegeEngines<br>Trigger requirements: <br>Parameters: siege_engine_class (tower, ram, ladder, sap_point)<br>Sample use: I_BattleAttackerNumSiegeEngines ladder<br>Description: How many of this engine type are present?<br>Battle or Strat: Battle<br>Class: BATTLE_ATTACKER_NUM_SIEGE_ENGINES<br>Implemented: Yes",
            "I_BattleAttackerNumArtilleryCanPenetrateWalls": "Identifier: I_BattleAttackerNumArtilleryCanPenetrateWalls<br>Trigger requirements: <br>Parameters: logic token, number<br>Sample use: I_BattleAttackerNumArtilleryCanPenetrateWalls &gt; 5<br>Description: How many of the attackers artillery can penetrate the siege walls<br>Battle or Strat: Battle<br>Class: BATTLE_ATTACKER_NUM_ARTILLERY_CAN_PENETRATE_WALLS<br>Implemented: Yes",
            "I_BattleDefenderNumNonMissileUnitsOnWalls": "Identifier: I_BattleDefenderNumNonMissileUnitsOnWalls<br>Trigger requirements: <br>Parameters: logic token, number<br>Sample use: I_BattleDefenderNumNonMissileUnitsOnWalls &gt; 5<br>Description: How many of the defenders non-missile units are on the walls<br>Battle or Strat: Battle<br>Class: BATTLE_DEFENDER_NUM_NON_MISSILE_UNITS_ON_WALLS<br>Implemented: Yes",
            "I_BattleDefenderNumMissileUnitsOnWalls": "Identifier: I_BattleDefenderNumMissileUnitsOnWalls<br>Trigger requirements: <br>Parameters: logic token, number<br>Sample use: I_BattleDefenderNumMissileUnitsOnWalls &gt; 5<br>Description: How many of the defenders missile units are on the walls<br>Battle or Strat: Battle<br>Class: BATTLE_DEFENDER_NUM_MISSILE_UNITS_ON_WALLS<br>Implemented: Yes",
            "I_BattleSettlementWallsBreached": "Identifier: I_BattleSettlementWallsBreached<br>Trigger requirements: <br>Parameters: none<br>Sample use: I_BattleSettlementWallsBreached<br>Description: Have the walls of the settlement been breached?<br>Battle or Strat: Battle<br>Class: BATTLE_SETTLEMENT_WALLS_BREACHED<br>Implemented: Yes",
            "I_BattleSettlementGateDestroyed": "Identifier: I_BattleSettlementGateDestroyed<br>Trigger requirements: <br>Parameters: none<br>Sample use: I_BattleSettlementGateDestroyed<br>Description: Has a gate in the settlement been destroyed?<br>Battle or Strat: Battle<br>Class: BATTLE_SETTLEMENT_GATE_DESTROYED<br>Implemented: Yes",
            "I_BattleSettlementTowerDefence": "Identifier: I_BattleSettlementTowerDefence<br>Trigger requirements: <br>Parameters: tower defence type (arrow_tower, ballista_tower, none)<br>Sample use: not I_BattleSettlementTowerDefence arrow_tower<br>Description: What type of tower defence is this settlement equipped with?<br>Battle or Strat: Battle<br>Class: BATTLE_SETTLEMENT_TOWER_DEFENCE<br>Implemented: Yes",
            "I_BattleSettlementGateDefence": "Identifier: I_BattleSettlementGateDefence<br>Trigger requirements: <br>Parameters: gate defence type (hot_sand, burning_oil, none)<br>Sample use: not I_BattleSettlementGateDefence hot_sand<br>Description: What type of gate defence is this settlement equipped with?<br>Battle or Strat: Battle<br>Class: BATTLE_SETTLEMENT_GATE_DEFENCE<br>Implemented: Yes",
            "I_BattleSettlementFortificationLevel": "Identifier: I_BattleSettlementFortificationLevel<br>Trigger requirements: <br>Parameters: wall level (none, 0, 1, 2, 3, 4)<br>Sample use: I_BattleSettlementFortificationLevel &gt; 0<br>Description: What is the fortification level of this settlement?<br>Battle or Strat: Battle<br>Class: BATTLE_SETTLEMENT_FORTIFICATION_LEVEL<br>Implemented: Yes",
            "BattleBuildingType": "Identifier: BattleBuildingType<br>Trigger requirements: <br>Parameters: building type (ambient, major, wall, tower, gate)<br>Sample use: BattleBuildingType = wall<br>Description: What type of building is this?<br>Battle or Strat: Battle<br>Class: BATTLE_BUILDING_TYPE<br>Implemented: Yes",
            "I_BattleSettlementGateStrength": "Identifier: I_BattleSettlementGateStrength<br>Trigger requirements: <br>Parameters: gate strength (0..2)<br>Sample use: I_BattleSettlementGateStrength &gt; 2<br>Description: What is the strength of the settlement gates?<br>Battle or Strat: Battle<br>Class: BATTLE_SETTLEMENT_GATE_STRENGTH<br>Implemented: Yes",
            "I_BattleNumberOfRiverCrossings": "Identifier: I_BattleNumberOfRiverCrossings<br>Trigger requirements: <br>Parameters: integer<br>Sample use: I_BattleNumberOfRiverCrossings &gt; 1<br>Description: How many river crossings are there on this map?<br>Battle or Strat: Battle<br>Class: BATTLE_NUMBER_OF_RIVER_CROSSINGS<br>Implemented: Yes",
            "BattlePlayerUnitClass": "Identifier: BattlePlayerUnitClass<br>Trigger requirements: player_unit<br>Parameters: unit_class (heavy, light, skirmish, spearmen, missile)<br>Sample use: BattlePlayerUnitClass = unit_class<br>Description: What is the class of the player unit?<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_UNIT_CLASS<br>Implemented: Yes",
            "BattleEnemyUnitClass": "Identifier: BattleEnemyUnitClass<br>Trigger requirements: enemy_unit<br>Parameters: unit_class (heavy, light, skirmish, spearmen, missile)<br>Sample use: BattleEnemyUnitClass = unit_class<br>Description: What is the class of the enemy unit?<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_UNIT_CLASS<br>Implemented: Yes",
            "BattlePlayerUnitCategory": "Identifier: BattlePlayerUnitCategory<br>Trigger requirements: player_unit<br>Parameters: unit category (infantry, cavalry, siege, non_combatant, ship, handler)<br>Sample use: BattlePlayerUnitCategory = unit_category<br>Description: What is the category of the player unit?<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_UNIT_CATEGORY<br>Implemented: Yes",
            "BattleEnemyUnitCategory": "Identifier: BattleEnemyUnitCategory<br>Trigger requirements: enemy_unit<br>Parameters: unit category (infantry, cavalry, siege, non_combatant, ship, handler)<br>Sample use: BattleEnemyUnitCategory = unit_category<br>Description: What is the category of the enemy unit?<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_UNIT_CATEGORY<br>Implemented: Yes",
            "BattlePlayerUnitSiegeEngineClass": "Identifier: BattlePlayerUnitSiegeEngineClass<br>Trigger requirements: player_unit<br>Parameters: siege engine category (catapult, trebuchet, ballista, scorpion, tower, ram, ladder, sap_point)<br>Sample use: BattlePlayerUnitSiegeEngineClass = scorpion<br>Description: What type of siege engine is the player unit?<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_UNIT_SIEGE_ENGINE_CLASS<br>Implemented: Yes",
            "BattleEnemyUnitSiegeEngineClass": "Identifier: BattleEnemyUnitSiegeEngineClass<br>Trigger requirements: enemy_unit<br>Parameters: siege engine category (catapult, trebuchet, ballista, scorpion, tower, ram, ladder, sap_point)<br>Sample use: BattleEnemyUnitSiegeEngineClass = scorpion<br>Description: What type of siege engine is the enemy unit?<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_UNIT_SIEGE_ENGINE_CLASS<br>Implemented: Yes",
            "BattlePlayerUnitOnWalls": "Identifier: BattlePlayerUnitOnWalls<br>Trigger requirements: player_unit<br>Parameters: none<br>Sample use: BattlePlayerUnitOnWalls<br>Description: Is the player unit on the walls?<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_UNIT_ON_WALLS<br>Implemented: Yes",
            "BattleEnemyUnitOnWalls": "Identifier: BattleEnemyUnitOnWalls<br>Trigger requirements: enemy_unit<br>Parameters: none<br>Sample use: BattleEnemyUnitOnWalls<br>Description: Is the enemy unit on the walls?<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_UNIT_ON_WALLS<br>Implemented: Yes",
            "BattlePlayerCurrentFormation": "Identifier: BattlePlayerCurrentFormation<br>Trigger requirements: player_unit<br>Parameters: formation (horde, column, square, wedge, square_hollow, testudo, phalanx)<br>Sample use: BattlePlayerCurrentFormation = phalanx<br>Description: What is the current formation of the player unit?<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_CURRENT_FORMATION<br>Implemented: Yes",
            "BattleEnemyCurrentFormation": "Identifier: BattleEnemyCurrentFormation<br>Trigger requirements: enemy_unit<br>Parameters: formation (horde, column, square, wedge, square_hollow, testudo, phalanx)<br>Sample use: BattleEnemyCurrentFormation = unit_formation<br>Description: What is the current formation of the enemy unit?<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_CURRENT_FORMATION<br>Implemented: Yes",
            "BattlePlayerUnitCloseFormation": "Identifier: BattlePlayerUnitCloseFormation<br>Trigger requirements: player_unit<br>Parameters: none<br>Sample use: BattlePlayerUnitCloseFormation<br>Description: Is the player unit in close formation, otherwise loose?<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_UNIT_CLOSE_FORMATION<br>Implemented: Yes",
            "BattleEnemyUnitCloseFormation": "Identifier: BattleEnemyUnitCloseFormation<br>Trigger requirements: enemy_unit<br>Parameters: none<br>Sample use: BattleEnemyUnitCloseFormation<br>Description: Is the enemy unit in close formation, otherwise loose?<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_UNIT_CLOSE_FORMATION<br>Implemented: Yes",
            "BattlePlayerUnitSpecialAbilitySupported": "Identifier: BattlePlayerUnitSpecialAbilitySupported<br>Trigger requirements: player_unit<br>Parameters: special_ability ( testudo, phalanx, wedge, drop_engines, flaming_ammo, warcry, chant, curse, beserk, rally, kill_elephants, move_and_shoot, cantabrian_circle, shield_wall, stealth, feigned_rout, schiltrom )<br>Sample use: BattlePlayerUnitSpecialAbilitySupported = flaming_ammo<br>Description: What special ability can the player unit support?<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_UNIT_SPECIAL_ABILITY_SUPPORTED<br>Implemented: Yes",
            "BattleSelectedPlayerUnitSpecialAbilitySupported": "Identifier: BattleSelectedPlayerUnitSpecialAbilitySupported<br>Trigger requirements: <br>Parameters: special_ability ( testudo, phalanx, wedge, drop_engines, flaming_ammo, warcry, chant, curse, beserk, rally, kill_elephants, move_and_shoot, cantabrian_circle, shield_wall, stealth, feigned_rout, schiltrom )<br>Sample use: BattleSelectedPlayerUnitSpecialAbilitySupported = flaming_ammo<br>Description: What special ability can the selected units support?<br>Battle or Strat: Battle<br>Class: BATTLE_SELECTED_PLAYER_UNIT_SPECIAL_ABILITY_SUPPORTED<br>Implemented: Yes",
            "BattleEnemyUnitSpecialAbilitySupported": "Identifier: BattleEnemyUnitSpecialAbilitySupported<br>Trigger requirements: enemy_unit<br>Parameters: special_ability ( testudo, phalanx, wedge, drop_engines, flaming_ammo, warcry, chant, curse, beserk, rally, kill_elephants, move_and_shoot, cantabrian_circle, shield_wall, stealth, feigned_rout, schiltrom )<br>Sample use: BattleEnemyUnitSpecialAbilitySupported = flaming_ammo<br>Description: What special ability can the enemy unit support?<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_UNIT_SPECIAL_ABILITY_SUPPORTED<br>Implemented: Yes",
            "BattlePlayerUnitSpecialAbilityActive": "Identifier: BattlePlayerUnitSpecialAbilityActive<br>Trigger requirements: player_unit<br>Parameters: none<br>Sample use: BattlePlayerUnitSpecialAbilityActive<br>Description: Is the player unit currently doing its special ability<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_UNIT_SPECIAL_ABILITY_ACTIVE<br>Implemented: Yes",
            "BattleEnemyUnitSpecialAbilityActive": "Identifier: BattleEnemyUnitSpecialAbilityActive<br>Trigger requirements: enemy_unit<br>Parameters: none<br>Sample use: BattleEnemyUnitSpecialAbilityActive<br>Description: Is the enemy unit currently doing its special ability<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_UNIT_SPECIAL_ABILITY_ACTIVE<br>Implemented: Yes",
            "BattlePlayerMountClass": "Identifier: BattlePlayerMountClass<br>Trigger requirements: player_unit<br>Parameters: mount_class (horse, camel, elephant, chariot)<br>Sample use: BattlePlayerMountClass = mount_class<br>Description: What is the mount class of the player unit?<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_MOUNT_CLASS<br>Implemented: Yes",
            "BattleEnemyMountClass": "Identifier: BattleEnemyMountClass<br>Trigger requirements: enemy_unit<br>Parameters: mount_class (horse, camel, elephant, chariot)<br>Sample use: BattleEnemyMountClass = mount_class<br>Description: What is the mount class of the enemy unit?<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_MOUNT_CLASS<br>Implemented: Yes",
            "BattlePlayerUnitMeleeStrength": "Identifier: BattlePlayerUnitMeleeStrength<br>Trigger requirements: player_unit<br>Parameters: logic token, test value<br>Sample use: BattlePlayerUnitMeleeStrength &gt; 56.45<br>Description: Compare the melee strength of a unit with a known value<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_UNIT_MELEE_STRENGTH<br>Implemented: Yes",
            "BattleEnemyUnitMeleeStrength": "Identifier: BattleEnemyUnitMeleeStrength<br>Trigger requirements: enemy_unit<br>Parameters: logic token, test value<br>Sample use: BattleEnemyUnitMeleeStrength &gt; 56.45<br>Description: Compare the melee strength of a unit with a known value<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_UNIT_MELEE_STRENGTH<br>Implemented: Yes",
            "BattlePlayerUnitMissileStrength": "Identifier: BattlePlayerUnitMissileStrength<br>Trigger requirements: player_unit<br>Parameters: logic token, test value<br>Sample use: BattlePlayerUnitMissileStrength &gt; 56.45<br>Description: Compare the missile strength of a unit with a known value<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_UNIT_MISSILE_STRENGTH<br>Implemented: Yes",
            "BattleEnemyUnitMissileStrength": "Identifier: BattleEnemyUnitMissileStrength<br>Trigger requirements: enemy_unit<br>Parameters: logic token, test value<br>Sample use: BattleEnemyUnitMissileStrength &gt; 56.45<br>Description: Compare the missile strength of a unit with a known value<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_UNIT_MISSILE_STRENGTH<br>Implemented: Yes",
            "BattlePlayerUnitSpecialFormation": "Identifier: BattlePlayerUnitSpecialFormation<br>Trigger requirements: player_unit<br>Parameters: formation (horde, column, square, wedge, square_hollow, testudo, phalanx), test value<br>Sample use: BattlePlayerUnitSpecialFormation = testudo<br>Description: What is the special formation of the player unit<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_UNIT_SPECIAL_FORMATION<br>Implemented: Yes",
            "BattleEnemyUnitSpecialFormation": "Identifier: BattleEnemyUnitSpecialFormation<br>Trigger requirements: enemy_unit<br>Parameters: formation (horde, column, square, wedge, square_hollow, testudo, phalanx), test value<br>Sample use: BattleEnemyUnitSpecialFormation = testudo<br>Description: What is the special formation of the enemy unit<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_UNIT_SPECIAL_FORMATION<br>Implemented: Yes",
            "BattlePlayerUnitEngaged": "Identifier: BattlePlayerUnitEngaged<br>Trigger requirements: player_unit<br>Parameters: None<br>Sample use: BattlePlayerUnitEngaged<br>Description: Is the player unit engaged in battle<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_UNIT_ENGAGED<br>Implemented: Yes",
            "BattleEnemyUnitEngaged": "Identifier: BattleEnemyUnitEngaged<br>Trigger requirements: enemy_unit<br>Parameters: None<br>Sample use: BattleEnemyUnitEngaged<br>Description: Is the enemy unit engaged in battle<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_UNIT_ENGAGED<br>Implemented: Yes",
            "BattlePlayerActionStatus": "Identifier: BattlePlayerActionStatus<br>Trigger requirements: player_unit<br>Parameters: Action status ( idling, hiding, ready, reforming, moving, withdrawing, missiles_firing, missiles_reloading, charging, fighting, pursuing, routing, fighting_backs_to_the_walls, running_amok, rallying, dead, leaving_battle, entering_battle, left_battle )<br>Sample use: BattlePlayerActionStatus = moving<br>Description: What is the current action status of the player unit<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ACTION_STATUS<br>Implemented: Yes",
            "BattleEnemyActionStatus": "Identifier: BattleEnemyActionStatus<br>Trigger requirements: enemy_unit<br>Parameters: Action status ( idling, hiding, ready, reforming, moving, withdrawing, missiles_firing, missiles_reloading, charging, fighting, pursuing, routing, fighting_backs_to_the_walls, running_amok, rallying, dead, leaving_battle, entering_battle, left_battle )<br>Sample use: BattleEnemyActionStatus = moving<br>Description: What is the current action status of the player unit<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_ACTION_STATUS<br>Implemented: Yes",
            "BattlePlayerUnitMovingFast": "Identifier: BattlePlayerUnitMovingFast<br>Trigger requirements: player_unit<br>Parameters: None<br>Sample use: BattlePlayerUnitMovingFast<br>Description: Is the player unit moving fast<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_UNIT_MOVING_FAST<br>Implemented: Yes",
            "BattleEnemyUnitMovingFast": "Identifier: BattleEnemyUnitMovingFast<br>Trigger requirements: enemy_unit<br>Parameters: None<br>Sample use: BattleEnemyUnitMovingFast<br>Description: Is the enemy unit moving fast<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_UNIT_MOVING_FAST<br>Implemented: Yes",
            "BattleRangeOfAttack": "Identifier: BattleRangeOfAttack<br>Trigger requirements: player_unit, enemy_unit<br>Parameters: logic token, test value<br>Sample use: BattleRangeOfAttack &gt; 56.45<br>Description: Test the range of the attack (in m)<br>Battle or Strat: Battle<br>Class: BATTLE_RANGE_OF_ATTACK<br>Implemented: Yes",
            "BattleDirectionOfAttack": "Identifier: BattleDirectionOfAttack<br>Trigger requirements: infer_attacking_unit, infer_defending_unit<br>Parameters: logic token, attack_dir (front, flank, rear)<br>Sample use: BattleDirectionOfAttack = front<br>Description: Test direction of the attack<br>Battle or Strat: Battle<br>Class: BATTLE_DIRECTION_OF_ATTACK<br>Implemented: Yes",
            "BattleIsMeleeAttack": "Identifier: BattleIsMeleeAttack<br>Trigger requirements: infer_attacking_unit<br>Parameters: None<br>Sample use: BattleIsMeleeAttack<br>Description: Is the attacker initiating a melee attack (otherwise missile attack)<br>Battle or Strat: Battle<br>Class: BATTLE_IS_MELEE_ATTACK<br>Implemented: Yes",
            "I_BattlePlayerArmyPercentageOfUnitClass": "Identifier: I_BattlePlayerArmyPercentageOfUnitClass<br>Trigger requirements: <br>Parameters: logic token, unit_class (heavy, light, skirmish, spearmen, missile), percentage<br>Sample use: I_BattlePlayerArmyPercentageOfUnitClass missile &gt; 50.0<br>Description: Test makeup of army by unit class<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ARMY_PERCENTAGE_OF_UNIT_CLASS<br>Implemented: Yes",
            "I_BattleEnemyArmyPercentageOfUnitClass": "Identifier: I_BattleEnemyArmyPercentageOfUnitClass<br>Trigger requirements: <br>Parameters: logic token, unit_class (heavy, light, skirmish, spearmen, missile), percentage<br>Sample use: I_BattleEnemyArmyPercentageOfUnitClass missile &gt; 50.0<br>Description: Test makeup of army by unit class<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_ARMY_PERCENTAGE_OF_UNIT_CLASS<br>Implemented: Yes",
            "I_BattlePlayerArmyPercentageOfUnitCategory": "Identifier: I_BattlePlayerArmyPercentageOfUnitCategory<br>Trigger requirements: <br>Parameters: logic token, unit category (infantry, cavalry, siege, non_combatant, ship, handler), percentage<br>Sample use: I_BattlePlayerArmyPercentageOfUnitCategory missile &gt; 50.0<br>Description: Test makeup of army by unit category<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ARMY_PERCENTAGE_OF_UNIT_CATEGORY<br>Implemented: Yes",
            "I_BattleEnemyArmyPercentageOfUnitCategory": "Identifier: I_BattleEnemyArmyPercentageOfUnitCategory<br>Trigger requirements: <br>Parameters: logic token, unit category (infantry, cavalry, siege, non_combatant, ship, handler), percentage<br>Sample use: I_BattleEnemyArmyPercentageOfUnitCategory missile &gt; 50.0<br>Description: Test makeup of army by unit category<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_ARMY_PERCENTAGE_OF_UNIT_CATEGORY<br>Implemented: Yes",
            "I_BattlePlayerArmyPercentageOfMountClass": "Identifier: I_BattlePlayerArmyPercentageOfMountClass<br>Trigger requirements: <br>Parameters: logic token, mount_class (horse, camel, elephant, chariot), percentage<br>Sample use: I_BattlePlayerArmyPercentageOfMountClass camel &gt; 50.0<br>Description: Test makeup of army by mount class<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ARMY_PERCENTAGE_OF_MOUNT_CLASS<br>Implemented: Yes",
            "I_BattleEnemyArmyPercentageOfMountClass": "Identifier: I_BattleEnemyArmyPercentageOfMountClass<br>Trigger requirements: <br>Parameters: logic token, mount_class (horse, camel, elephant, chariot), percentage<br>Sample use: I_BattleEnemyArmyPercentageOfMountClass camel &gt; 50.0<br>Description: Test makeup of army by mount class<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_ARMY_PERCENTAGE_OF_MOUNT_CLASS<br>Implemented: Yes",
            "I_BattlePlayerArmyPercentageOfClassAndCategory": "Identifier: I_BattlePlayerArmyPercentageOfClassAndCategory<br>Trigger requirements: <br>Parameters: logic token, unit_class (heavy, light, skirmish, spearmen, missile), unit_category (infantry, cavalry, siege, non_combatant, ship, handler), percentage<br>Sample use: I_BattlePlayerArmyPercentageOfClassAndCategory missile cavalry &gt; 50.0<br>Description: Test makeup of army by mount class<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ARMY_PERCENTAGE_OF_CLASS_AND_CATEGORY<br>Implemented: Yes",
            "I_BattleEnemyArmyPercentageOfClassAndCategory": "Identifier: I_BattleEnemyArmyPercentageOfClassAndCategory<br>Trigger requirements: <br>Parameters: logic token, unit_class (heavy, light, skirmish, spearmen, missile), unit_category (infantry, cavalry, siege, non_combatant, ship, handler), percentage<br>Sample use: I_BattleEnemyArmyPercentageOfClassAndCategory missile cavalry &gt; 50.0<br>Description: Test makeup of army by mount class<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_ARMY_PERCENTAGE_OF_CLASS_AND_CATEGORY<br>Implemented: Yes",
            "I_BattlePlayerArmyPercentageOfSpecialAbility": "Identifier: I_BattlePlayerArmyPercentageOfSpecialAbility<br>Trigger requirements: <br>Parameters: special_ability ( testudo, phalanx, wedge, drop_engines, flaming_ammo, warcry, chant, curse, beserk, rally, kill_elephants, move_and_shoot, cantabrian_circle, shield_wall, stealth, feigned_rout, schiltrom ), percentage<br>Sample use: I_BattlePlayerArmyPercentageOfSpecialAbility testudo &gt; 50.0<br>Description: Test makeup of army by special ability<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ARMY_PERCENTAGE_OF_SPECIAL_ABILITY<br>Implemented: Yes",
            "I_BattleEnemyArmyPercentageOfSpecialAbility": "Identifier: I_BattleEnemyArmyPercentageOfSpecialAbility<br>Trigger requirements: <br>Parameters: special_ability ( testudo, phalanx, wedge, drop_engines, flaming_ammo, warcry, chant, curse, beserk, rally, kill_elephants, move_and_shoot, cantabrian_circle, shield_wall, stealth, feigned_rout, schiltrom ), percentage<br>Sample use: I_BattleEnemyArmyPercentageOfSpecialAbility testudo &gt; 50.0<br>Description: Test makeup of army by special ability<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_ARMY_PERCENTAGE_OF_SPECIAL_ABILITY<br>Implemented: Yes",
            "I_BattlePlayerArmyPercentageCanHide": "Identifier: I_BattlePlayerArmyPercentageCanHide<br>Trigger requirements: <br>Parameters: logic token, hide_type (hide_forest, hide_improved_forest, hide_long_grass, hide_anywhere), percentage<br>Sample use: I_BattlePlayerArmyPercentageCanHide hide_forest &gt; 50.0<br>Description: Test makeup of army by hide capability<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ARMY_PERCENTAGE_CAN_HIDE<br>Implemented: Yes",
            "I_BattleEnemyArmyPercentageCanHide": "Identifier: I_BattleEnemyArmyPercentageCanHide<br>Trigger requirements: <br>Parameters: logic token, hide_type (hide_forest, hide_improved_forest, hide_long_grass, hide_anywhere), percentage<br>Sample use: I_BattleEnemyArmyPercentageCanHide hide_forest &gt; 50.0<br>Description: Test makeup of army by hide capability<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_ARMY_PERCENTAGE_CAN_HIDE<br>Implemented: Yes",
            "I_BattlePlayerArmyPercentageCanSwim": "Identifier: I_BattlePlayerArmyPercentageCanSwim<br>Trigger requirements: <br>Parameters: logic token, percentage<br>Sample use: I_BattlePlayerArmyPercentageCanSwim &gt; 50.0<br>Description: Test makeup of army by swim capability<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ARMY_PERCENTAGE_CAN_SWIM<br>Implemented: Yes",
            "I_BattleEnemyArmyPercentageCanSwim": "Identifier: I_BattleEnemyArmyPercentageCanSwim<br>Trigger requirements: <br>Parameters: logic token, percentage<br>Sample use: I_BattleEnemyArmyPercentageCanSwim &gt; 50.0<br>Description: Test makeup of army by swim capability<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_ARMY_PERCENTAGE_CAN_SWIM<br>Implemented: Yes",
            "I_BattlePlayerArmyIsAttacker": "Identifier: I_BattlePlayerArmyIsAttacker<br>Trigger requirements: <br>Parameters: logic token<br>Sample use: I_BattlePlayerArmyIsAttacker<br>Description: Is the player attacking<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ARMY_IS_ATTACKER<br>Implemented: Yes",
            "I_BattlePlayerAllianceOddsInFavour": "Identifier: I_BattlePlayerAllianceOddsInFavour<br>Trigger requirements: <br>Parameters: logic token<br>Sample use: I_BattlePlayerAllianceOddsInFavour &gt; 5<br>Description: Odds in favour of the player i.e. 5 (5:1)<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ALLIANCE_ODDS_IN_FAVOUR<br>Implemented: Yes",
            "I_BattlePlayerAllianceOddsAgainst": "Identifier: I_BattlePlayerAllianceOddsAgainst<br>Trigger requirements: <br>Parameters: logic token<br>Sample use: I_BattlePlayerAllianceOddsAgainst &gt; 5<br>Description: Odds against the player i.e. 5 (5:1)<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ALLIANCE_ODDS_AGAINST<br>Implemented: Yes",
            "TotalSiegeWeapons": "Identifier: TotalSiegeWeapons<br>Trigger requirements: character_record<br>Parameters: logic token, number<br>Sample use: TotalSiegeWeapons = 0<br>Description: Test to see how many siege weapons this characters army has got for an assault.<br>Battle or Strat: Strat<br>Class: TOTAL_NUMBER_OF_SIEGE_WEAPONS<br>Implemented: Yes",
            "I_BattleStarted": "Identifier: I_BattleStarted<br>Trigger requirements: <br>Parameters: None<br>Sample use: I_BattleStarted<br>Description: Has the battle deployment phase ended<br>Battle or Strat: Battle<br>Class: HAS_BATTLE_STARTED<br>Implemented: Yes",
            "I_BattleFinished": "Identifier: I_BattleFinished<br>Trigger requirements: <br>Parameters: None<br>Sample use: I_BattleFinished<br>Description: Has the battle 'finished' phase started<br>Battle or Strat: Either<br>Class: IS_BATTLE_FINISHED<br>Implemented: Yes",
            "I_BattleEnd": "Identifier: I_BattleEnd<br>Trigger requirements: <br>Parameters: None<br>Sample use: I_BattleEnd<br>Description: Has the battle entered one of the end phases (ending or finish countdown, not end pending, see IBattleEndPending for that)<br>Battle or Strat: Battle<br>Class: IS_BATTLE_END<br>Implemented: Yes",
            "I_BattleEndPending": "Identifier: I_BattleEndPending<br>Trigger requirements: <br>Parameters: None<br>Sample use: I_BattleEndPending<br>Description: Has the battle entered the end pending phase (ie dialog to the human player for whether they want to mop up the leftovers)<br>Battle or Strat: Battle<br>Class: IS_BATTLE_END_PENDING<br>Implemented: Yes",
            "I_IsUnitMoveFastSet": "Identifier: I_IsUnitMoveFastSet<br>Trigger requirements: <br>Parameters: unit_label<br>Sample use: I_IsUnitMoveFastSet roman_archers<br>Description: Is the specified unit flagged to move fast<br>Battle or Strat: Battle<br>Class: IS_UNIT_MOVE_FAST_SET<br>Implemented: Yes",
            "I_IsUnitMoving": "Identifier: I_IsUnitMoving<br>Trigger requirements: <br>Parameters: unit_label<br>Sample use: I_IsUnitMoving roman_archers<br>Description: Is the specified unit moving<br>Battle or Strat: Battle<br>Class: IS_UNIT_MOVING<br>Implemented: Yes",
            "I_IsUnitIdle": "Identifier: I_IsUnitIdle<br>Trigger requirements: <br>Parameters: unit_label<br>Sample use: I_IsUnitIdle roman_archers<br>Description: Is the specified unit idle?<br>Battle or Strat: Battle<br>Class: IS_UNIT_IDLE<br>Implemented: Yes",
            "I_IsUnitRouting": "Identifier: I_IsUnitRouting<br>Trigger requirements: <br>Parameters: unit_label<br>Sample use: I_IsUnitRouting roman_archers<br>Description: Is the specified unit routing?<br>Battle or Strat: Battle<br>Class: IS_UNIT_ROUTING<br>Implemented: Yes",
            "I_IsUnitUnderFire": "Identifier: I_IsUnitUnderFire<br>Trigger requirements: <br>Parameters: unit_label<br>Sample use: I_IsUnitUnderFire roman_general_unit<br>Description: Is the specified unit recieving missile fire?<br>Battle or Strat: Battle<br>Class: IS_UNIT_UNDER_FIRE<br>Implemented: Yes",
            "I_IsUnitEngaged": "Identifier: I_IsUnitEngaged<br>Trigger requirements: <br>Parameters: unit_label<br>Sample use: I_IsUnitEngaged roman_archers<br>Description: Is the specified unit engaged in combat?<br>Battle or Strat: Battle<br>Class: IS_UNIT_ENGAGED<br>Implemented: Yes",
            "I_IsUnitEngagedWithUnit": "Identifier: I_IsUnitEngagedWithUnit<br>Trigger requirements: <br>Parameters: unit_label other_unit_label<br>Sample use: I_IsUnitEngagedWithUnit roman_archers barb_cavalry<br>Description: Tests if one specified unit is engaged in combat with the other specified unit?<br>Battle or Strat: Battle<br>Class: IS_UNIT_ENGAGED_WITH_UNIT<br>Implemented: Yes",
            "I_UnitFormation": "Identifier: I_UnitFormation<br>Trigger requirements: <br>Parameters: unit_label logic_token formation_type<br>Sample use: I_UnitFormation hoplites4 = phalanx<br>Description: Is the specified unit in the specified formation<br>Battle or Strat: Battle<br>Class: UNIT_FORMATION<br>Implemented: No",
            "I_PercentageUnitKilled": "Identifier: I_PercentageUnitKilled<br>Trigger requirements: <br>Parameters: unit_label logic_token percentage<br>Sample use: I_PercentageUnitKilled roman_archers &gt; 50<br>Description: Tests the percentage of men lost from the specified unit<br>Battle or Strat: Battle<br>Class: PERCENTAGE_UNIT_KILLED<br>Implemented: Yes",
            "I_UnitPercentageAmmoLeft": "Identifier: I_UnitPercentageAmmoLeft<br>Trigger requirements: <br>Parameters: unit_label logic_token percentage<br>Sample use: I_UnitPercentageAmmoLeft roman_archers &gt; 75<br>Description: Tests the percentage of ammo the unit has remaining<br>Battle or Strat: Battle<br>Class: UNIT_PERCENTAGE_AMMO_LEFT<br>Implemented: Yes",
            "I_UnitDistanceFromPosition": "Identifier: I_UnitDistanceFromPosition<br>Trigger requirements: <br>Parameters: unit_label pos_x pos_y logic_token distance<br>Sample use: I_UnitDistanceFromPosition roman_archers 100 -60 &lt; 20<br>Description: Tests the specified unit's range from the given position<br>Battle or Strat: Battle<br>Class: UNIT_DISTANCE_FROM_POSITION<br>Implemented: Yes",
            "I_UnitDistanceFromLine": "Identifier: I_UnitDistanceFromLine<br>Trigger requirements: <br>Parameters: unit_label location_1 location_2 logic_token distance<br>Sample use: I_UnitDistanceFromLine roman_archers river_line_A river_line_B &lt; 20<br>Description: Tests the specified unit's distance from the line (looking from A to B, a unit to the left of the line will give a negative distance, one on the right will be positive)<br>Battle or Strat: Battle<br>Class: UNIT_DISTANCE_FROM_LINE<br>Implemented: Yes",
            "I_UnitDistanceFromUnit": "Identifier: I_UnitDistanceFromUnit<br>Trigger requirements: <br>Parameters: unit_label1 unit_label2 logic_token distance<br>Sample use: I_UnitDistanceFromUnit roman_archers gaul_warband &lt; 100<br>Description: Tests the 2 specified units' distance from each other<br>Battle or Strat: Battle<br>Class: UNIT_DISTANCE_FROM_UNIT<br>Implemented: Yes",
            "I_UnitInRangeOfUnit": "Identifier: I_UnitInRangeOfUnit<br>Trigger requirements: <br>Parameters: attacker_unit_label target_unit_label<br>Sample use: I_UnitInRangeOfUnit roman_archers gaul_warband<br>Description: Tests if the attacker can hit the target with missile weapons<br>Battle or Strat: Battle<br>Class: UNIT_IN_RANGE_OF_UNIT<br>Implemented: Yes",
            "I_UnitDestroyed": "Identifier: I_UnitDestroyed<br>Trigger requirements: <br>Parameters: unit_label<br>Sample use: I_UnitDestroyed roman_archers<br>Description: Has the specified unit been wiped out?<br>Battle or Strat: Battle<br>Class: UNIT_DESTROYED<br>Implemented: Yes",
            "I_UnitEnemyUnitInRadius": "Identifier: I_UnitEnemyUnitInRadius<br>Trigger requirements: <br>Parameters: unit_label radius<br>Sample use: I_UnitEnemyUnitInRadius roman_archers 100<br>Description: Tests if there is any enemy within the specified radius of the unit<br>Battle or Strat: Battle<br>Class: UNIT_ENEMY_UNIT_IN_RADIUS<br>Implemented: Yes",
            "I_IsUnitGroupMoving": "Identifier: I_IsUnitGroupMoving<br>Trigger requirements: <br>Parameters: group_label<br>Sample use: I_IsUnitGroupMoving group1<br>Description: Is any unit in the group moving?<br>Battle or Strat: Battle<br>Class: IS_UNIT_GROUP_MOVING<br>Implemented: Yes",
            "I_IsUnitGroupEngaged": "Identifier: I_IsUnitGroupEngaged<br>Trigger requirements: <br>Parameters: group_label<br>Sample use: I_IsUnitGroupEngaged group1<br>Description: Is any unit in the group engaged in combat?<br>Battle or Strat: Battle<br>Class: IS_UNIT_GROUP_ENGAGED<br>Implemented: Yes",
            "I_IsUnitGroupIdle": "Identifier: I_IsUnitGroupIdle<br>Trigger requirements: <br>Parameters: group_label<br>Sample use: I_IsUnitGroupIdle group1<br>Description: Are all units in the group idle?<br>Battle or Strat: Battle<br>Class: IS_UNIT_GROUP_IDLE<br>Implemented: Yes",
            "I_IsUnitGroupDestroyed": "Identifier: I_IsUnitGroupDestroyed<br>Trigger requirements: <br>Parameters: group_label<br>Sample use: I_IsUnitGroupDestroyed group1<br>Description: Is the unit group destroyed (killed or routed)<br>Battle or Strat: Battle<br>Class: IS_UNIT_GROUP_DESTROYED<br>Implemented: Yes",
            "I_PercentageUnitGroupKilled": "Identifier: I_PercentageUnitGroupKilled<br>Trigger requirements: <br>Parameters: group_label logic_token percentage<br>Sample use: I_PercentageUnitGroupKilled roman_archers &lt; 50<br>Description: Tests the percentage of men lost from the unit group<br>Battle or Strat: Battle<br>Class: PERCENTAGE_UNIT_GROUP_KILLED<br>Implemented: Yes",
            "I_UnitGroupFormation": "Identifier: I_UnitGroupFormation<br>Trigger requirements: <br>Parameters: group_label logic_token formation_name<br>Sample use: I_UnitGroupFormation roman_archers = ordered_triple_line_1<br>Description: Tests the unit group's group formation<br>Battle or Strat: Battle<br>Class: UNIT_GROUP_FORMATION<br>Implemented: Yes",
            "I_UnitGroupDistanceFromPosition": "Identifier: I_UnitGroupDistanceFromPosition<br>Trigger requirements: <br>Parameters: group_label position logic_token distance<br>Sample use: I_UnitGroupDistanceFromPosition roman_archers -20 -415 &lt; 100<br>Description: Tests the unit_group's centre_front against the given position<br>Battle or Strat: Battle<br>Class: UNIT_GROUP_DISTANCE_FROM_POSITION<br>Implemented: Yes",
            "I_UnitGroupDistanceFromGroup": "Identifier: I_UnitGroupDistanceFromGroup<br>Trigger requirements: <br>Parameters: group_label target_group_label logic_token distance<br>Sample use: I_UnitGroupDistanceFromGroup roman_archers gaul_swordsmen &lt; 50<br>Description: Tests the distance between two unit groups<br>Battle or Strat: Battle<br>Class: UNIT_GROUP_DISTANCE_FROM_GROUP<br>Implemented: Yes",
            "I_UnitGroupInRangeOfUnit": "Identifier: I_UnitGroupInRangeOfUnit<br>Trigger requirements: <br>Parameters: group_label target_unit_label<br>Sample use: I_UnitGroupInRangeOfUnit archer_group enemy_unit1<br>Description: Tests if any unit in the group is within range of the target unit<br>Battle or Strat: Battle<br>Class: UNIT_GROUP_IN_RANGE_OF_UNIT<br>Implemented: Yes",
            "I_UnitInRangeOfUnitGroup": "Identifier: I_UnitInRangeOfUnitGroup<br>Trigger requirements: <br>Parameters: unit_label target_group_label<br>Sample use: I_UnitInRangeOfUnitGroup roman_archers enemy_group3<br>Description: Tests if the unit is within range of any of the units in the target group<br>Battle or Strat: Battle<br>Class: UNIT_IN_RANGE_OF_UNIT_GROUP<br>Implemented: Yes",
            "I_UnitGroupInRangeOfUnitGroup": "Identifier: I_UnitGroupInRangeOfUnitGroup<br>Trigger requirements: <br>Parameters: group_label target_group_label<br>Sample use: I_UnitGroupInRangeOfUnitGroup archer_group2 enemy_group6<br>Description: Tests if any unit in the group can hit any unit in the target group<br>Battle or Strat: Battle<br>Class: UNIT_GROUP_IN_RANGE_OF_UNIT_GROUP<br>Implemented: Yes",
            "I_PlayerInRangeOfUnitGroup": "Identifier: I_PlayerInRangeOfUnitGroup<br>Trigger requirements: <br>Parameters: group_label<br>Sample use: I_PlayerInRangeOfUnitGroup enemy_group2<br>Description: tests if any player unit is in range of any unit in the group<br>Battle or Strat: Battle<br>Class: PLAYER_IN_RANGE_OF_UNIT_GROUP<br>Implemented: Yes",
            "I_PlayerInRangeOfUnit": "Identifier: I_PlayerInRangeOfUnit<br>Trigger requirements: <br>Parameters: unit_label<br>Sample use: I_PlayerInRangeOfUnit roman_archers<br>Description: Is any unit in the player's army in range of the specified unit<br>Battle or Strat: Battle<br>Class: PLAYER_IN_RANGE_OF_UNIT<br>Implemented: Yes",
            "I_UnitTypeSelected": "Identifier: I_UnitTypeSelected<br>Trigger requirements: <br>Parameters: unit type ('type' from export_descr_units.txt)<br>Sample use: I_UnitTypeSelected roman archer auxillia<br>Description: Tests if the player has a particular unit type selected<br>Battle or Strat: Battle<br>Class: UNIT_TYPE_SELECTED<br>Implemented: Yes",
            "UnitType": "Identifier: UnitType<br>Trigger requirements: resource_description<br>Parameters: unit type ('type' from export_descr_units.txt)<br>Sample use: UnitType roman archer auxillia<br>Description: Tests if a unit is of a particular type<br>Battle or Strat: Either<br>Class: UNIT_TYPE<br>Implemented: Yes",
            "I_UnitSelected": "Identifier: I_UnitSelected<br>Trigger requirements: <br>Parameters: unit_label<br>Sample use: I_UnitSelected roman_archers<br>Description: Is the specified unit selected?<br>Battle or Strat: Battle<br>Class: UNIT_SELECTED<br>Implemented: Yes",
            "I_MultipleUnitsSelected": "Identifier: I_MultipleUnitsSelected<br>Trigger requirements: <br>Parameters: None<br>Sample use: I_MultipleUnitsSelected<br>Description: Are multiple units selected?<br>Battle or Strat: Battle<br>Class: MULTIPLE_UNITS_SELECTED<br>Implemented: Yes",
            "I_SpecificUnitsSelected": "Identifier: I_SpecificUnitsSelected<br>Trigger requirements: <br>Parameters: unit_label1, unit_label2, unit_label3, ...<br>Sample use: I_SpecificUnitsSelected roman_archers roman_hastati roman_gladiators1<br>Description: Tests if all the specified units are selected<br>Battle or Strat: Battle<br>Class: SPECIFIC_UNITS_SELECTED<br>Implemented: Yes",
            "I_IsCameraZoomingToUnit": "Identifier: I_IsCameraZoomingToUnit<br>Trigger requirements: <br>Parameters: unit_label<br>Sample use: I_IsCameraZoomingToUnit roman_archers<br>Description: Tests if the camera is zooming to the specified unit<br>Battle or Strat: Battle<br>Class: IS_CAMERA_ZOOMING_TO_UNIT<br>Implemented: Yes",
            "I_BattleEnemyArmyPercentageOfMatchingUnits": "Identifier: I_BattleEnemyArmyPercentageOfMatchingUnits<br>Trigger requirements: <br>Parameters: unit match type, logic token, test value<br>Sample use: I_BattleEnemyArmyPercentageOfMatchingUnits has_dogs &gt; 35.8<br>Description: Test to see what percentage of the enemy army matches a particular match category<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_ARMY_PERCENTAGE_OF_UNIT_MATCHING_TEST<br>Implemented: Yes",
            "I_BattleEnemyArmyNumberOfMatchingUnits": "Identifier: I_BattleEnemyArmyNumberOfMatchingUnits<br>Trigger requirements: <br>Parameters: unit match type, logic token, test value<br>Sample use: I_BattleEnemyArmyNumberOfMatchingUnits has_dogs &gt; 2<br>Description: Test to see how many units of the enemy army match a particular match category<br>Battle or Strat: Battle<br>Class: BATTLE_ENEMY_ARMY_NUMBER_OF_UNIT_MATCHING_TEST<br>Implemented: Yes",
            "I_BattlePlayerArmyPercentageOfMatchingUnits": "Identifier: I_BattlePlayerArmyPercentageOfMatchingUnits<br>Trigger requirements: <br>Parameters: unit match type, logic token, test value<br>Sample use: I_BattlePlayerArmyPercentageOfMatchingUnits has_dogs &gt; 35.8<br>Description: Test to see what percentage of the player's army matches a particular match category<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ARMY_PERCENTAGE_OF_UNIT_MATCHING_TEST<br>Implemented: Yes",
            "I_BattlePlayerArmyNumberOfMatchingUnits": "Identifier: I_BattlePlayerArmyNumberOfMatchingUnits<br>Trigger requirements: <br>Parameters: unit match type, logic token, test value<br>Sample use: I_BattlePlayerArmyNumberOfMatchingUnits has_dogs &gt; 2<br>Description: Test to see how many units of the player's army match a particular match category<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_ARMY_NUMBER_OF_UNIT_MATCHING_TEST<br>Implemented: Yes",
            "LocalPlayerHasManualReinforcements": "Identifier: LocalPlayerHasManualReinforcements<br>Trigger requirements: <br>Parameters: <br>Sample use: LocalPlayerHasManualReinforcements<br>Description: Test to see if the player has manual reinforcements<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_WITH_MANUAL_REINFORCEMENTS_TEST<br>Implemented: Yes",
            "LocalPlayerHasAIReinforcements": "Identifier: LocalPlayerHasAIReinforcements<br>Trigger requirements: <br>Parameters: <br>Sample use: LocalPlayerHasAIReinforcements<br>Description: Test to see if the player has AI reinforcements<br>Battle or Strat: Battle<br>Class: BATTLE_PLAYER_WITH_AI_REINFORCEMENTS_TEST<br>Implemented: Yes",
            "Trait": "Identifier: Trait<br>Trigger requirements: character_record<br>Parameters: trait description, logic token, level<br>Sample use: Trait Girls &lt;= 2<br>Description: Test a character trait<br>Battle or Strat: Either<br>Class: CHARACTER_TRAIT_TEST<br>Implemented: Yes",
            "HasAncillary": "Identifier: HasAncillary<br>Trigger requirements: character_record<br>Parameters: ancillary description<br>Sample use: HasAncillary RomanFashion_Julii<br>Description: Test a character ancillary<br>Battle or Strat: Either<br>Class: CHARACTER_ANCILLARY_TEST<br>Implemented: Yes",
            "FatherTrait": "Identifier: FatherTrait<br>Trigger requirements: character_record<br>Parameters: trait description, logic token, level<br>Sample use: FatherTrait VictorRomanVirtue &gt;= 2<br>Description: Test a character's father's traits for hereditary traits<br>Battle or Strat: Either<br>Class: FATHER_TRAIT_TEST<br>Implemented: Yes",
            "FactionLeaderTrait": "Identifier: FactionLeaderTrait<br>Trigger requirements: character_record<br>Parameters: trait description, logic token, level<br>Sample use: FactionLeaderTrait VictorRomanVirtue &gt;= 2<br>Description: Test a character's faction leader traits<br>Battle or Strat: Either<br>Class: FACTION_LEADER_TRAIT_TEST<br>Implemented: Yes",
            "Attribute": "Identifier: Attribute<br>Trigger requirements: character_record<br>Parameters: attribute description, logic token, level<br>Sample use: Attribute Management &gt;= 2<br>Description: Test a character's attributes or hidden attributes<br>Battle or Strat: Either<br>Class: CHARACTER_ATTRIBUTE_TEST<br>Implemented: Yes",
            "RemainingMPPercentage": "Identifier: RemainingMPPercentage<br>Trigger requirements: character_record<br>Parameters: logic token, level<br>Sample use: RemainingMPPercentage &gt;= 35.8<br>Description: If this character has not moved this turn, he should have maximum movement points left.  Test for percentage remaining.  Will almost never be exactly zero, so check for &lt; 10<br>Battle or Strat: Strat<br>Class: CHARACTER_MP_REMAINING_PERCENTAGE<br>Implemented: Yes",
            "I_RemainingMPPercentage": "Identifier: I_RemainingMPPercentage<br>Trigger requirements: <br>Parameters: logic token, level<br>Sample use: I_RemainingMPPercentage Gaius Julius &gt;= 35.8<br>Description: If this character has not moved this turn, he should have maximum movement points left.  Test for percentage remaining.  Will almost never be exactly zero, so check for &lt; 10<br>Battle or Strat: Strat<br>Class: I_CHARACTER_MP_REMAINING_PERCENTAGE<br>Implemented: Yes",
            "I_CharacterCanMove": "Identifier: I_CharacterCanMove<br>Trigger requirements: <br>Parameters: logic token, level<br>Sample use: I_CharacterCanMove Gaius Julius<br>Description: Can the named character move to any square?  He may only be able to move in one direction, particularly the one he came from, so don't assume ability to move means he can move usefully.<br>Battle or Strat: Strat<br>Class: I_CHARACTER_CAN_MOVE<br>Implemented: Yes",
            "NoActionThisTurn": "Identifier: NoActionThisTurn<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: NoActionThisTurn<br>Description: Test to see if the character was idle throughout this turn<br>Battle or Strat: Strat<br>Class: CHARACTER_NOT_PERFORMED_ACTION<br>Implemented: Yes",
            "AgentType": "Identifier: AgentType<br>Trigger requirements: character_record<br>Parameters: character type (spy, assassin, diplomat, admiral, general, named character, family)<br>Sample use: AgentType = diplomat<br>Description: Test to see if a character is of a particular type (spy, admiral, named character &c.)<br>Battle or Strat: Strat<br>Class: CHARACTER_TYPE_TEST<br>Implemented: Yes",
            "TrainedAgentType": "Identifier: TrainedAgentType<br>Trigger requirements: character_record<br>Parameters: character type (spy, assassin, diplomat, admiral, general, named character, family)<br>Sample use: TrainedAgentType = diplomat<br>Description: Test to see if a character is of a particular type (spy, admiral, named character &c.)<br>Battle or Strat: Strat<br>Class: GOVERNOR_TRAINED_AGENT_TYPE_TEST<br>Implemented: Yes",
            "DisasterType": "Identifier: DisasterType<br>Trigger requirements: event_type<br>Parameters: event type (earthquake, flood, horde, fire, riot, storm, volcano)<br>Sample use: DisasterType earthquake<br>Description: Test to see if a particular disaster just happened<br>Battle or Strat: Strat<br>Class: CHARACTER_AFFECTED_BY_DISASTER_EVENT_TEST<br>Implemented: Yes",
            "CultureType": "Identifier: CultureType<br>Trigger requirements: character_record<br>Parameters: culture type (roman, barbarian, carthaginian, greek, egyptian, eastern)<br>Sample use: CultureType greek<br>Description: Test the character's culture type<br>Battle or Strat: Either<br>Class: CHARACTER_CULTURE<br>Implemented: Yes",
            "OriginalFactionType": "Identifier: OriginalFactionType<br>Trigger requirements: character_record<br>Parameters: OriginalFactionType<br>Sample use: OriginalFactionType empire_west<br>Description: Test the character's original faction type<br>Battle or Strat: Either<br>Class: CHARACTER_ORIGINAL_FACTION_TYPE<br>Implemented: Yes",
            "OriginalCultureType": "Identifier: OriginalCultureType<br>Trigger requirements: character_record<br>Parameters: OriginalCultureType<br>Sample use: OriginalCultureType roman<br>Description: Test the character's original culture type<br>Battle or Strat: Either<br>Class: CHARACTER_ORIGINAL_CULTURE_TYPE<br>Implemented: Yes",
            "IsGeneral": "Identifier: IsGeneral<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: IsGeneral<br>Description: Test to see if the character can command a land army<br>Battle or Strat: Either<br>Class: CHARACTER_IS_GENERAL<br>Implemented: Yes",
            "IsAdmiral": "Identifier: IsAdmiral<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: IsAdmiral<br>Description: Test to see if the character has an army<br>Battle or Strat: Either<br>Class: CHARACTER_IS_ADMIRAL<br>Implemented: Yes",
            "RemasteredEducation": "Identifier: RemasteredEducation<br>Trigger requirements: None<br>Parameters: None<br>Sample use: RemasteredEducation<br>Description: Test to see if the remastered education triggers should be used<br>Battle or Strat: Strat<br>Class: REMASTERED_EDUCATION<br>Implemented: Yes",
            "EndedInSettlement": "Identifier: EndedInSettlement<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: EndedInSettlement<br>Description: Test to see if the character is in a settlement<br>Battle or Strat: Either<br>Class: CHARACTER_IN_SETTLEMENT<br>Implemented: Yes",
            "IsFactionLeader": "Identifier: IsFactionLeader<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: IsFactionLeader<br>Description: Test to see if the character is a faction leader<br>Battle or Strat: Either<br>Class: CHARACTER_IS_LEADER<br>Implemented: Yes",
            "IsFactionHeir": "Identifier: IsFactionHeir<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: IsFactionHeir<br>Description: Test to see if the character is a faction heir<br>Battle or Strat: Either<br>Class: CHARACTER_IS_HEIR<br>Implemented: Yes",
            "IsMarried": "Identifier: IsMarried<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: IsMarried<br>Description: Test to see if the character is married<br>Battle or Strat: Either<br>Class: CHARACTER_IS_MARRIED<br>Implemented: Yes",
            "AtSea": "Identifier: AtSea<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: AtSea<br>Description: Is the character at sea?<br>Battle or Strat: Either<br>Class: CHARACTER_AT_SEA<br>Implemented: Yes",
            "InEnemyLands": "Identifier: InEnemyLands<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: InEnemyLands<br>Description: Is the character in enemy lands?<br>Battle or Strat: Either<br>Class: CHARACTER_IN_ENEMY_LANDS<br>Implemented: Yes",
            "InBarbarianLands": "Identifier: InBarbarianLands<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: InBarbarianLands<br>Description: Is the character in lands of a barbarian culture?<br>Battle or Strat: Either<br>Class: CHARACTER_IN_BARBARIAN_LANDS<br>Implemented: Yes",
            "InUncivilisedLands": "Identifier: InUncivilisedLands<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: InUncivilisedLands<br>Description: Is the character in lands of an uncivilised culture?<br>Battle or Strat: Either<br>Class: CHARACTER_IN_UNCIVILISED_LANDS<br>Implemented: Yes",
            "IsBesieging": "Identifier: IsBesieging<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: IsBesieging<br>Description: Is the character besieging a settlement?<br>Battle or Strat: Either<br>Class: CHARACTER_IS_BESIEGING<br>Implemented: Yes",
            "IsUnderSiege": "Identifier: IsUnderSiege<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: IsUnderSiege<br>Description: Is the character in a garrison residence under siege?<br>Battle or Strat: Either<br>Class: CHARACTER_IS_UNDER_SIEGE<br>Implemented: Yes",
            "I_WithdrawsBeforeBattle": "Identifier: I_WithdrawsBeforeBattle<br>Trigger requirements: <br>Parameters: None<br>Sample use: I_WithdrawsBeforeBattle<br>Description: Was the last battle aborted?<br>Battle or Strat: Either<br>Class: CHARACTER_WITHDRAWS_BEFORE_BATTLE<br>Implemented: Yes",
            "EndedInEnemyZOC": "Identifier: EndedInEnemyZOC<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: EndedInEnemyZOC<br>Description: Is the character in an enemy zone of control?<br>Battle or Strat: Either<br>Class: ENDED_IN_ENEMY_ZOC<br>Implemented: Yes",
            "AdviseAction": "Identifier: AdviseAction<br>Trigger requirements: character_action_advice<br>Parameters: logic token, action (attack_enemy, attack_settlement, merge_armies, patrol_region, move_to_region, do_nothing)<br>Sample use: AdviseAction = attack_settlement<br>Description: Is this the best thing this character can do now?<br>Battle or Strat: Strat<br>Class: ADVISE_ACTION<br>Implemented: Yes",
            "I_CharacterTypeNearCharacterType": "Identifier: I_CharacterTypeNearCharacterType<br>Trigger requirements: <br>Parameters: faction, character type, distance in squares, faction, character type<br>Sample use: I_CharacterTypeNearCharacterType romans_julii spy 10 gaul named character<br>Description: Is a particular character type of a faction near another particular character type of another faction?<br>Battle or Strat: Strat<br>Class: I_CHARACTER_NEAR_CHARACTER<br>Implemented: Yes",
            "I_CharacterTypeNearTile": "Identifier: I_CharacterTypeNearTile<br>Trigger requirements: <br>Parameters: faction, character type, distance in squares, x, z<br>Sample use: I_CharacterTypeNearTile romans_julii named_character, 10 48,30<br>Description: Is a particular character type of a faction near a particular tile?<br>Battle or Strat: Strat<br>Class: I_CHARACTER_NEAR_TILE<br>Implemented: Yes",
            "I_CharacterNameNearTile": "Identifier: I_CharacterNameNearTile<br>Trigger requirements: <br>Parameters: faction, character name, distance in squares, x, z<br>Sample use: I_CharacterNameNearTile Flavius Julius, named_character, 10 48,30<br>Description: Is a particular character near a particular tile?<br>Battle or Strat: Strat<br>Class: I_CHARACTER_NAME_NEAR_TILE<br>Implemented: Yes",
            "TradingResource": "Identifier: TradingResource<br>Trigger requirements: character_record<br>Parameters: resource / resource group description<br>Sample use: TradingResource silk<br>Description: Test if the current merchant is standing on and trading the specified resource<br>Battle or Strat: Strat<br>Class: TRADING_RESOURCE<br>Implemented: Yes",
            "RegionTradingResource": "Identifier: RegionTradingResource<br>Trigger requirements: character_record<br>Parameters: resource / resource group description<br>Sample use: RegionTradingResource silk<br>Description: Tests if the current merchant is trading a resource in the provided group. Does not need to be standing on said resource.<br>Battle or Strat: Strat<br>Class: REGION_TRADING_RESOURCE<br>Implemented: Yes",
            "TradingExotic": "Identifier: TradingExotic<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: TradingExotic<br>Description: Is the character trading an exotic resource?<br>Battle or Strat: Strat<br>Class: TRADING_EXOTIC<br>Implemented: Yes",
            "DistanceCapital": "Identifier: DistanceCapital<br>Trigger requirements: character_record<br>Parameters: logic token, level<br>Sample use: DistanceCapital &gt;= 40<br>Description: Does the characters distance to the faction capital exceed the given threshold?<br>Battle or Strat: Strat<br>Class: CHARACTER_DISTANCE_CAPITAL<br>Implemented: Yes",
            "DistanceHome": "Identifier: DistanceHome<br>Trigger requirements: character_record<br>Parameters: logic token, level<br>Sample use: DistanceHome &gt;= 40<br>Description: Does the characters distance to their home settlement exceed the given threshold?<br>Battle or Strat: Strat<br>Class: CHARACTER_DISTANCE_HOME<br>Implemented: Yes",
            "TradingGroup": "Identifier: TradingGroup<br>Trigger requirements: character_record<br>Parameters: logic token, resource group<br>Sample use: TradingGroup precious_minerals<br>Description: Checks if the characters faction is merchant trading each of the resources within the group. Also, required this merchant to be trading one of them.<br>Battle or Strat: Strat<br>Class: TRADING_GROUP<br>Implemented: Yes",
            "RegionMerchantCount": "Identifier: RegionMerchantCount<br>Trigger requirements: character_record<br>Parameters: logic token, value<br>Sample use: RegionMerchantCount &gt; 3<br>Description: Do the number of merchants in the characters region exceed the given value?<br>Battle or Strat: Strat<br>Class: REGION_MERCHANT_COUNT<br>Implemented: Yes",
            "PreciousMineCount": "Identifier: PreciousMineCount<br>Trigger requirements: character_record, faction<br>Parameters: logic token, value<br>Sample use: PreciousMineCount &gt; 3<br>Description: Does the amount of Precious minerals we are mining exceed the given value? (Resource Quantity * Mine Levels)<br>Battle or Strat: Strat<br>Class: FACTION_PRECIOUS_MINE_COUNT<br>Implemented: Yes",
            "IsFromFaction": "Identifier: IsFromFaction<br>Trigger requirements: character_record, faction<br>Parameters: logic token, value<br>Sample use: IsFromFaction roman_empire<br>Description: Is this character from a faction within the provided faction group?<br>Battle or Strat: Strat<br>Class: FROM_FACTION_GROUP<br>Implemented: Yes",
            "NightBattlesEnabled": 'Identifier: NightBattlesEnabled<br>Trigger requirements: IS_TOGGLED("night battles")<br>Parameters: <br>Sample use: WorldwideAncillaryExists<br>Description: Is night battles enabled<br>Battle or Strat: Strat<br>Class: NIGHT_BATTLE_ENABLED<br>Implemented: Yes',
            "character_age": "Identifier: character_age<br>Trigger requirements: character<br>Parameters: logic token, age<br>Sample use: character_age &gt;= 60<br>Description: Checks the age of a character<br>Battle or Strat: Strat<br>Class: CHARACTER_IS_AGE<br>Implemented: Yes",
            "HasOffice": "Identifier: HasOffice<br>Trigger requirements: character<br>Parameters: <br>Sample use: HasOffice Aedile<br>Description: Checks if a character holds a senate office (or is just about to leave one, in the case of LeaveOffice)<br>Battle or Strat: Strat<br>Class: HAS_OFFICE<br>Implemented: Yes",
            "FactionType": "Identifier: FactionType<br>Trigger requirements: faction<br>Parameters: faction type<br>Sample use: FactionType romans_julii<br>Description: Test the faction type<br>Battle or Strat: Either<br>Class: FACTION_TYPE_CHECK<br>Implemented: Yes",
            "TargetFactionType": "Identifier: TargetFactionType<br>Trigger requirements: target_faction<br>Parameters: faction type<br>Sample use: TargetFactionType romans_julii<br>Description: Test the target faction type<br>Battle or Strat: Either<br>Class: TARGET_FACTION_TYPE_CHECK<br>Implemented: Yes",
            "FactionCultureType": "Identifier: FactionCultureType<br>Trigger requirements: faction<br>Parameters: culture type (roman, barbarian, carthaginian, greek, egyptian, eastern)<br>Sample use: FactionCultureType greek<br>Description: Test the faction's culture type<br>Battle or Strat: Either<br>Class: FACTION_CULTURE<br>Implemented: Yes",
            "TargetFactionCultureType": "Identifier: TargetFactionCultureType<br>Trigger requirements: target_faction<br>Parameters: culture type (roman, barbarian, carthaginian, greek, egyptian, eastern)<br>Sample use: TargetFactionCultureType greek<br>Description: Test the target faction's culture type<br>Battle or Strat: Either<br>Class: TARGET_FACTION_CULTURE<br>Implemented: Yes",
            "TrainedUnitCategory": "Identifier: TrainedUnitCategory<br>Trigger requirements: unit_category<br>Parameters: category description (infantry, cavalry, siege, non_combatant, ship, handler)<br>Sample use: TrainedUnitCategory cavalry<br>Description: Test to see if the unit is of a particular category<br>Battle or Strat: Strat<br>Class: GOVERNOR_TRAINED_UNIT_TYPE_TEST<br>Implemented: Yes",
            "UnitCategory": "Identifier: UnitCategory<br>Trigger requirements: unit_category<br>Parameters: logic token, category description<br>Sample use: <br>Description: Test to see if the unit is of a particular category<br>Battle or Strat: Strat<br>Class: UNIT_CATEGORY_TYPE_TEST<br>Implemented: Yes",
            "SenateMissionTimeRemaining": "Identifier: SenateMissionTimeRemaining<br>Trigger requirements: faction<br>Parameters: logic token, number of turns<br>Sample use: SenateMissionTimeRemaining &lt; 3<br>Description: Test the number of turns before the next senate mission expires<br>Battle or Strat: Either<br>Class: SENATE_MISSION_TIME_REMAINING<br>Implemented: Yes",
            "MedianTaxLevel": "Identifier: MedianTaxLevel<br>Trigger requirements: faction<br>Parameters: logic token, tax level (tax_low, tax_normal, tax_high, tax_extortionate)<br>Sample use: MedianTaxLevel &gt; tax_high<br>Description: Compare the median tax level<br>Battle or Strat: Either<br>Class: MEDIAN_TAX_LEVEL<br>Implemented: Yes",
            "ModeTaxLevel": "Identifier: ModeTaxLevel<br>Trigger requirements: faction<br>Parameters: logic token, tax level (tax_low, tax_normal, tax_high, tax_extortionate)<br>Sample use: ModeTaxLevel &gt; tax_high<br>Description: Compare the mode tax level<br>Battle or Strat: Either<br>Class: MODE_TAX_LEVEL<br>Implemented: Yes",
            "I_ModeTaxLevel": "Identifier: I_ModeTaxLevel<br>Trigger requirements: <br>Parameters: faction, logic token, tax level (tax_low, tax_normal, tax_high, tax_extortionate)<br>Sample use: I_ModeTaxLevel romans_julii &gt; tax_high<br>Description: Compare the mode tax level<br>Battle or Strat: Either<br>Class: I_MODE_TAX_LEVEL<br>Implemented: Yes",
            "MissionSuccessLevel": "Identifier: MissionSuccessLevel<br>Trigger requirements: mission_success_level<br>Parameters: logic token, success level (not_successful, slightly_successful, partly_successful, highly_successful)<br>Sample use: MissionSuccessLevel &gt; slightly_successful<br>Description: Was the mission sufficiently successful?<br>Battle or Strat: Strat<br>Class: MISSION_SUCCESS_TYPE<br>Implemented: Yes",
            "MissionSucceeded": "Identifier: MissionSucceeded<br>Trigger requirements: <br>Parameters: None (no not modifier either)<br>Sample use: MissionSucceeded<br>Description: Was the mission sufficiently successful?<br>Battle or Strat: Strat<br>Class: MISSION_SUCCEEDED<br>Implemented: Yes",
            "MissionFactionTargetType": "Identifier: MissionFactionTargetType<br>Trigger requirements: faction<br>Parameters: faction type<br>Sample use: MissionFactionTargetType romans_julii<br>Description: Is the faction of a particular type?<br>Battle or Strat: Either<br>Class: MISSION_FACTION_TARGET_TYPE<br>Implemented: Yes",
            "MissionCultureTargetType": "Identifier: MissionCultureTargetType<br>Trigger requirements: faction, character_record<br>Parameters: culture type (roman, barbarian, carthaginian, greek, egyptian, eastern)<br>Sample use: MissionCultureTargetType own, MissionCultureTargetType greek<br>Description: Is the faction of a particular type?<br>Battle or Strat: Either<br>Class: MISSION_CULTURE_TARGET_TYPE<br>Implemented: Yes",
            "DiplomaticStanceFromCharacter": "Identifier: DiplomaticStanceFromCharacter<br>Trigger requirements: character_record<br>Parameters: faction type, logic token, stance (Allied, Suspicious, Neutral, Hostile, AtWar)<br>Sample use: DiplomaticStanceFromCharacter romans_julii &gt; Suspicious<br>Description: Test the character's faction's diplomatic stance with another specified faction<br>Battle or Strat: Either<br>Class: DIPLOMATIC_STANCE_FROM_CHARACTER<br>Implemented: Yes",
            "DiplomaticStanceFromFaction": "Identifier: DiplomaticStanceFromFaction<br>Trigger requirements: faction<br>Parameters: faction type, logic token, stance (Allied, Suspicious, Neutral, Hostile, AtWar)<br>Sample use: DiplomaticStanceFromFaction romans_julii &gt; Suspicious<br>Description: Test the character's faction's diplomatic stance with another specified faction<br>Battle or Strat: Either<br>Class: DIPLOMATIC_STANCE_FROM_FACTION<br>Implemented: Yes",
            "FactionHasAllies": "Identifier: FactionHasAllies<br>Trigger requirements: faction<br>Parameters: <br>Sample use: FactionHasAllies<br>Description: Test whether the faction is allied with any other faction<br>Battle or Strat: Either<br>Class: FACTION_HAS_ALLIES<br>Implemented: Yes",
            "LosingMoney": "Identifier: LosingMoney<br>Trigger requirements: <br>Parameters: None<br>Sample use: LosingMoney<br>Description: Is the faction losing money on the end of year balance sheet?<br>Battle or Strat: Strat<br>Class: LOSING_MONEY<br>Implemented: Yes",
            "I_LosingMoney": "Identifier: I_LosingMoney<br>Trigger requirements: <br>Parameters: None<br>Sample use: I_LosingMoney romans_julii<br>Description: Is the faction losing money on the end of year balance sheet?<br>Battle or Strat: Strat<br>Class: I_LOSING_MONEY<br>Implemented: Yes",
            "FactionIsAlive": "Identifier: FactionIsAlive<br>Trigger requirements: none<br>Parameters: faction name<br>Sample use: FactionIsAlive romans_julii<br>Description: Checks if the given faction is alive (as opposed to waiting to emerge or defeated)<br>Battle or Strat: Strat<br>Class: FACTION_IS_ALIVE<br>Implemented: Yes",
            "SupportCostsPercentage": "Identifier: SupportCostsPercentage<br>Trigger requirements: faction<br>Parameters: logic token, percentage<br>Sample use: SupportCostsPercentage &gt; 35.8<br>Description: Does the percentage of expenditure devoted to support costs exceed the threshold?<br>Battle or Strat: Strat<br>Class: SUPPORT_COSTS_PERCENTAGE<br>Implemented: Yes",
            "Treasury": "Identifier: Treasury<br>Trigger requirements: faction<br>Parameters: logic token, quantity<br>Sample use: Treasury &gt; 2000<br>Description: Does the cash-in-hand exceed the threshold?<br>Battle or Strat: Strat<br>Class: TREASURY<br>Implemented: Yes",
            "OnAWarFooting": "Identifier: OnAWarFooting<br>Trigger requirements: faction<br>Parameters: None<br>Sample use: OnAWarFooting<br>Description: Is the faction on a war footing?<br>Battle or Strat: Strat<br>Class: ON_A_WAR_FOOTING<br>Implemented: Yes",
            "I_FactionBesieging": "Identifier: I_FactionBesieging<br>Trigger requirements: <br>Parameters: faction type<br>Sample use: not I_FactionBesieging romans_julii<br>Description: Is the faction besieging a settlement somewhere?<br>Battle or Strat: Strat<br>Class: FACTION_BESIEGING<br>Implemented: Yes",
            "I_FactionBesieged": "Identifier: I_FactionBesieged<br>Trigger requirements: <br>Parameters: faction type<br>Sample use: not I_FactionBesieged romans_julii<br>Description: Is the faction besieged at any settlement?<br>Battle or Strat: Strat<br>Class: FACTION_BESIEGED<br>Implemented: Yes",
            "I_NumberOfSettlements": "Identifier: I_NumberOfSettlements<br>Trigger requirements: <br>Parameters: number of settlements<br>Sample use: I_NumberOfSettlements thrace &gt; 3<br>Description: How many settlements does the faction hold?<br>Battle or Strat: Strat<br>Class: I_NUMBER_OF_SETTLEMENTS<br>Implemented: Yes",
            "I_NumberOfHeirs": "Identifier: I_NumberOfHeirs<br>Trigger requirements: <br>Parameters: number of heirs<br>Sample use: I_NumberOfHeirs thrace &gt; 3<br>Description: How many heirs does the faction leader have?<br>Battle or Strat: Strat<br>Class: I_NUMBER_OF_HEIRS<br>Implemented: Yes",
            "I_FactionNearTile": "Identifier: I_FactionNearTile<br>Trigger requirements: <br>Parameters: faction, distance in squares, x, z<br>Sample use: I_FactionNearTile romans_julii 10 48,30<br>Description: Is a member of a faction near a particular tile?<br>Battle or Strat: Strat<br>Class: I_FACTION_NEAR_TILE<br>Implemented: Yes",
            "SettlementsTaken": "Identifier: SettlementsTaken<br>Trigger requirements: faction<br>Parameters: logic token, quantity<br>Sample use: SettlementsTaken = 6<br>Description: How many settlements has the player captured so far during this campaign?<br>Battle or Strat: Either<br>Class: SETTLEMENTS_TAKEN<br>Implemented: Yes",
            "BattlesFought": "Identifier: BattlesFought<br>Trigger requirements: faction<br>Parameters: logic token, quantity<br>Sample use: BattlesFought = 6<br>Description: How many battles has the player fought so far during this campaign?<br>Battle or Strat: Either<br>Class: BATTLES_FOUGHT<br>Implemented: Yes",
            "BattlesWon": "Identifier: BattlesWon<br>Trigger requirements: faction<br>Parameters: logic token, quantity<br>Sample use: BattlesWon = 6<br>Description: How many battles has the player won so far during this campaign?<br>Battle or Strat: Either<br>Class: BATTLES_WON<br>Implemented: Yes",
            "BattlesLost": "Identifier: BattlesLost<br>Trigger requirements: faction<br>Parameters: logic token, quantity<br>Sample use: BattlesLost = 6<br>Description: How many battles has the player won so far during this campaign?<br>Battle or Strat: Either<br>Class: BATTLES_LOST<br>Implemented: Yes",
            "DefensiveSiegesFought": "Identifier: DefensiveSiegesFought<br>Trigger requirements: faction<br>Parameters: logic token, quantity<br>Sample use: DefensiveSiegesFought = 6<br>Description: How many defensive sieges has the player fought so far during this campaign?<br>Battle or Strat: Either<br>Class: DEFENSIVE_SIEGES_FOUGHT<br>Implemented: Yes",
            "DefensiveSiegesWon": "Identifier: DefensiveSiegesWon<br>Trigger requirements: faction<br>Parameters: logic token, quantity<br>Sample use: DefensiveSiegesWon = 6<br>Description: How many defensive sieges has the player won so far during this campaign?<br>Battle or Strat: Either<br>Class: DEFENSIVE_SIEGES_WON<br>Implemented: Yes",
            "OffensiveSiegesFought": "Identifier: OffensiveSiegesFought<br>Trigger requirements: faction<br>Parameters: logic token, quantity<br>Sample use: OffensiveSiegesFought = 6<br>Description: How many offensive sieges has the player fought so far during this campaign?<br>Battle or Strat: Either<br>Class: OFFENSIVE_SIEGES_FOUGHT<br>Implemented: Yes",
            "OffensiveSiegesWon": "Identifier: OffensiveSiegesWon<br>Trigger requirements: faction<br>Parameters: logic token, quantity<br>Sample use: OffensiveSiegesWon = 6<br>Description: How many offensive sieges has the player won so far during this campaign?<br>Battle or Strat: Either<br>Class: OFFENSIVE_SIEGES_WON<br>Implemented: Yes",
            "FactionwideAncillaryExists": "Identifier: FactionwideAncillaryExists<br>Trigger requirements: character_record<br>Parameters: logic token<br>Sample use: FactionwideAncillaryExists actor true<br>Description: Does this ancillary already exist in this faction?<br>Battle or Strat: Strat<br>Class: FACTIONWIDE_ANCILLARY_EXISTS<br>Implemented: Yes",
            "IsAlly": "Identifier: IsAlly<br>Trigger requirements: faction<br>Parameters: other faction type<br>Sample use: IsAlly romans_julii<br>Description: is this faction allied to the other<br>Battle or Strat: Strat<br>Class: FACTION_IS_ALLY<br>Implemented: Yes",
            "IsProtectorate": "Identifier: IsProtectorate<br>Trigger requirements: faction<br>Parameters: other faction type<br>Sample use: IsProtectorate romans_julii<br>Description: is this faction a protectorate of ours?<br>Battle or Strat: Strat<br>Class: FACTION_IS_PROTECTORATE<br>Implemented: Yes",
            "IsProtector": "Identifier: IsProtector<br>Trigger requirements: faction<br>Parameters: other faction type<br>Sample use: IsProtector romans_julii<br>Description: is this faction our protector?<br>Battle or Strat: Strat<br>Class: FACTION_IS_PROTECTOR<br>Implemented: Yes",
            "IsSameSuperfaction": "Identifier: IsSameSuperfaction<br>Trigger requirements: faction<br>Parameters: other faction type<br>Sample use: IsSameSuperfaction romans_julii<br>Description: is this faction in the same superfaction as us? Returns false against former members of our superfaction that were outlawed<br>Battle or Strat: Strat<br>Class: FACTION_IS_SAME_SUPERFACTION<br>Implemented: Yes",
            "LocalPlayerBattlesFought": "Identifier: LocalPlayerBattlesFought<br>Trigger requirements: <br>Parameters: logic token, quantity<br>Sample use: LocalPlayerBattlesFought = 6<br>Description: How many battles has the player fought so far during this campaign?<br>Battle or Strat: Either<br>Class: LOCAL_PLAYER_BATTLES_FOUGHT<br>Implemented: Yes",
            "Toggled": "Identifier: Toggled<br>Trigger requirements: <br>Parameters: toggle name<br>Sample use: Toggled 'gradual trait loss'<br>Description: Is the remaster toggle for this enabled?<br>Battle or Strat: Either<br>Class: TOGGLE_ENABLED<br>Implemented: Yes",
            "MajorEventActive": 'Identifier: MajorEventActive<br>Trigger requirements: <br>Parameters: "major event name", faction type (optional, checks local/first faction by default)<br>Sample use: MajorEventActive "currency_crisis", empire_west<br>Description: Is this event active for the given faction<br>Battle or Strat: Either<br>Class: MAJOR_EVENT_ACTIVE<br>Implemented: Yes',
            "I_IsTutorialEnabled": "Identifier: I_IsTutorialEnabled<br>Trigger requirements: <br>Parameters: <br>Sample use: I_IsTutorialEnabled<br>Description: Check if a tutorial is enabled<br>Battle or Strat: Both<br>Class: IS_TUTORIAL_ENABLED<br>Implemented: Yes",
            "I_IsPlayerTurn": "Identifier: I_IsPlayerTurn<br>Trigger requirements: <br>Parameters: <br>Sample use: I_IsPlayerTurn<br>Description: Check to see if the current turn is for player<br>Battle or Strat: Both<br>Class: IS_PLAYER_TURN<br>Implemented: Yes",
            "ConstructionItemClicked": "Identifier: ConstructionItemClicked<br>Trigger requirements: resource_description<br>Parameters: id<br>Sample use: ConstructionItemClicked stables<br>Description: Check for a given construction item<br>Battle or Strat: Strat<br>Class: CONSTRUCTION_ITEM_CLICKED<br>Implemented: Yes",
            "RecruitmentItemClicked": "Identifier: RecruitmentItemClicked<br>Trigger requirements: resource_description<br>Parameters: id<br>Sample use: RecruitmentItemClicked roman peasant<br>Description: Check for a given recruitment item<br>Battle or Strat: Strat<br>Class: RECRUITMENT_ITEM_CLICKED<br>Implemented: Yes",
            "CharacterName": "Identifier: CharacterName<br>Trigger requirements: character_record<br>Parameters: Character Name<br>Sample use: CharacterName Flavious Fella<br>Description: Checks for a given characters name<br>Battle or Strat: Strat<br>Class: CHARACTER_NAME<br>Implemented: Yes",
            "ScrollDidOpen": "Identifier: ScrollDidOpen<br>Trigger requirements: resource_description<br>Parameters: Scroll Name<br>Sample use: <br>Description: Checks when scroll is open<br>Battle or Strat: Both<br>Class: SCROLL_DID_OPEN<br>Implemented: Yes",
            "UnitHasRouted": "Identifier: UnitHasRouted<br>Trigger requirements: resource_description<br>Parameters: Unit Name<br>Sample use: <br>Description: Checks when a unit has routed<br>Battle or Strat: Battle<br>Class: UNIT_HAS_ROUTED<br>Implemented: Yes",
            "BattleUnitActionStatus": "Identifier: BattleUnitActionStatus<br>Trigger requirements: resource_description<br>Parameters: Unit Name, Unit Status to detect<br>Sample use: BattleUnitActionStatus player_general, routing<br>Description: Checks when a unit changes status<br>Battle or Strat: Battle<br>Class: BATTLE_UNIT_ACTION_STATUS<br>Implemented: Yes",
            "I_AmountOfUnitInSettlement": "Identifier: I_AmountOfUnitInSettlement<br>Trigger requirements: <br>Parameters: Settlement_name, Amount_of_unit_wanted, Unit_name<br>Sample use: I_AmountOfUnitInSettlement Arretium 2 roman triarii<br>Description: Check how many of a unit is in a settlement.<br>Battle or Strat: Strat<br>Class: AMOUNT_OF_UNIT_IN_SETTLEMENT<br>Implemented: Yes",
            "I_UnitCardSelected": "Identifier: I_UnitCardSelected<br>Trigger requirements: <br>Parameters: unit name, amount of unit to select<br>Sample use: I_UnitCardSelected roman city militia, 1, roman hastati, 3<br>Description: Detect whether the unit card is currently selected<br>Battle or Strat: Strat<br>Class: UNIT_CARD_SELECTED<br>Implemented: Yes",
            "RandomPercent": "Identifier: RandomPercent<br>Trigger requirements: <br>Parameters: logic token, percentage (integer)<br>Sample use: RandomPercent &gt; 50<br>Description: Pick a number from 0 to 100 at random<br>Battle or Strat: Either<br>Class: RANDOM_PERCENT<br>Implemented: Yes",
            "TrueCondition": "Identifier: TrueCondition<br>Trigger requirements: <br>Parameters: <br>Sample use: not TrueCondition<br>Description: When you need to supply a true/false, for debugging and monitor_event<br>Battle or Strat: Either<br>Class: TRUE_CONDITION<br>Implemented: Yes",
            "WorldwideAncillaryExists": "Identifier: WorldwideAncillaryExists<br>Trigger requirements: character_record<br>Parameters: logic token<br>Sample use: WorldwideAncillaryExists actor true<br>Description: Does this ancillary already exist in the world?<br>Battle or Strat: Strat<br>Class: WORLDWIDE_ANCILLARY_EXISTS<br>Implemented: Yes",
            "I_CompareCounter": "Identifier: I_CompareCounter<br>Trigger requirements: <br>Parameters: script counter, value<br>Sample use: I_CompareCounter blib &lt; 17<br>Description: Compare a script counter to a value<br>Battle or Strat: Either<br>Class: COMPARE_COUNTER<br>Implemented: Yes",
            "TestFaction": "Identifier: TestFaction<br>Trigger requirements: <br>Parameters: faction name<br>Sample use: TestFaction romans_julii<br>Description: Test is a given faction is being used by the player<br>Battle or Strat: Either<br>Class: COMPARE_FACTION<br>Implemented: Yes",
            "LangIs": "Identifier: LangIs<br>Trigger requirements: <br>Parameters: language ID (EN, DE, FR, ES, IT, RU, zh_CN)<br>Sample use: LangIs cn_cz<br>Description: Test the language<br>Battle or Strat: Either<br>Class: CHECK_LANG<br>Implemented: Yes",
            "I_TimerElapsed": "Identifier: I_TimerElapsed<br>Trigger requirements: <br>Parameters: logic token, timer_id, duration (milliseconds)<br>Sample use: I_TimerElapsed rout_timer &gt; 1000<br>Description: How long has it been since the script timer restarted<br>Battle or Strat: Either<br>Class: SCRIPT_TIMER_ELAPSED<br>Implemented: Yes",
            "I_SoundPlaying": "Identifier: I_SoundPlaying<br>Trigger requirements: <br>Parameters: &lt;sound event tag&gt;<br>Sample use: I_SoundPlaying snd_IntroSpeech<br>Description: Detect whether the tagged sound is playing or not<br>Battle or Strat: Both<br>Class: SOUND_EVENT_PLAYING<br>Implemented: Yes",
            "HasResource": "Identifier: HasResource<br>Trigger requirements: settlement<br>Parameters: resource name (includes hidden resources)<br>Sample use: HasResource sparta<br>Description: For scripting - does the region have this resource<br>Battle or Strat: Either<br>Class: HAS_RESOURCE<br>Implemented: Yes",
            "SettlementRevoltingFrom": "Identifier: SettlementRevoltingFrom<br>Trigger requirements: settlement<br>Parameters: faction name or tag<br>Sample use: SettlementRevoltingFrom roman_empire<br>Description: Only useful in revolt faction spawning scripts - says who the faction that we are in the process of revolting from is<br>Battle or Strat: Either<br>Class: REVOLTING_FROM<br>Implemented: Yes",
            "IsCapital": "Identifier: IsCapital<br>Trigger requirements: settlement<br>Parameters: none<br>Sample use: IsCapital<br>Description: Checks if this settlement is a capital<br>Battle or Strat: Either<br>Class: IS_CAPITAL<br>Implemented: Yes",
            "SettlementName": "Identifier: SettlementName<br>Trigger requirements: settlement<br>Parameters: settlement name<br>Sample use: SettlementName Tarquinii<br>Description: For scripting - does the settlement have this name<br>Battle or Strat: Either<br>Class: SETTLEMENT_NAME<br>Implemented: Yes",
            "GovernorBuildingExists": "Identifier: GovernorBuildingExists<br>Trigger requirements: character_record<br>Parameters: building description, logic token, test level<br>Sample use: GovernorBuildingExists = governors_house<br>Description: Test to see if the character is a governor and his settlement has a building at a particular level<br>Battle or Strat: Strat<br>Class: GOVERNORS_BUILDING_LEVEL_EXISTS_TEST<br>Implemented: Yes",
            "SettlementBuildingExists": "Identifier: SettlementBuildingExists<br>Trigger requirements: settlement<br>Parameters: building description, logic token, test level<br>Sample use: SettlementBuildingExists = governors_house<br>Description: Test to see if the settlement has a building at a particular level<br>Battle or Strat: Strat<br>Class: SETTLEMENT_BUILDING_LEVEL_EXISTS_TEST<br>Implemented: Yes",
            "HomeSettlementBuildingExists": "Identifier: HomeSettlementBuildingExists<br>Trigger requirements: character<br>Parameters: building description, logic token, test level<br>Sample use: HomeSettlementBuildingExists = governors_house<br>Description: Test to see if the home settlement of the triggering character has a building at a particular level<br>Battle or Strat: Strat<br>Class: HOME_SETTLEMENT_BUILDING_LEVEL_EXISTS_TEST<br>Implemented: Yes",
            "SettlementOrderLevel": "Identifier: SettlementOrderLevel<br>Trigger requirements: settlement<br>Parameters: settlement_order_type_strings (garrison, law, fun, influence, tax_bonus, triumph, wonder, boom, squalour, distance_to_capital, culture_penalty, no_governance, tax_penalty, turmoil, underpopulation, besieged, blockaded, recession, entertained, health, governor_religion_unrest, leader_religion_unrest), logic token, test level<br>Sample use: SettlementOrderLevel law &gt; 0<br>Description: Test to see if the settlements order factor is at a particular level<br>Battle or Strat: Strat<br>Class: SETTLEMENT_ORDER_LEVEL<br>Implemented: Yes",
            "SettlementCapabilityLevel": "Identifier: SettlementCapabilityLevel<br>Trigger requirements: settlement<br>Parameters: capability_type_strings (population_growth_bonus, population_loyalty_bonus, population_health_bonus, trade_base_income_bonus, trade_level_bonus, trade_fleet, taxable_income_bonus, mine_resource, farming_level, road_level, gate_strength, gate_defences, wall_level, tower_level, armour, stage_games, stage_races, fire_risk, weapon_simple, weapon_missile, weapon_bladed, weapon_siege, weapon_other, upgrade_bodyguard, recruits_morale_bonus, recruits_exp_bonus, happiness_bonus, law_bonus, construction_cost_bonus_military, construction_cost_bonus_religious, construction_cost_bonus_defensive, construction_cost_bonus_other, construction_time_bonus_military, construction_time_bonus_religious, construction_time_bonus_defensive, construction_time_bonus_other), logic token, test level<br>Sample use: SettlementCapabilityLevel law_bonus &gt; 0<br>Description: Test to see if the settlement has a capability at a particular level<br>Battle or Strat: Strat<br>Class: SETTLEMENT_CAPABILITY_LEVEL<br>Implemented: Yes",
            "BuildingFinishedByGovernor": "Identifier: BuildingFinishedByGovernor<br>Trigger requirements: character_record, prior_build<br>Parameters: building description, logic token, test level<br>Sample use: BuildingFinishedByGovernor = governors_house<br>Description: Test to see if the character is a governor and what the last finished building was<br>Battle or Strat: Strat<br>Class: GOVERNORS_BUILDING_LEVEL_FINISHED_TEST<br>Implemented: Yes",
            "SettlementBuildingFinished": "Identifier: SettlementBuildingFinished<br>Trigger requirements: prior_build<br>Parameters: building description, logic token, test level<br>Sample use: SettlementBuildingFinished = governors_house<br>Description: Test to see what the last finished building was<br>Battle or Strat: Strat<br>Class: SETTLEMENT_BUILDING_LEVEL_FINISHED_TEST<br>Implemented: Yes",
            "GovernorPlugInExists": "Identifier: GovernorPlugInExists<br>Trigger requirements: character_record<br>Parameters: logic token, plug-in<br>Sample use: GovernorPlugInExists &gt; storage_pits<br>Description: Test to see if the character is a governor and his settlement has a plug-in at a particular level<br>Battle or Strat: Strat<br>Class: GOVERNORS_PLUG_IN_LEVEL_EXISTS_TEST<br>Implemented: Yes",
            "GovernorPlugInFinished": "Identifier: GovernorPlugInFinished<br>Trigger requirements: character_record, prior_build<br>Parameters: logic token, plug-in<br>Sample use: GovernorPlugInFinished &gt; storage_pits<br>Description: Test to see if the character is a governor and what the last finished plug-in was<br>Battle or Strat: Strat<br>Class: GOVERNORS_PLUG_IN_LEVEL_FINISHED_TEST<br>Implemented: Yes",
            "GovernorTaxLevel": "Identifier: GovernorTaxLevel<br>Trigger requirements: character_record<br>Parameters: logic token, tax level (tax_low, tax_normal, tax_high, tax_extortionate)<br>Sample use: GovernorTaxLevel &gt; tax_high<br>Description: Is the character a governor who is taxing the populace at a particular level?<br>Battle or Strat: Either<br>Class: GOVERNOR_TAX_LEVEL<br>Implemented: Yes",
            "SettlementTaxLevel": "Identifier: SettlementTaxLevel<br>Trigger requirements: settlement<br>Parameters: logic token, tax level (tax_low, tax_normal, tax_high, tax_extortionate)<br>Sample use: SettlementTaxLevel &gt; tax_high<br>Description: Is the settlement taxing the populace at a particular level?<br>Battle or Strat: Either<br>Class: SETTLEMENT_TAX_LEVEL<br>Implemented: Yes",
            "GovernorInResidence": "Identifier: GovernorInResidence<br>Trigger requirements: settlement<br>Parameters: None<br>Sample use: GovernorInResidence<br>Description: Does the settlement lack a governor?<br>Battle or Strat: Strat<br>Class: GOVERNOR_IN_RESIDENCE<br>Implemented: Yes",
            "GovernorLoyaltyLevel": "Identifier: GovernorLoyaltyLevel<br>Trigger requirements: character_record<br>Parameters: logic token, value (loyalty_revolting, loyalty_rioting, loyalty_disillusioned, loyalty_content, loyalty_happy)<br>Sample use: GovernorLoyaltyLevel &gt; loyalty_rioting<br>Description: Is the character a governor and, if so how loyal is the settlement to him?<br>Battle or Strat: Either<br>Class: GOVERNOR_LOYALTY_LEVEL<br>Implemented: Yes",
            "SettlementLoyaltyLevel": "Identifier: SettlementLoyaltyLevel<br>Trigger requirements: settlement<br>Parameters: logic token, value (loyalty_revolting, loyalty_rioting, loyalty_disillusioned, loyalty_content, loyalty_happy)<br>Sample use: SettlementLoyaltyLevel &gt; loyalty_rioting<br>Description: How loyal is the settlement?<br>Battle or Strat: Either<br>Class: SETTLEMENT_LOYALTY_LEVEL<br>Implemented: Yes",
            "RiotRisk": "Identifier: RiotRisk<br>Trigger requirements: settlement<br>Parameters: logic token, percentage (integral, &lt; 40 since there is never more than a 40% chance of rioting)<br>Sample use: RiotRisk &gt; 30<br>Description: What is the chance of this settlement rioting?<br>Battle or Strat: Either<br>Class: RIOT_RISK<br>Implemented: Yes",
            "BuildingQueueIdleDespiteCash": "Identifier: BuildingQueueIdleDespiteCash<br>Trigger requirements: settlement<br>Parameters: None<br>Sample use: BuildingQueueIdleDespiteCash<br>Description: Is the faction exploiting its build capability to the full?<br>Battle or Strat: Either<br>Class: BUILDING_QUEUE_IDLE_DESPITE_CASH<br>Implemented: Yes",
            "TrainingQueueIdleDespiteCash": "Identifier: TrainingQueueIdleDespiteCash<br>Trigger requirements: settlement<br>Parameters: None<br>Sample use: TrainingQueueIdleDespiteCash<br>Description: Is the faction exploiting its recruitment capability to the full?<br>Battle or Strat: Either<br>Class: TRAINING_QUEUE_IDLE_DESPITE_CASH<br>Implemented: Yes",
            "I_SettlementExists": "Identifier: I_SettlementExists<br>Trigger requirements: <br>Parameters: settlement name<br>Sample use: I_SettlementExists Segesta<br>Description: Does a settlement by this name exist?<br>Battle or Strat: Strat<br>Class: SETTLEMENT_EXISTS<br>Implemented: Yes",
            "I_SettlementOwner": "Identifier: I_SettlementOwner<br>Trigger requirements: <br>Parameters: settlement name, logic token, faction type<br>Sample use: I_SettlementOwner Segesta = romans_julii<br>Description: Is this settlement owned by this faction?<br>Battle or Strat: Strat<br>Class: SETTLEMENT_OWNER<br>Implemented: Yes",
            "I_SettlementOwnerCulture": "Identifier: I_SettlementOwnerCulture<br>Trigger requirements: settlement if name == local<br>Parameters: settlement name, logic token, culture type<br>Sample use: I_SettlementOwnerCulture local = eastern<br>Description: Is this settlement owned by this faction with this culture?<br>Battle or Strat: Strat<br>Class: SETTLEMENT_OWNER_CULTURE<br>Implemented: Yes",
            "I_SettlementLevel": "Identifier: I_SettlementLevel<br>Trigger requirements: settlement if name == local<br>Parameters: settlement name, logic token, settlement level<br>Sample use: I_SettlementLevel local == huge_city<br>Description: Is this settlement at this level?<br>Battle or Strat: Strat<br>Class: SETTLEMENT_LEVEL_IS<br>Implemented: Yes",
            "AdviseFinancialBuild": "Identifier: AdviseFinancialBuild<br>Trigger requirements: best_finance_option<br>Parameters: build type (farms, mines, tax, trade)<br>Sample use: AdviseFinancialBuild = mines<br>Description: Is this the best thing to build to increase financial production?<br>Battle or Strat: Strat<br>Class: ADVISE_FINANCIAL_BUILD<br>Implemented: Yes",
            "AdviseBuild": "Identifier: AdviseBuild<br>Trigger requirements: advised_build<br>Parameters: build type (from tech tree) - use No_building for none available<br>Sample use: AdviseBuild = mines, AdviseBuild = No_building<br>Description: Is this the best thing to build?<br>Battle or Strat: Strat<br>Class: ADVISE_BUILD<br>Implemented: Yes",
            "AdviseRecruit": "Identifier: AdviseRecruit<br>Trigger requirements: <br>Parameters: unit type (from unit database) - use No_unit for none available<br>Sample use: AdviseRecruit = triarii, AdviseRecruit = No_unit<br>Description: Is this the best thing to recruit?<br>Battle or Strat: Strat<br>Class: ADVISE_RECRUIT<br>Implemented: Yes",
            "SettlementPopulationMaxedOut": "Identifier: SettlementPopulationMaxedOut<br>Trigger requirements: settlement<br>Parameters: <br>Sample use: SettlementPopulationMaxedOut<br>Description: Is the settlement full for its level? (Actually, &gt;95%)<br>Battle or Strat: Strat<br>Class: SETTLEMENT_POPULATION_MAXED_OUT<br>Implemented: Yes",
            "SettlementPopulationTooLow": "Identifier: SettlementPopulationTooLow<br>Trigger requirements: settlement<br>Parameters: <br>Sample use: SettlementPopulationTooLow<br>Description: Is the settlement too empty to recruit from?<br>Battle or Strat: Strat<br>Class: SETTLEMENT_POPULATION_TOO_LOW<br>Implemented: Yes",
            "SettlementAutoManaged": "Identifier: SettlementAutoManaged<br>Trigger requirements: settlement<br>Parameters: Automanagement type (Troops, Buildings, Mechanics)<br>Sample use: not SettlementAutoManaged Troops<br>Description: Is the settlement auto managed in a particular way?<br>Battle or Strat: Strat<br>Class: SETTLEMENT_AUTO_MANAGED<br>Implemented: Yes",
            "FeralSettlementAutoManaged": "Identifier: FeralSettlementAutoManaged<br>Trigger requirements: settlement<br>Parameters: Automanagement type (Troops, Buildings, Mechanics)<br>Sample use: not SettlementAutoManaged Troops<br>Description: Is the settlement auto managed in a particular way?<br>Battle or Strat: Strat<br>Class: FERAL_SETTLEMENT_AUTO_MANAGED<br>Implemented: Yes",
            "PercentageOfPopulationInGarrison": "Identifier: PercentageOfPopulationInGarrison<br>Trigger requirements: settlement<br>Parameters: <br>Sample use: PercentageOfPopulationInGarrison &gt; 35<br>Description: Check the percentage of population that is currently in the garrison<br>Battle or Strat: Strat<br>Class: PERCENTAGE_OF_POPULATION_IN_GARRISON<br>Implemented: Yes",
            "GarrisonToPopulationRatio": "Identifier: GarrisonToPopulationRatio<br>Trigger requirements: settlement<br>Parameters: <br>Sample use: GarrisonSettlementRatio &gt; 0.35<br>Description: Calculate the ratio of soldiers to civilians<br>Battle or Strat: Strat<br>Class: GARRISON_TO_POPULATION_RATIO<br>Implemented: Yes",
            "HealthPercentage": "Identifier: HealthPercentage<br>Trigger requirements: settlement<br>Parameters: <br>Sample use: HealthPercentage &gt; 35<br>Description: Check the health of the settlement<br>Battle or Strat: Strat<br>Class: HEALTH_PERCENTAGE<br>Implemented: Yes",
            "SettlementHasPlague": "Identifier: SettlementHasPlague<br>Trigger requirements: settlement<br>Parameters: <br>Sample use: SettlementHasPlague<br>Description: Is the settlement plague-ridden?<br>Battle or Strat: Strat<br>Class: SETTLEMENT_HAS_PLAGUE<br>Implemented: Yes",
            "IsFortGarrisoned": "Identifier: IsFortGarrisoned<br>Trigger requirements: fort<br>Parameters: <br>Sample use: IsFortGarrisoned<br>Description: Are there any troops in the fort?<br>Battle or Strat: Strat<br>Class: IS_FORT_GARRISONED<br>Implemented: Yes",
            "IsSettlementGarrisoned": "Identifier: IsSettlementGarrisoned<br>Trigger requirements: settlement<br>Parameters: <br>Sample use: IsSettlementGarrisoned<br>Description: Are there any troops in the settlement?<br>Battle or Strat: Strat<br>Class: IS_SETTLEMENT_GARRISONED<br>Implemented: Yes",
            "IsSettlementRioting": "Identifier: IsSettlementRioting<br>Trigger requirements: settlement<br>Parameters: <br>Sample use: IsSettlementRioting<br>Description: Is the settlement rioting at the moment?<br>Battle or Strat: Strat<br>Class: IS_SETTLEMENT_RIOTING<br>Implemented: Yes",
            "I_NumberUnitsInSettlement": "Identifier: I_NumberUnitsInSettlement<br>Trigger requirements: <br>Parameters: settlement, unit type (UNIT_DESCRIPTION.id), logic token, quantity<br>Sample use: I_NumberUnitsInSettlement Tarquinii roman_city_militia &lt; 5<br>Description: How many units are in the settlement?<br>Battle or Strat: Strat<br>Class: NUMBER_UNITS_IN_SETTLEMENT<br>Implemented: Yes",
            "I_AdvisorSpeechPlaying": "Identifier: I_AdvisorSpeechPlaying<br>Trigger requirements: <br>Parameters: <br>Sample use: I_AdvisorSpeechPlaying<br>Description: Detect whether advisor speech is playing or not<br>Battle or Strat: Both<br>Class: ADVISOR_SPEECH_PLAYING<br>Implemented: Yes",
            "CharacterIsLocal": "Identifier: CharacterIsLocal<br>Trigger requirements: character_record<br>Parameters: None<br>Sample use: CharacterIsLocal<br>Description: Is the character a member of the local faction?<br>Battle or Strat: Either<br>Class: CHARACTER_IS_LOCAL<br>Implemented: Yes",
            "TargetCharacterIsLocal": "Identifier: TargetCharacterIsLocal<br>Trigger requirements: target_character_record<br>Parameters: None<br>Sample use: TargetCharacterIsLocal<br>Description: Is the target character a member of the local faction?<br>Battle or Strat: Either<br>Class: TARGET_CHARACTER_IS_LOCAL<br>Implemented: Yes",
            "SettlementIsLocal": "Identifier: SettlementIsLocal<br>Trigger requirements: settlement<br>Parameters: None<br>Sample use: SettlementIsLocal<br>Description: Does the settlement belong to the local faction?<br>Battle or Strat: Either<br>Class: SETTLEMENT_IS_LOCAL<br>Implemented: Yes",
            "TargetSettlementIsLocal": "Identifier: TargetSettlementIsLocal<br>Trigger requirements: settlement<br>Parameters: None<br>Sample use: TargetSettlementIsLocal<br>Description: Does the target settlement belong to the local faction?<br>Battle or Strat: Either<br>Class: TARGET_SETTLEMENT_IS_LOCAL<br>Implemented: Yes",
            "RegionIsLocal": "Identifier: RegionIsLocal<br>Trigger requirements: region_id<br>Parameters: None<br>Sample use: RegionIsLocal<br>Description: Does the region belong to the local faction?<br>Battle or Strat: Either<br>Class: REGION_IS_LOCAL<br>Implemented: Yes",
            "TargetRegionIsLocal": "Identifier: TargetRegionIsLocal<br>Trigger requirements: region_id<br>Parameters: None<br>Sample use: TargetRegionIsLocal<br>Description: Does the target region belong to the local faction?<br>Battle or Strat: Either<br>Class: TARGET_REGION_IS_LOCAL<br>Implemented: Yes",
            "ArmyIsLocal": "Identifier: ArmyIsLocal<br>Trigger requirements: army<br>Parameters: None<br>Sample use: ArmyIsLocal<br>Description: Does the army belong to the local faction?<br>Battle or Strat: Either<br>Class: ARMY_IS_LOCAL<br>Implemented: Yes",
            "ArmyIsGarrison": "Identifier: ArmyIsGarrison<br>Trigger requirements: army<br>Parameters: None<br>Sample use: ArmyIsGarrison<br>Description: Is the army a garrison?<br>Battle or Strat: Either<br>Class: ARMY_IS_GARRISON<br>Implemented: Yes",
            "TargetArmyIsLocal": "Identifier: TargetArmyIsLocal<br>Trigger requirements: army<br>Parameters: None<br>Sample use: TargetArmyIsLocal<br>Description: Does the target army belong to the local faction?<br>Battle or Strat: Either<br>Class: TARGET_ARMY_IS_LOCAL<br>Implemented: Yes",
            "FactionIsLocal": "Identifier: FactionIsLocal<br>Trigger requirements: faction<br>Parameters: None<br>Sample use: FactionIsLocal<br>Description: Is the faction the local faction?<br>Battle or Strat: Either<br>Class: FACTION_IS_LOCAL<br>Implemented: Yes",
            "I_LocalFaction": "Identifier: I_LocalFaction<br>Trigger requirements: <br>Parameters: faction<br>Sample use: I_LocalFaction romans_julii<br>Description: Is the faction the local faction?<br>Battle or Strat: Either<br>Class: I_LOCAL_FACTION<br>Implemented: Yes",
            "TargetFactionIsLocal": "Identifier: TargetFactionIsLocal<br>Trigger requirements: target_faction<br>Parameters: None<br>Sample use: TargetFactionIsLocal<br>Description: Is the target faction the local faction?<br>Battle or Strat: Either<br>Class: TARGET_FACTION_IS_LOCAL<br>Implemented: Yes",
            "I_TurnNumber": "Identifier: I_TurnNumber<br>Trigger requirements: <br>Parameters: logic token, turn number<br>Sample use: I_TurnNumber &gt; 50<br>Description: The current turn number (starts at 0)<br>Battle or Strat: Either<br>Class: TURN_NUMBER<br>Implemented: Yes",
            "I_MapName": "Identifier: I_MapName<br>Trigger requirements: <br>Parameters: map file name<br>Sample use: not I_MapName world\\maps\\campaign\\sons_of_mars\\descr_strat.txt<br>Description: The qualified file name of the current map relative to the data directory<br>Battle or Strat: Either<br>Class: MAP_NAME<br>Implemented: Yes",
            "I_ThreadCount": "Identifier: I_ThreadCount<br>Trigger requirements: <br>Parameters: advice thread, logic token, value<br>Sample use: I_ThreadCount City_Riots_Reduce_Taxes_Thread &gt; 5<br>Description: Has this advice thread been incremented many times?<br>Battle or Strat: Strat<br>Class: THREAD_COUNT<br>Implemented: Yes",
            "I_IsTriggerTrue": "Identifier: I_IsTriggerTrue<br>Trigger requirements: <br>Parameters: trigger name<br>Sample use: I_IsTriggerTrue sample_trigger_name<br>Description: Has this advice thread been incremented many times?<br>Battle or Strat: Strat<br>Class: TRIGGER_TRUE<br>Implemented: Yes",
            "IncomingMessageType": "Identifier: IncomingMessageType<br>Trigger requirements: event<br>Parameters: message identifier<br>Sample use: IncomingMessageType senate_mission_issued<br>Description: Has this message just been received<br>Battle or Strat: Strat<br>Class: INCOMING_MESSAGE<br>Implemented: Yes",
            "I_AdvisorVerbosity": "Identifier: I_AdvisorVerbosity<br>Trigger requirements: <br>Parameters: logic token, advisor verbosity<br>Sample use: I_AdvisorVerbosity &gt; 2<br>Description: The advisor verbosity<br>Battle or Strat: Either<br>Class: ADVISOR_VERBOSITY<br>Implemented: Yes",
            "I_AdvisorVisible": "Identifier: I_AdvisorVisible<br>Trigger requirements: <br>Parameters: <br>Sample use: not I_AdvisorVisible<br>Description: Is the advisor currently visible?<br>Battle or Strat: Either<br>Class: ADVISOR_VISIBLE<br>Implemented: Yes",
            "I_CharacterSelected": "Identifier: I_CharacterSelected<br>Trigger requirements: <br>Parameters: character name<br>Sample use: I_CharacterSelected Gaius Julius<br>Description: Detect whether the character is currently selected<br>Battle or Strat: Strat<br>Class: CHARACTER_SELECTED<br>Implemented: Yes",
            "I_AgentSelected": "Identifier: I_AgentSelected<br>Trigger requirements: <br>Parameters: character type (spy, assassin, diplomat, admiral, general, named character, family)<br>Sample use: I_AgentSelected spy<br>Description: Detect whether a character of the specified type is currently selected<br>Battle or Strat: Strat<br>Class: AGENT_SELECTED<br>Implemented: Yes",
            "I_SettlementSelected": "Identifier: I_SettlementSelected<br>Trigger requirements: <br>Parameters: settlement name<br>Sample use: I_SettlementSelected Roma<br>Description: Detect whether the settlement is currently selected<br>Battle or Strat: Strat<br>Class: SETTLEMENT_SELECTED<br>Implemented: Yes",
            "ShortcutTriggered": "Identifier: ShortcutTriggered<br>Trigger requirements: resource_description<br>Parameters: element id, function id (see data/descr_shortcuts.txt)<br>Sample use: ShortcutTriggered camera step_l<br>Description: Detect whether a keyboard shortcut has been pressed<br>Battle or Strat: Both<br>Class: SHORTCUT_TRIGGERED<br>Implemented: Yes",
            "I_AdvancedStatsScrollIsOpen": "Identifier: I_AdvancedStatsScrollIsOpen<br>Trigger requirements: <br>Parameters: <br>Sample use: I_AdvancedStatsScrollIsOpen<br>Description: Detect whether the advanced stats scroll is open<br>Battle or Strat: Strat<br>Class: I_ADVANCED_STATS_SCROLL_IS_OPEN<br>Implemented: Yes",
            "ButtonPressed": "Identifier: ButtonPressed<br>Trigger requirements: resource_description<br>Parameters: button id (see available_ui_elements.txt)<br>Sample use: ButtonPressed character_info_zoom_to_button<br>Description: Detect whether a button has been pressed<br>Battle or Strat: Both<br>Class: BUTTON_PRESSED<br>Implemented: Yes",
            "ScrollOpened": "Identifier: ScrollOpened<br>Trigger requirements: resource_description<br>Parameters: scroll id (see available_ui_elements.txt)<br>Sample use: ScrollOpened own_character_info_scroll<br>Description: Test for when a named scroll is opened<br>Battle or Strat: Both - Depends on scroll requested<br>Class: SCROLL_OPENED<br>Implemented: Yes",
            "ScrollClosed": "Identifier: ScrollClosed<br>Trigger requirements: resource_description<br>Parameters: scroll id (see available_ui_elements.txt)<br>Sample use: ScrollClosed own_character_info_scroll<br>Description: Test for when a named scroll is closed<br>Battle or Strat: Both - Depends on scroll requested<br>Class: SCROLL_CLOSED<br>Implemented: Yes",
            "ScrollAdviceRequested": "Identifier: ScrollAdviceRequested<br>Trigger requirements: resource_description<br>Parameters: scroll id (see available_ui_elements.txt)<br>Sample use: ScrollAdviceRequested own_character_info_scroll<br>Description: Test for which scroll advice was requested on<br>Battle or Strat: Both - Depends on scroll requested<br>Class: SCROLL_ADVICE_REQUESTED<br>Implemented: Yes",
            "I_AnnotationDisplayed": "Identifier: I_AnnotationDisplayed<br>Trigger requirements: <br>Parameters: Annotation image name<br>Sample use: I_AnnotationDisplayed set_general<br>Description: Detect what annotation scroll is showing<br>Battle or Strat: Yes<br>Class: FERAL_ANNOTATION_DISPLAYED<br>Implemented: Yes",
            "FeralUIType": "Identifier: FeralUIType<br>Trigger requirements: <br>Parameters: UI Type<br>Sample use: FeralUIType phone<br>Description: Detect what UI we are using<br>Battle or Strat: Yes<br>Class: FERAL_UI_TYPE<br>Implemented: Yes",
            "MerchantIsAvailableToBuild": "Identifier: MerchantIsAvailableToBuild<br>Trigger requirements: ET_BUILDING_COMPLETED<br>Parameters: faction, building<br>Sample use: MerchantIsAvailableToBuild<br>Description: Building that was built, can recruit merchants<br>Battle or Strat: Strat<br>Class: MERCHANT_IS_AVAILABLE_TO_BUILD<br>Implemented: Yes",
            "SettlementHasDamagedBuilding": "Identifier: SettlementHasDamagedBuilding<br>Trigger requirements: SETTLEMENT_EVENT_TRIGGER<br>Parameters: settlement<br>Sample use: SettlementHasDamagedBuilding<br>Description: Settlement has at least one damaged building<br>Battle or Strat: Strat<br>Class: SETTLEMENT_HAS_DAMAGED_BUILDING<br>Implemented: Yes",
            "LocalPlayerHasReinforcements": "Identifier: LocalPlayerHasReinforcements<br>Trigger requirements: ET_PRE_BATTLE_PANEL_OPEN<br>Parameters: <br>Sample use: LocalPlayerHasReinforcements<br>Description: Player has at least one reinforcement army<br>Battle or Strat: Strat<br>Class: LOCAL_PLAYER_HAS_REINFORCEMENTS<br>Implemented: Yes",
        }
        self.console_command_dict = {
            "add_expenditure": "Identifier: add_expenditure<br>Parameters: &lt;settlement/faction&gt; &lt;string_id&gt; &lt;amount&gt;<br>Description: adds/overwrites an existing custom expenditure<br>Help: add_expenditure &lt;settlement/faction&gt; &lt;string_id&gt; &lt;amount&gt; : adds/overwrites an existing custom expenditure",
            "add_income": "Identifier: add_income<br>Parameters: &lt;settlement/faction_type&gt; &lt;string_id&gt; &lt;amount&gt; &lt;opt:maintained&gt;<br>Description: adds/overwrites an existing custom income<br>Help: add_income &lt;settlement/faction_type&gt; &lt;string_id&gt; &lt;amount&gt; &lt;opt:maintained&gt;: adds/overwrites an existing custom income",
            "add_money": "Identifier: add_money<br>Parameters: &lt;opt:faction_type&gt; &lt;amount&gt;<br>Description: adds an amount of money to a faction's coffers, can be negative, default is player faction<br>Help: add_money &lt;opt:faction_type&gt; &lt;amount&gt; : adds an amount of money to a faction's coffers, can be negative, default is player faction",
            "add_population": "Identifier: add_population<br>Parameters: &lt;settlement_name&gt; &lt;amount&gt;<br>Description: adds an amount of population to a settlement, can be negative<br>Help: add_population &lt;settlement_name&gt; &lt;amount&gt; : adds an amount of population to a settlement, can be negative",
            "add_soldiers": 'Identifier: add_soldiers<br>Parameters: &lt;settlement/character_name&gt; &lt;percentage&gt; &lt;max/current&gt; &lt;unit_id&gt; &lt;opt:how_many&gt; &lt;opt:sorting_method&gt;<br>Description: adds/removes soldiers from one or more units of the specified type ("all" can be provided for the unit_id) (Sorting Methods - "exp", "weapons_armour", "soldier_count", "random")<br>Help: add_soldiers &lt;settlement/character_name&gt; &lt;percentage&gt; &lt;max/current&gt; &lt;unit_id&gt; &lt;opt:how_many&gt; &lt;opt:sorting_method&gt;: adds/removes soldiers from one or more units of the specified type ("all" can be provided for the unit_id) (Sorting Methods - "exp", "weapons_armour", "soldier_count", "random")',
            "all_ai": "Identifier: all_ai<br>Parameters: <br>Description: sets the users faction to be controlled by ai; may not act correctly as ai faction<br>Help: all_ai : sets the users faction to be controlled by ai; may not act correctly as ai faction",
            "auto_win": "Identifier: auto_win<br>Parameters: &lt;attacker/defender&gt;<br>Description: the attacker or defender wins the next autoresolved battle<br>Help: auto_win &lt;attacker/defender&gt;: the attacker or defender wins the next autoresolved battle",
            "become_protector": "Identifier: become_protector<br>Parameters: &lt;faction_a&gt; &lt;opt:faction_b&gt;<br>Description: sets faction_b as a protectorate of faction_a<br>Help: become_protector &lt;faction_a&gt; &lt;opt:faction_b&gt; : sets faction_b as a protectorate of faction_a",
            "bestbuy": "Identifier: bestbuy<br>Parameters: <br>Description: sells units cheaper<br>Help: bestbuy : sells units cheaper",
            "capture_settlement": "Identifier: capture_settlement<br>Parameters: &lt;settlement name&gt; &lt;opt:faction_type&gt;<br>Description: evicts any resident characters and armies and gives the settlement to the specifed faction (defaults to local player)<br>Help: capture_settlement &lt;settlement name&gt; &lt;opt:faction_type&gt; : evicts any resident characters and armies and gives the settlement to the specifed faction (defaults to local player)",
            "change_character_faction": "Identifier: change_character_faction<br>Parameters: &lt;character&gt; &lt;faction&gt;<br>Description: transfers the ownership of the specified character to the specified faction<br>Help: change_character_faction &lt;character&gt; &lt;faction&gt;: transfers the ownership of the specified character to the specified faction",
            "character_reset": "Identifier: character_reset<br>Parameters: <br>Description: resets the character back to it's start of turn settings<br>Help: character_reset : resets the character back to it's start of turn settings",
            "check_persistent_var": "Identifier: check_persistent_var<br>Parameters: &lt;variable name&gt;<br>Description: displays the value of a persistent counter<br>Help: check_persistent_var &lt;variable name&gt; : displays the value of a persistent counter",
            "control": "Identifier: control<br>Parameters: &lt;faction_type&gt;<br>Description: switches player control to specified faction; old faction may not act correctly as ai faction<br>Help: control &lt;faction_type&gt; : switches player control to specified faction; old faction may not act correctly as ai faction",
            "crash": "Identifier: crash<br>Parameters: <br>Description: Crashes the game. Seriously. Use at your own risk.<br>Help: crash : Crashes the game. Seriously. Use at your own risk.",
            "create_assassin": "Identifier: create_assassin<br>Parameters: <br>Description: &lt;settlement&gt;<br>Help: create_assassin &lt;settlement&gt;",
            "create_building": "Identifier: create_building<br>Parameters: &lt;settlement_name&gt; &lt;building_level_id&gt;<br>Description: creates a building of the specified type in a settlement; for building level id's see export_descr_building.txt<br>Help: create_building &lt;settlement_name&gt; &lt;building_level_id&gt; : creates a building of the specified type in a settlement; for building level id's see export_descr_building.txt",
            "create_diplomat": "Identifier: create_diplomat<br>Parameters: <br>Description: &lt;settlement&gt;<br>Help: create_diplomat &lt;settlement&gt;",
            "create_merchant": "Identifier: create_merchant<br>Parameters: <br>Description: &lt;settlement&gt;<br>Help: create_merchant &lt;settlement&gt;",
            "create_spy": "Identifier: create_spy<br>Parameters: <br>Description: &lt;settlement&gt;<br>Help: create_spy &lt;settlement&gt;",
            "create_unit": "Identifier: create_unit<br>Parameters: &lt;settlement/character_name&gt; &lt;unit_id&gt; &lt;opt:how_many&gt; &lt;opt:exp/armour/weapon&gt;<br>Description: creates one or more units of the specified type<br>Help: create_unit &lt;settlement/character_name&gt; &lt;unit_id&gt; &lt;opt:how_many&gt; &lt;opt:exp/armour/weapon&gt;: creates one or more units of the specified type",
            "date": "Identifier: date<br>Parameters: &lt;year&gt;<br>Description: changes the campaign date to the given year<br>Help: date &lt;year&gt; : changes the campaign date to the given year",
            "destroy_unit": 'Identifier: destroy_unit<br>Parameters: &lt;settlement/character_name&gt; &lt;unit_id&gt; &lt;opt:how_many&gt; &lt;opt:sorting_method&gt;<br>Description: destroys one or more units of the specified type (Sorting Methods - "exp", "weapons_armour", "soldier_count", "random")<br>Help: destroy_unit &lt;settlement/character_name&gt; &lt;unit_id&gt; &lt;opt:how_many&gt; &lt;opt:sorting_method&gt;: destroys one or more units of the specified type (Sorting Methods - "exp", "weapons_armour", "soldier_count", "random")',
            "diplomacy_mission": "Identifier: diplomacy_mission<br>Parameters: &lt;ai_faction&gt; &lt;target_faction&gt; &lt;mission_type&gt; &lt;opt:mission_target&gt;<br>Description: creates a diplomacy mission<br>Help: diplomacy_mission &lt;ai_faction&gt; &lt;target_faction&gt; &lt;mission_type&gt; &lt;opt:mission_target&gt; : creates a diplomacy mission",
            "diplomatic_stance": "Identifier: diplomatic_stance<br>Parameters: &lt;faction_a&gt; &lt;faction_b&gt; &lt;allied/neutral/war&gt;<br>Description: Set the diplomatic stance between the two factions<br>Help: diplomatic_stance &lt;faction_a&gt; &lt;faction_b&gt; &lt;allied/neutral/war&gt;:  Set the diplomatic stance between the two factions",
            "disable_ai": "Identifier: disable_ai<br>Parameters: [opt: tac | sub | dip | name]<br>Description: disables all (default) or part of the ai for all factions<br>Help: disable_ai [opt: tac | sub | dip | name]: disables all (default) or part of the ai for all factions",
            "dump_diplo_stats": "Identifier: dump_diplo_stats<br>Parameters: &lt;opt:faction_a&gt; &lt;opt:faction_b&gt;<br>Description: dumps the current diplomacy stats to file<br>Help: dump_diplo_stats &lt;opt:faction_a&gt; &lt;opt:faction_b&gt; : dumps the current diplomacy stats to file",
            "dump_proposition_stats": "Identifier: dump_proposition_stats<br>Parameters: &lt;opt:faction_a&gt; &lt;opt:faction_b&gt;<br>Description: dumps the current diplomacy proposition stats to file<br>Help: dump_proposition_stats &lt;opt:faction_a&gt; &lt;opt:faction_b&gt; : dumps the current diplomacy proposition stats to file",
            "force_battle_defeat": "Identifier: force_battle_defeat<br>Parameters: <br>Description: forces the local player's alliance to win the battle, completely destroying the enemy alliance<br>Help: force_battle_defeat : forces the local player's alliance to win the battle, completely destroying the enemy alliance",
            "force_battle_victory": "Identifier: force_battle_victory<br>Parameters: <br>Description: forces the local player's alliance to win the battle, completely destroying the enemy alliance<br>Help: force_battle_victory : forces the local player's alliance to win the battle, completely destroying the enemy alliance",
            "force_diplomacy": "Identifier: force_diplomacy<br>Parameters: &lt;accept/decline/off&gt;<br>Description: Forces the negotiator to accept or decline a proposition<br>Help: force_diplomacy &lt;accept/decline/off&gt;:  Forces the negotiator to accept or decline a proposition",
            "gesture_para": "Identifier: gesture_para<br>Parameters: &lt;parameter name&gt; &lt;value&gt;<br>Description: Get or set paramters that affect gesture navigation behaviour.<br>Help: gesture_para &lt;parameter name&gt; &lt;value&gt; : Get or set paramters that affect gesture navigation behaviour.",
            "give_ancillary": "Identifier: give_ancillary<br>Parameters: &lt;charactername&gt; &lt;ancillary name&gt;<br>Description: gives the character an ancillary<br>Help: give_ancillary &lt;charactername&gt; &lt;ancillary name&gt; : gives the character an ancillary",
            "give_everything": "Identifier: give_everything<br>Parameters: faction_type &lt;opt:faction_type&gt;<br>Description: gives all this faction's regions, characters and armies to the slaves (or the second faction).<br>Help: give_everything faction_type &lt;opt:faction_type&gt; : gives all this faction's regions, characters and armies to the slaves (or the second faction).",
            "give_trait": "Identifier: give_trait<br>Parameters: &lt;charactername&gt; &lt;trait name&gt; &lt;opt:level&gt;<br>Description: gives the character a trait at level (default = level 1)<br>Help: give_trait &lt;charactername&gt; &lt;trait name&gt; &lt;opt:level&gt;: gives the character a trait at level (default = level 1)",
            "give_trait_points": "Identifier: give_trait_points<br>Parameters: &lt;charactername&gt; &lt;trait name&gt; &lt;points&gt;<br>Description: gives the character points for trait<br>Help: give_trait_points &lt;charactername&gt; &lt;trait name&gt; &lt;points&gt;: gives the character points for trait",
            "go_to_capital": "Identifier: go_to_capital<br>Parameters: &lt;faction type&gt;<br>Description: moves the cameras target to the factions capital<br>Help: go_to_capital &lt;faction type&gt;: moves the cameras target to the factions capital",
            "go_to_char": "Identifier: go_to_char<br>Parameters: &lt;character name&gt;<br>Description: moves the cameras target to the specified character<br>Help: go_to_char &lt;character name&gt;: moves the cameras target to the specified character",
            "go_to_pos": "Identifier: go_to_pos<br>Parameters: &lt;x pos&gt; &lt;y pos&gt;<br>Description: moves the cameras target to the specified position<br>Help: go_to_pos &lt;x pos&gt; &lt;y pos&gt;: moves the cameras target to the specified position",
            "go_to_sett": "Identifier: go_to_sett<br>Parameters: &lt;settlement name&gt;<br>Description: moves the cameras target to the specified settlement<br>Help: go_to_sett &lt;settlement name&gt;: moves the cameras target to the specified settlement",
            "halt_ai": "Identifier: halt_ai<br>Parameters: &lt;opt:factiontypename&gt;<br>Description: halts the turn sequence just before the start of the specified faction's turn, or the current faction if no faction given<br>Help: halt_ai &lt;opt:factiontypename&gt; : halts the turn sequence just before the start of the specified faction's turn, or the current faction if no faction given",
            "imgui_set": "Identifier: imgui_set<br>Parameters: &lt;name&gt; &lt;variable type&gt; &lt;value(s)&gt;<br>Description: Sets the specified imgui variable to the provided value. (NOTE - name is case sensitive) (Variable types - checkbox, radiobutton, float, colour, int)<br>Help: imgui_set &lt;name&gt; &lt;variable type&gt; &lt;value(s)&gt; : Sets the specified imgui variable to the provided value. (NOTE - name is case sensitive) (Variable types - checkbox, radiobutton, float, colour, int)",
            "invulnerable_general": "Identifier: invulnerable_general<br>Parameters: &lt;character_name&gt;<br>Description: makes that named general invulnerable in battle<br>Help: invulnerable_general &lt;character_name&gt; : makes that named general invulnerable in battle",
            "jericho": "Identifier: jericho<br>Parameters: <br>Description: and the walls came a-tumblin' down<br>Help: jericho : and the walls came a-tumblin' down",
            "kill_army": "Identifier: kill_army<br>Parameters: &lt;character_name&gt;&lt;opt:dont_show_death_anim&gt;<br>Description: kills an army commanded by a character with the given name<br>Help: kill_army &lt;character_name&gt;&lt;opt:dont_show_death_anim&gt; : kills an army commanded by a character with the given name",
            "kill_character": "Identifier: kill_character<br>Parameters: &lt;character_name&gt;<br>Description: kills a character with the given name<br>Help: kill_character &lt;character_name&gt; : kills a character with the given name",
            "kill_faction": "Identifier: kill_faction<br>Parameters: &lt;faction_type&gt;<br>Description: removes the faction from the game<br>Help: kill_faction &lt;faction_type&gt; : removes the faction from the game",
            "list_ancillaries": "Identifier: list_ancillaries<br>Parameters: <br>Description: lists all the available ancillaries<br>Help: list_ancillaries : lists all the available ancillaries",
            "list_characters": "Identifier: list_characters<br>Parameters: &lt;opt:faction_type&gt;<br>Description: lists all the characters in the world or those belonging to a faction<br>Help: list_characters &lt;opt:faction_type&gt; : lists all the characters in the world or those belonging to a faction",
            "list_traits": "Identifier: list_traits<br>Parameters: <br>Description: lists all the available traits<br>Help: list_traits : lists all the available traits",
            "list_units": "Identifier: list_units<br>Parameters: &lt;character/settlement name&gt;<br>Description: lists all of the units in an army, with details.<br>Help: list_units &lt;character/settlement name&gt; : lists all of the units in an army, with details.",
            "move_character": "Identifier: move_character<br>Parameters: &lt;name&gt; &lt;x&gt;,&lt;y&gt;<br>Description: moves named character to position on campaign map<br>Help: move_character &lt;name&gt; &lt;x&gt;,&lt;y&gt; : moves named character to position on campaign map",
            "mp": "Identifier: mp<br>Parameters: &lt;charactername&gt; &lt;amount&gt;<br>Description: gives the character movement points<br>Help: mp &lt;charactername&gt; &lt;amount&gt;: gives the character movement points",
            "oliphaunt": "Identifier: oliphaunt<br>Parameters: <br>Description: the biggest around<br>Help: oliphaunt : the biggest around",
            "paths_per_tick": "Identifier: paths_per_tick<br>Parameters: &lt;num&gt;<br>Description: number of paths to process per game tick<br>Help: paths_per_tick &lt;num&gt; : number of paths to process per game tick",
            "process_cq": "Identifier: process_cq<br>Parameters: &lt;settlement&gt;<br>Description: Completes all (possible) construction pending in queue<br>Help: process_cq &lt;settlement&gt;:  Completes all (possible) construction pending in queue",
            "process_rq": "Identifier: process_rq<br>Parameters: &lt;settlement&gt;<br>Description: Completes all (possible) recruitment pending in queue<br>Help: process_rq &lt;settlement&gt;:  Completes all (possible) recruitment pending in queue",
            "puppify_my_love": "Identifier: puppify_my_love<br>Parameters: <br>Description: ??????<br>Help: ??????",
            "reload_ui": "Identifier: reload_ui<br>Parameters: reload_ui<br>Description: Reload the Feral edits to the UI<br>Help: reload_ui: Reload the Feral edits to the UI",
            "reseed_random": "Identifier: reseed_random<br>Parameters: <br>Description: Reseed the random number generator<br>Help: reseed_random: Reseed the random number generator",
            "run_ai": "Identifier: run_ai<br>Parameters: [opt:x]<br>Description: re-starts an ai turn sequence after disableai or haltai has been triggered;  use x to also re-enable all parts of the ai which have been individually disabled<br>Help: run_ai [opt:x]: re-starts an ai turn sequence after disableai or haltai has been triggered;  use x to also re-enable all parts of the ai which have been individually disabled",
            "season": "Identifier: season<br>Parameters: &lt;season&gt;<br>Description: changes the campaign season to the given season<br>Help: season &lt;season&gt; : changes the campaign season to the given season",
            "set_building_health": "Identifier: set_building_health<br>Parameters: &lt;settlement_name&gt; &lt;building_chain&gt; &lt;final health percent&gt;<br>Description: sets health of a building of the specified type (eg core_building)  in a settlement, so that the final health percentage is as specified; for building chains see export_descr_building.txt<br>Help: set_building_health &lt;settlement_name&gt; &lt;building_chain&gt; &lt;final health percent&gt;:  sets health of a building of the specified type (eg core_building)  in a settlement, so that the final health percentage is as specified; for building chains see export_descr_building.txt",
            "set_fow": "Identifier: set_fow<br>Parameters: [on|off]<br>Description: Explicitly set the fog of war state<br>Help: set_fow [on|off] : Explicitly set the fog of war state",
            "set_heir": "Identifier: set_heir<br>Parameters: &lt;character&gt;<br>Description: sets the specified character as the faction heir<br>Help: set_heir &lt;character&gt; : sets the specified character as the faction heir",
            "set_leader": "Identifier: set_leader<br>Parameters: &lt;character&gt;<br>Description: sets the specified character as the faction leader<br>Help: set_leader &lt;character&gt; : sets the specified character as the faction leader",
            "set_move_points": "Identifier: set_move_points<br>Parameters: &lt;move_points&gt;<br>Description: set the specified characters movement points<br>Help: set_move_points &lt;move_points&gt;: set the specified characters movement points",
            "show_cursorstat": "Identifier: show_cursorstat<br>Parameters: <br>Description: shows the cursor position and region id<br>Help: show_cursorstat : shows the cursor position and region id",
            "show_ui": "Identifier: show_ui<br>Parameters: <br>Description: Toggles the UI on or off as per the show_ui script command<br>Help: Toggles the UI on or off as per the show_ui script command",
            "showmethemoney": "Identifier: showmethemoney<br>Parameters: <br>Description: Type this to get instantly minted<br>Help: showmethemoney : Type this to get instantly minted",
            "surrender_regions": 'Identifier: surrender_regions<br>Parameters: &lt;opt: horde&gt; &lt;opt:faction_type&gt; &lt;opt:faction_type&gt;<br>Description: gives all this faction\'s regions to the slaves (or the second faction). "horde" surrenders regions for all factions that can be hordes<br>Help: surrender_regions &lt;opt: horde&gt; &lt;opt:faction_type&gt; &lt;opt:faction_type&gt; : gives all this faction\'s regions to the slaves (or the second faction). "horde" surrenders regions for all factions that can be hordes',
            "swap_unit": 'Identifier: swap_unit<br>Parameters: &lt;settlement/character_name&gt; &lt;unit_id&gt; &lt;unit_id&gt; &lt;opt:how_many&gt; &lt;opt:sorting_method&gt;<br>Description: swaps one or more units of the specified type with a unit of another type (Sorting Methods - "exp", "weapons_armour", "soldier_count", "random")<br>Help: swap_unit &lt;settlement/character_name&gt; &lt;unit_id&gt; &lt;unit_id&gt; &lt;opt:how_many&gt; &lt;opt:sorting_method&gt;: swaps one or more units of the specified type with a unit of another type (Sorting Methods - "exp", "weapons_armour", "soldier_count", "random")',
            "test_message": "Identifier: test_message<br>Parameters: <br>Description: Test the event message specified in descr_event_enums.txt<br>Help: Test the event message specified in descr_event_enums.txt",
            "test_victory_scroll": "Identifier: test_victory_scroll<br>Parameters: &lt;faction victor&gt; &lt;short campaign (true/false)&gt;<br>Description: Opens up the victory scroll declaring that the given faction is the victor If no faction is declared then the 'timeout' scroll is displayed<br>Help: test_victory_scroll &lt;faction victor&gt; &lt;short campaign (true/false)&gt;:  Opens up the victory scroll declaring that the given faction is the victor If no faction is declared then the 'timeout' scroll is displayed",
            "toggle_automanage": "Identifier: toggle_automanage<br>Parameters: &lt;charactername&gt; &lt;optional:state&gt;<br>Description: toggles whether the specified character is automanaged<br>Help: toggle_automanage &lt;charactername&gt; &lt;optional:state&gt;: toggles whether the specified character is automanaged",
            "toggle_fow": "Identifier: toggle_fow<br>Parameters: <br>Description: toggles the fog of war on or off<br>Help: toggle_fow : toggles the fog of war on or off",
            "toggle_path_draw": "Identifier: toggle_path_draw<br>Parameters: <br>Description: toggles the ability to draw custom movement paths<br>Help: toggle_path_draw : toggles the ability to draw custom movement paths",
            "toggle_perfect_spy": "Identifier: toggle_perfect_spy<br>Parameters: <br>Description: toggles everyone's spying ability to perfect and infinite range, and off again<br>Help: toggle_perfect_spy : toggles everyone's spying ability to perfect and infinite range, and off again",
            "toggle_restrictcam": "Identifier: toggle_restrictcam<br>Parameters: <br>Description: toggles camera restrictions on or off<br>Help: toggle_restrictcam : toggles camera restrictions on or off",
            "toggle_terrain": "Identifier: toggle_terrain<br>Parameters: &lt;opt:region/tiletype/climate/choke/landing/frontier/features/frontier_defend&gt;<br>Description: toggles the terrain to display various data sets, no param resets to normal<br>Help: toggle_terrain &lt;opt:region/tiletype/climate/choke/landing/frontier/features/frontier_defend&gt; : toggles the terrain to display various data sets, no param resets to normal",
            "victory": "Identifier: victory<br>Parameters: &lt;faction&gt; &lt;short&gt;<br>Description: show victory message for faction for short or long campaign.<br>Help: victory &lt;faction&gt; &lt;short&gt;: show victory message for faction for short or long campaign.",
            "vulnerable_general": "Identifier: vulnerable_general<br>Parameters: &lt;character_name&gt;<br>Description: makes that named general vulnerable in battle (turns off invulnerabilty<br>Help: vulnerable_general &lt;character_name&gt; : makes that named general vulnerable in battle (turns off invulnerabilty",
            "zoom": "Identifier: zoom<br>Parameters: <br>Description: zooms to specified aerial map zoom<br>Help: zoom : zooms to specified aerial map zoom",
        }
